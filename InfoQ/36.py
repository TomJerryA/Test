<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /></head><body><h3>ゼロから始めるドメイン駆動設計</h3><p><a target="_blank" href="http://www.infoq.com/news/2013/10/ddd-ground-up"><em>原文(投稿日：2013/10/30)へのリンク</em></a></p>
<div class="article_page_left news_container text_content_container"> 
 <div class="text_info"> 
  <p>ドメインはビジネスを説明する。ドメインは、企業活動を推進するコンセプトとロジックの集合だ。<a href="http://en.wikipedia.org/wiki/Domain-driven_design">ドメイン駆動設計</a>(DDD)でアプリケーションを作る場合、ドメインが最も重要な要素となる。.NETプラットフォームで開発を行っているスウェーデンのウェブ開発者である<a href="http://dotnetcodr.com/about/">Andras Nemes氏</a>はドメイン駆動設計の原則に従ったウェブサービス開発についての連載ブログ記事の<a href="http://dotnetcodr.com/2013/09/12/a-model-net-web-service-based-on-domain-driven-design-part-1-introduction/">初回</a>で このように説明している。</p> 
  <p>テクノロジー駆動の手法では技術選択がドメインに影響を与えてしまうことが簡単に起きる。しかし、DDDでは方向が逆だ。ドメインはアプリケーションにとって最も重要な構成要素であり、技術はさまざまな形態をを取りうる実装の細部にすぎない。氏はドメインはビジネスの要件に反応し、ドメインの変化は技術の選択にも影響を及ぼす。</p> 
  <p>氏は連載の目的はDDDのすべての側面をカバーすることではない、と明言している。氏の目的はDDDの最も重要な概念を盛り込んだ.NETソリューションを作成して、DDDに基づくプロジェクトのひな形として使ってもらうことだ。また、DDD初心者の開発者にも益があるように、取り上げるすべての概念について説明をしている。</p> 
  <p>次のレイヤを備えたすべてのソリューションを提供することが目的だ。</p> 
  <ul> 
   <li>インフラストラクチャ: 横断的な関心事を乗せるインフラストラクチャサービス</li> 
   <li>リポジトリ: データアクセスと永続化レイヤ</li> 
   <li>ドメイン: ビジネスエンティティとロジックを備えたドメインレイヤ。アプリケーションの中心</li> 
   <li>アプリケーションサービス: 利用者にアクションを提供する薄いレイヤ</li> 
   <li>ウェブ: アプリケーションの利用者</li> 
  </ul> 
  <p>DDDツアーを始めるにあたって、氏はエンティティ、バリューオブジェクト、アグリゲートなどの主要な概念をガイドラインとともに説明している。さらに各レイヤの作成について連載に書いていくつもりだ。</p> 
  <p>ドメインが中心になることで、密結合を従来のレイヤ型ソリューションにある密結合を低減してくれる、というのが氏の考えだ。また、リポジトリの実装という最も技術駆動なレイヤを抽象化して隠蔽し、取り替え可能にもしているようだ。</p> 
 </div> 
</div><br><br><br><br><br><br></body></html>