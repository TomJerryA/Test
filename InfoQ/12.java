<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /></head><body><h3>Akka Toolkit 2.3 with Java 8 and Persistence Support</h3><p>The latest version of the <a href="http://akka.io/">Akka</a> toolkit comes with persistence enabling stateful actors to persist their internal state. The recently released <a href="http://akka.io/news/2014/03/05/akka-2.3.0-released.html">version 2.3.0</a> is also prepared for support of Java 8 lambda expressions.</p>
<p>In <a href="http://doc.akka.io/docs/akka/2.3.0/scala/persistence.html">Akka persistence</a>, instead of current state, each change to an actor’s state are persisted. Changes are appended to a journal and an actors’ internal state can be rebuilt by replaying the stored changes. Support for event sourcing and at-least-once message deliveries is also provided.<br /> Using Java 8 and lambda expressions, both <a href="http://doc.akka.io/docs/akka/2.3.0/java/lambda-actors.html">Actors</a> and <a href="http://doc.akka.io/docs/akka/2.3.0/java/lambda-fsm.html">Finite State Machines</a> (<a href="http://en.wikipedia.org/wiki/Finite-state_machine">FSM</a>) may now be implemented using lambda syntax thus removing the need for declaring anonymous inner classes.<br /> Both the persistence module and the lambda support are marked as <em>experimental</em> with an ambition to improve the API based on feedback from users.</p>
<p><a href="http://akka.io/news/2014/03/05/akka-2.3.0-released.html">Other improvements</a> include:</p>
<ul> 
 <li>A cluster can from being partially unreachable now come back to working as normally again with the failure condition cleared when the affected nodes becomes responsive.</li> 
 <li>Cluster sharding can be used to distribute stateful actors over several nodes when the actors consume more resources than one machine can supply.</li> 
 <li>Removal of the experimental label from Akka IO package, but with the Pipeline infrastructure discontinued.</li> 
 <li>The <a href="http://en.wikipedia.org/wiki/OSGi">OSGi</a> support has been reworked to make akka-actor an OSGi bundle.</li> 
</ul>
<p>The <a href="http://akka.io/docs/">documentation</a> together with a <a href="http://doc.akka.io/docs/akka/2.3.0/intro/getting-started.html">getting started</a> guide has been updated to reflect the changes in the framework. Akka is also part of a larger sample of a <a href="http://typesafe.com/platform/getstarted">reactive platform</a>.<br /> The new release contains some structural modifications requiring <a href="http://doc.akka.io/docs/akka/snapshot/project/migration-guide-2.2.x-2.3.x.html">code changes</a> when upgrading from 2.2.*. Upgrading from earlier version may require some extra steps.</p>
<p>The Akka toolkit is an implementation of the <a href="http://en.wikipedia.org/wiki/Actor_model">Actor Model</a>, available with both a Java and a Scala API. This 2.3 release is the first step in a larger <a href="https://docs.google.com/document/d/18W9-fKs55wiFNjXL9q50PYOnR7-nnsImzJqHOPPbM4E/pub">milestone</a> planned for second half of 2014.<br /> Akka is an open source product, licensed under the Apache 2 License.</p>
<p><a href="http://vaughnvernon.co/"> Vaughn Vernon</a>, author of <a href="http://www.informit.com/store/implementing-domain-driven-design-9780321834577">Implementing Domain-Driven Design</a>, <a href="http://www.infoq.com/news/2013/11/vernon-reactive-ddd">talked</a> last year about actor model in reactive domain-driven design and in an earlier <a href="http://www.infoq.com/news/2013/06/actor-model-ddd">talk</a> about the foundation for actor model together with DDD.</p>
<p>A <a href="https://groups.google.com/forum/#!forum/akka-user">forum</a> for Akka users is available with more than 3000 members.</p><br><br><br><br><br><br></body></html>