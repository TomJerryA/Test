<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /></head><body><h3>Eclipse Orion 2.0 Now Runs Locally on Node.js</h3><p><a href="http://download.eclipse.org/orion/drops/R-2.0-201302221257/index.html">Eclipse Orion 2.0</a> has been recently released with support for Node.js, Projects, more and improved Shell commands, better JavaScript code assist and performance improvements.</p> 
<p>As initially planned the Orion team has released the <a href="http://download.eclipse.org/orion/drops/R-2.0-201302221257/index.html">second stable version</a> of the web-based JavaScript IDE four months after the <a href="http://www.infoq.com/news/2012/10/Eclipse-Orion-1;jsessionid=6DA3A88DF4CA3C1B15AA0F10A9474803">initial one</a>. Some of the new features included are:</p> 
<p><strong>Orionode. </strong>The server counterpart of the IDE has been reimplemented in Node.js for local usage. Developers can now have a server with a very small footprint on their machine for local editing of files.</p> 
<p><a href="https://npmjs.org/package/orion">Orionode</a> is not yet on par with the initial server written in Java, supporting the following features so far: basic navigator, editor and plug-in operations, shell commands for supporting npm and running Node applications, client caching of static content, and gzip. Orionode is not replacing the Java server, targeting only local installations.</p> 
<p><strong>Projects.</strong> The <a href="http://planetorion.org/news/2013/03/orion-2-0-release/">Project plug-in</a> enables developers to create units of work comprising various resources linked to external sources and targets. The purpose is to increase modularity for better resource management for larger projects. Currently, Orion supports HTML5 and SFTP projects. The&nbsp;later can be used to <a href="http://www.hickory.ca/2013/01/28/managing-an-sftp-type-website-using-orion/">remotely view and edit resources of an SFTP server</a>.</p> 
<p><strong>Shell.</strong> A number of commands have been added to the Shell: <em>plugins</em> for dealing with plugins, <em>service</em> for listing available instances of a service, and <em>clear</em> for clearing the screen.</p> 
<p>The <a href="http://planetorion.org/news/2013/02/orion-2-0-whats-new-for-shell-page-plug-ins/">Shell commands can now pass/return 2 new parameter/return types</a>: <em>blob&nbsp;</em>– a JS object representing binary data-, and <em>file</em>&nbsp;– a file or a folder belonging to the workspace. If the output type of a command is <em>file</em> then the result is dumped into a file. Multiple files including directories and their entire content can be passed as parameters to commands.</p> 
<p><strong>Content assist.</strong> The <a href="http://planetorion.org/news/2013/01/orion-2-0-m2-new-and-noteworthy/">JavaScript content assist</a> has been improved adding several cases: type inferring for array values and associative arrays, inferring variables before declaring them, and inferring object properties based on usage.</p> 
<p>There are also other smaller enhancements and performance improvements. Loading Orion with a JavaScript page for editing needs <a href="http://planetorion.org/news/2013/01/orion-2-0-m2-new-and-noteworthy/">45% fewer requests and 80% less bytes transferred</a>.</p> 
<p id="lastElm"></p></body></html>