<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /></head><body><h3>Interactive SQL in Apache Hadoop with Impala and Hive</h3><p>Two open source projects, <a href="http://www.cloudera.com/content/cloudera/en/products-and-services/cdh/impala.html">Impala</a> and Hive as part of the <a href="http://hortonworks.com/labs/stinger/">Stinger</a> project are competing for top spot in the race for interactive SQL in Big Data deployments. Cloudera recently <a href="http://blog.cloudera.com/blog/2014/01/impala-performance-dbms-class-speed/">announced</a> that Impala is 6 to 69 times faster than Hive 0.12 and outperformed an unnamed DBMS by an average of two times. Being able to use interactive SQL in Hadoop clusters could mean that data only needs to enter HDFS and can then get processed and analyzed without the need for further data transfer.</p>
<p>Using a <a href="https://github.com/cloudera/impala-tpcds-kit/blob/master/README.md">modified subset</a> of the industry standard <a href="http://www.tpc.org/tpcds/">TPC-DS</a> benchmark, Cloudera claims that Impala is not only faster than Hive which also runs on Hadoop, but also faster than one DBMS using native columnar storage. <a href="https://twitter.com/Dirk_deRoos">Dirk de Roos</a> of <a href="http://www.ibm.com/software/data/bigdata/">IBM</a>, among others, has <a href="http://sheffieldview.com/2014/01/17/cloudera-impala-a-closer-look/">criticized</a> these results for using a subset of the TPC-DS query set instead of the full set. In another point he made, using a single fact table in Cloudera’s tests instead of the six that TPC-DS uses could have also helped achieve better performance. </p>
<p>Other than raw speed, business users of Hadoop need the flexibility that SQL tools and standards offer. Supporting <a href="http://en.wikipedia.org/wiki/SQL#Standardization">ANSI SQL</a> like <a href="http://www.cascading.org/lingual/">Cascading Lingual</a> does, can help business intelligence tools using <a href="http://en.wikipedia.org/wiki/ODBC">ODBC</a> interchangeably work with Hive and Impala. Impala’s <a href="http://www.cloudera.com/content/cloudera-content/cloudera-docs/Impala/latest/Installing-and-Using-Impala/ciiu_langref.html">sub-query support</a>, <a href="http://www.cloudera.com/content/cloudera-content/cloudera-docs/Impala/latest/Installing-and-Using-Impala/ciiu_aggregate_functions.html?scroll=aggregate_functions">aggregate</a> and <a href="https://groups.google.com/a/cloudera.org/forum/#!topic/impala-user/6p5r_n9CbGk">windowed</a> functions is behind Hive’s <a href="https://cwiki.apache.org/confluence/display/Hive/LanguageManual+SubQueries">support</a>. Also, installing Impala in an existing Hadoop cluster also means a whole new set of <a href="http://www.cloudera.com/content/cloudera-content/cloudera-docs/Impala/latest/Installing-and-Using-Impala/ciiu_install.html">processes</a> running in the cluster, whereas Hive living in the JVM can <a href="https://cwiki.apache.org/confluence/display/Hive/AdminManual+Installation">coexist</a> in the same environment Hadoop runs on.</p>
<p>Hive 0.12 is codenamed <a href="http://hortonworks.com/labs/stinger/">Stinger phase 2</a> by Hortonworks. Early adopters can <a href="http://public-repo-1.hortonworks.com/HDP-LABS/Projects/Stinger/StingerTechnicalPreviewInstall.pdf">install</a> a technical preview for Stinger phase 3. In Stinger phase 3 Hive <a href="https://cwiki.apache.org/confluence/display/Hive/Hive+on+Tez">works with</a> <a href="http://tez.incubator.apache.org/">Tez</a>, the application framework built on top of <a href="http://hadoop.apache.org/docs/current/hadoop-yarn/hadoop-yarn-site/YARN.html">Apache Hadoop NextGen MapReduce(YARN)</a>. Another improvement in the performance area is <a href="https://cwiki.apache.org/confluence/display/Hive/Vectorized+Query+Execution">vectorized query execution</a> which is analogous to Impala’s <a href="http://blog.cloudera.com/blog/2013/02/inside-cloudera-impala-runtime-code-generation/">runtime code generation</a>. As explained <a href="http://hortonworks.com/blog/update-stinger-view-microsoft-committer/">better</a> by <a href="http://www.microsoft.com/">Microsoft</a>’s <a href="http://www.windowsazure.com/en-us/services/hdinsight/">HDInsight</a> engineer <a href="www.linkedin.com/in/ericnhanson">Eric Hanson</a>, vectorized query execution can improve performance in CPU intensive query scenarios. Stinger phase 3 can provide <a href="http://hortonworks.com/blog/3-reasons-try-stinger-phase-3-technical-preview/">performance boost</a> and better resource utilization in several use cases.</p>
<p>In the open source interactive SQL technology landscape, a new contester from the same company that <a href="http://www.sfbayacm.org/wp/wp-content/uploads/2010/01/sig_2010_v21.pdf">open sourced Hive</a> five years ago, came up recently. Facebook <a href="https://www.facebook.com/notes/facebook-engineering/presto-interacting-with-petabytes-of-data-at-facebook/10151786197628920">Presto</a> is based on <a href="http://www.infoq.com/news/2013/11/Presto">ANSI SQL</a> and promises ad hoc analysis at interactive speed in a petabyte scale. The code is available on <a href="https://github.com/facebook/presto">GitHub</a>.</p><br><br><br><br><br><br></body></html>