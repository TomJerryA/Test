<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /></head><body><h3>HBase 0.98 Introduces Cell-based Security</h3><p>Apache released <a href="https://blogs.apache.org/hbase/entry/apache_hbase_0_98_0">HBase 0.98</a> primarily addressing convergence with Apache <a href="http://accumulo.apache.org/">Accumulo</a> via cell-based security while resolving over 230 JIRA issues. These new security features are modeled after Accumulo.</p>
<p>HBase and Accumulo are both Apache projects that provide a distributed data store modeled after Google’s <a href="http://research.google.com/archive/bigtable.html">BigTable</a> infrastructure that run on Apache Hadoop.</p>
<p>A cell is the lowest addressable unit in HBase using a key. In earlier versions, cells inherited the permissions from the column family, which in turn inherited the permissions from the table.</p>
<p>Accumulo, which uses a similar data model, has a finer grained cell-based security model although it’s different from the conventional ACLs (Access Control Lists). The key is comprised of a label, which helps make fine-grained decisions on access to different parts of the data at the cell level. So, it’s possible to have multiple levels of information access to the same data depending on the contents of the label.</p>
<p>Issues <a href="https://issues.apache.org/jira/browse/HBASE-8496">HBASE-8496</a> and <a href="https://issues.apache.org/jira/browse/HBASE-7663">HBASE-7663</a> are addressed in HBase 0.98. They implement cell-based security via tags. These tags can store arbitrary Meta data, which allows extension of the ACL security model from the table to the column family to the cell. In addition, it’s possible to store visibility expressions in tags, which provide similar granularity levels for access of different pieces of information within the cell like Accumulo.</p>
<p>From an <a href="https://hbase.apache.org/book.html#hbase.accesscontrol.configuration">API</a> perspective, a call like below would set the Access Permissions on the cell for user1.</p>
<pre>
put.setACL(“user1”, new Permission(Permission.Action.READ))
</pre>
<p>&nbsp;</p>
<p>Andrew Purtell, a principal architect at Intel and a long-time contributor to HBase says, &quot;With the release of Apache HBase 0.98, there is some security feature convergence happening here from the perspective of the end user. HBase has supported ACLs for a while. Now that we also support Accumulo-style visibility labels, we provide a superset of the features of both projects for our users.&quot; Purtell program managed the release, which was outlined in his <a href="https://communities.intel.com/community/itpeernetwork/datastack/blog/2013/10/29/hbase-cell-security">cell-based security blog</a>.</p><br><br><br><br><br><br></body></html>