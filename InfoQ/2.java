<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /></head><body><h3>Google+ Sign-In: Federated Identity, Authorization and Semantic Activity Streams</h3><p><a href="http://googleplusplatform.blogspot.com.au/2013/02/google-plus-sign-in.html">Google+ Sign-In</a> extends the Google+ social network into third-party websites, desktop applications and mobile apps, and further cements Google's position as an identity provider alongside others such as Twitter and Facebook. The new service, announced on February 26th, provides features for authentication, authorization and activity sharing. There is additional support for user engagement, hangouts and automatic Android app downloads.</p> 
<p>While discussion of the new service has been dominated by a <a href="http://www.theverge.com/2013/2/26/4030970/google-plus-sign-in-takes-on-facebook-connect-and-frictionless-sharing">perceived rivalry</a> with Facebook, from a technical perspective it's useful to look under the covers at the <a href="https://developers.google.com/+/">Google+ API</a> to see how the new features work and understand some of the standards that are being put to use.</p> 
<!-- <h3>Authentication and Authorization</h3> --> 
<p>A simple [g+ | Sign In] <a href="https://developers.google.com/+/web/signin/">button</a> provides the entry-point into a third-party web-page, desktop or mobile application. This kicks off a process that starts with the application requesting an access token for the user's Google+ profile. The orchestration is accomplished either in the web-browser via the <a href="https://developers.google.com/+/web/signin/#using_the_client-side_flow">client-side flow</a>, or via back-end API operations using the <a href="https://developers.google.com/+/web/signin/server-side-flow">server-side flow</a>. If the user hasn't already authenticated with Google+ then authentication is executed as part of the sign-in. The user is also prompted for the level of access they wish to give to the third-party application. Access levels, or <i>scopes</i> can include:</p> 
<ul> 
 <li>userinfo.email: provides only the user's email address</li> 
 <li>plus.me: provides the user's Google+ profile information</li> 
 <li>plus.login: extends the other scopes by allowing access to circles and the ability to write activities to the user's Google+ activity stream</li> 
</ul> 
<p>This access orchestration is a combination of authentication and authorization which follows the <a href="http://openid.net/connect/">OpenID Connect</a> draft standard which itself is based on the recently ratified <a href="http://www.rfc-editor.org/rfc/rfc6749.txt">OAuth 2</a> protocol. Authentication is handled completely within Google's authentication system and does not involve the third-party application. OpenID Connect layers authentication over the OAuth authorization protocol, effectively authenticating the user to the third-party application by granting access to the user's Google+ profile. <a href="http://openid.net/foundation/leadership/">Nat Sakimura</a>, Chair of the OpenID Foundation and a co-author of OpenID Connect, provides a <a href="http://nat.sakimura.org/2011/05/15/dummys-guide-for-the-difference-between-oauth-authentication-and-openid/">good description</a> of the difference between OpenID, OAuth and OpenID Connect and how applications use services like Google+ Sign-In to verify the identity of a user requesting access.</p> 
<p>Users can review their application authorizations using their <a href="http://plus.google.com/apps">App settings page</a> where they may revoke access or change their sharing settings.</p> 
<!-- <h3>Moments</h3> --> 
<p>The third-party application may now use its access token to manage in-application activities within the Google+ API. Google refers to these activities as &quot;<a href="https://developers.google.com/+/api/latest/moments">Moments</a>&quot; and the Google+ API provides a simple CRUD interface to insert, list and delete moments. Moments come in different flavours, called ActivityTypes. All activities have a name, description and thumbnail, plus an <i>itemtype</i> which is the subject of the activity. Itemtype must be a sub-type of a <a href="http://schema.org">schema.org</a> &quot;<a href="http://schema.org/Thing">Thing</a>&quot;, for example a <a href="http://schema.org/Book">Book</a>, <a href="http://schema.org/Place">Place</a> or <a href="http://schema.org/Person">Person</a>. In addition, items must have a URL reference to an HTML page containing <a href="http://schema.org">schema.org</a> markup for the relevant item. In this way, Google+ integration encourages the development of a &quot;semantic web&quot; of structured markup which is also <a href="http://googleblog.blogspot.com.au/2011/06/introducing-schemaorg-search-engines.html">useful to search engines</a>. The list of activities is quite comprehensive:</p> 
<ul> 
 <li>AddActivity: is a generic activity with itemtype, name, description and thumbnail.</li> 
 <li>BuyActivity: represents the purchase of an item.</li> 
 <li>CheckinActivity: represents a user checking-in from a place and carries additional attributes for address and geolocation.</li> 
 <li>CommentActivity: is appropriate when a user comments on a blog post, book or other creative work.</li> 
 <li>CreateActivity: for when a user creates a creative work.</li> 
 <li>DiscoverActivity: for when a user discovers a creative work.</li> 
 <li>ListenActivity: represents a user listening to a musical recording and provides additional attributes for song, album and artist meta-data.</li> 
 <li>ReserveActivity: signifies the user making a reservation at a local business such as a restaurant or hotel.</li> 
 <li>ReviewActivity: is a review of an item along with rating information.</li> 
 <li>WantActivity: indicates that a user wants an item, for example if they add the item to a wishlist in the application.</li> 
</ul> 
<p>The representation and dissemination of these moments into Google+ activity streams is all handled by Google+ based on the user's authorization settings.</p> 
<p>This brief review only scratches the surface of the new Google+ features launched with Sign-In, but provides an interesting example of new authentication and authorization standards as well as the extension of semantic markup into social activity streams.</p> 
<p id="lastElm"></p><br><br><br><br><br><br></body></html>