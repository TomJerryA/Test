<html>
 <head></head> 
 <body> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/9.htmlb">使用Flurry来统计和分析用户行为</a> 本文介绍了Flurry的基本功能以及如何利用Flurry做自定义的统计和分析，文章最后也将Flurry与业界其它同类工具做了对比和总结。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/8.htmlb">建立学习与创新的文化</a> Jeff介绍了一个大型工程企业的员工如何通过在工作中进行持续学习的方式建立起创新文化的一系列步骤。在一个传统的工作环境中，工程团队通常倾向于等待业务方面的决策，并朝着既定的决策方向开始执行。而如今我们则看到，工程团队也会向业务决策者提出有钻研价值的新方向。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/7.htmlb">如何让你的内存NoSQL数据库为企业应用做好准备</a> 在本文中，作者Yiftach Schoolman阐述了如何克服管理云端的内存NoSQL数据库所面临的七项最大挑战。他详细讨论了可用性、网络分裂期间及之后的一致性、数据持久化、可伸缩性以及运维开销等挑战的应对方式。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/6.htmlb">百度移动统计分析介绍与进阶经验分享</a> 为了让开发者更加深入的了解百度移动统计，InfoQ邀请了该产品的产品经理袁泽陆撰写本文，详细介绍百度移动统计产品、如何使用、移动应用分析常见问题解释等。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/5.htmlb">线程池规模调优</a> 大小合适的线程池允许运行尽可能多的请求，只要硬件和软件支持合理。这篇文章我们探讨了如何遵从“测量不猜”典故去合理设置线程池。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/4.htmlb">论软件生命周期集成</a> 对于许多组织而言，是否有综合性的软件交付实践会决定了项目的成败。这时，就应该将精益思想（Lean thinking）应用到软件交付的实践中，并创建和维护从构想到实现的软件流，消除断点，实现实时协作。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/3.htmlb">恒生电子李文松：做金融的也需要很漂亮很友好的界面</a> 在2013年10月24日的阿里云开发者大会上，恒生电子互联网服务事业群首席架构师李文松以阿里云金融合作伙伴的身份，跟阿里云业务架构师赵楠林（三冬）一起接受了InfoQ中文站的采访。我们希望能够通过这次采访了解金融互联网发展的一些状态，以及开发者在金融行业的这样一个转变中有哪些机遇和挑战。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/2.htmlb">大数据安全: Hadoop安全模型的演进</a> 在这篇文章中，凯文T.史密斯聚焦于大数据安全的重要性，并讨论了Hadoop安全模型的演进。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/1.htmlb">大数据处理之如何确保断电不丢数据</a> 这篇文件将围绕这个新接口对其实现细节进行简单的分析，从而希望找出一种合理使用hsync()的策略，避免重要数据丢失。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/0.htmlb">书评：Java核心编程卷1——基础</a> Cay Horstmann与Gary Cornell合著的Java核心编程已经出版了，与之前的版本一样，这是一本明晰且拥有大量颇具价值的示例的书籍。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/49.htmlb">Peter Kriens重返OSGi联盟</a> Peter Kriens是OSGi的推动者之一，到2012年初为止他一直在这里担任总监长达11年。InfoQ联系到了Peter，与他讨论了重返OSGi及其jpm4j项目的最新情况。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/48.htmlb">书评：使用Android SDK构建应用，第2版</a> Android开发者手册是一本针对移动开发者的参考书，可以作为编程实践的权威指南，值得每一位开发者拥有。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/47.htmlb">国防工业中的敏捷</a>国防工业通常被认为是一种”非敏捷的”文化。严格按照等级划分的团队，很少有协作的自由而且被强制要求通过合同规定的工件沟通。在本文中，Jeff Plummer分享了在他领导的团队中成功为国防工业应用敏捷原则和实践的经验。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/46.htmlb">用户实例：DubDubDeploy</a>最初Donte Ormsby联系我们的时候，仅仅是写了一封友好的信，说他发现一个非常棒的工具能简化ASP.NET的网站部署，并认为我们的读者可能感兴趣。经过进一步交谈，我们认为介绍DubDub部署最好的办法就是让Donte来给读者讲述他亲身经历的故事。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/45.htmlb">林仕鼎谈数据中心计算（三）：学术界与工业界，以及未来展望</a>在《林仕鼎谈数据中心计算》的第一部分，百度基础体系首席架构师林仕鼎先生提到要将数据中心当做逻辑上的一台机器来设计架构。在之后的对话中，林仕鼎具体介绍了对数据中心的存储资源做逻辑分层、物理映射的思路。在接下来的对话中，林仕鼎会介绍他对于“为什么以前的系统做的并不是很好”的理解，以及“为什么会想要去做这个系统”的原因。此外，对话中也会涉及到他对12306系统的部分解读，以及一些相关问题的看法。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/44.htmlb">遗留系统的技术栈迁移</a>本文介绍了如何针对遗留系统进行技术栈迁移。文中给出了一些最佳实践，迁移步骤和案例分析。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/43.htmlb">深入浅出Symfony2 - 如何提高网站响应速度</a>Symfony2是一个基于PHP语言的Web开发框架，有着开发速度快、性能高等特点。 本文通过对一个基于Symfony2框架所开发的网站页面进行逐步优化，最终实现页面加载速度的提高的例子，向读者介绍Symfony2框架的一些核心功能和特点。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/42.htmlb">书评：Java应用架构</a>《Java应用架构：以OSGi为例讲解模块化模式》是Kirk Knoernschild编写的一本优秀图书，它列出了模块化系统设计的模式。在本书的开始讲述了模块化的概要理由，主体部分介绍了模块化开发的18个模式列表，最后是一个OSGi的例子。InfoQ与Kirk进行了交流以了解本书的更多情况。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/41.htmlb">多设备企业环境下的C++</a>无论是在谈话、社交网络还是和一些产业文章中，你一定听说过在企业内部支持多设备的需求。像BYOD（自带设备）这样的词条已出现在多数文章和企业战略中。企业组织需要支持大量类型的设备，以便使员工更有工作效率。现代企业同时要支持包括多层系统、云计算、REST和SOAP web services等更多类型的软件架构。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/40.htmlb">性能测试面面观——HP性能测试专家宗刚访谈</a>宗刚是2013北京QCon测试专题的受邀讲师。在这个访谈中，宗刚对性能测试领域内的许多问题做了深入的回答。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/39.htmlb">林仕鼎谈数据中心计算（二）：存储资源分层</a>在之前的对话中，百度基础体系首席架构师林仕鼎先生提到要将数据中心当做逻辑上的一台机器来设计架构。在林仕鼎看来，这种软件设计理念的变化包含很多方面，但最基本的一点就是：分层。一个存储系统有三个层：block层，stream层，以及table层。CCDB的设计是，我把这三个层放在一块儿，放在一台机器上面去。然后，机器和机器之间连起来，就把每个层直接扩展到多机了。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/38.htmlb">自动化错误报告：通往更高软件质量的大门</a>无知是福，但对于软件bug而言，这种态度触及了底线。那些能够揪出bug并改善软件质量的，将收获客户极大的信任，更高的报酬，更低廉的维护成本，并且难以被其竞争对手替代。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/37.htmlb">Windows与Mac开发领域的两个全新成功案例</a>Embarcadero网站为我们分享了FireMonkey在Windows与Mac开发领域的两个全新成功案例：Bremmers Audio Design的MultitrackStudio以及Porter Lee公司的BEAST警方证物管理系统。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/36.htmlb">Delphi 18周年庆：持续创新与全新跨设备支持</a>遥想1995年2月14日，英巴卡迪诺在加州旧金山的西部软件开发大会上正式推出了第一版Delphi。结合了16位Windows本机代码编译器、可视化组件体系架构（属性、方法与事件）、可视化双向工具IDE，一举超越了此前十二年Turbo Pascal所积累的全部创新成果。很多开发者可能还没有开始关注Delphi解决方案的最新动态，下面我们就简单介绍以往八个版本中所包含的创新内容。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/35.htmlb">林仕鼎谈数据中心计算（一）：整体大于部分之和</a>《失控》中提到一个很普遍的现象，就是整体大于部分之和。比如把10000只蜜蜂加起来，它不仅仅是10000只蜜蜂，而是一个蜂群，具备很多只有蜂群才有（而蜜蜂没有）的特性。那么，把一万台服务器加起来，我们能得到什么？林仕鼎说：“我现在就是把数据中心当做一台机器来看。” 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/34.htmlb">全功能团队 - 数据篇</a>在《建设全功能团队》和《建设全功能团队——实践篇》两篇文章中，我的同事胡凯曾介绍过建设全功能团队的必要性和良好实践，此后在围绕这一话题的讨论中，很多人都分享了自己的理解，或看好，或看淡。在ThoughtWorks有许多团队一直在建设全功能团队方面实践着，在这篇文章中我希望与大家分享我从这些团队收集到的过去一年来的数据，以及更切身的理解。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/33.htmlb">goroutine背后的系统知识</a>Go语言从诞生到普及已经三年了，先行者大都是Web开发的背景，也有了一些普及型的书籍，可系统开发背景的人在学习这些书籍的时候，总有语焉不详的感觉，网上也有若干流传甚广的文章，可其中或多或少总有些与事实不符的技术描述。希望这篇文章能为比较缺少系统编程背景的Web开发人员介绍一下goroutine背后的系统知识。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/32.htmlb">函数式反应型编程(FRP) —— 实时互动应用开发的新思路</a>本文详细讲解JavaScript编程的一种新型编程模型：利用函数式编程(Functional Programming)的思想和方法(函数、高阶函数)来支持Reactive Programming，来达到所谓的Functional Reactive Programming，简称FRP。它从新的视角关注数据流，代码更接近于只描述做什么(what)的声明式(declarative)代码，简洁又直观。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/31.htmlb">对比iOS中的四种数据存储</a>你是用什么方法来持久保存数据的？这是在几乎每一次关于iOS技术的交流或讨论都会被提到的问题，而且大家对这个问题的热情持续高涨。本文主要从概念上把“数据存储”这个问题进行剖析，并且结合各自特点和适用场景给大家提供一个选择的思路，并不详细介绍某一种方式的技术细节。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/30.htmlb">云测试探索实践</a>在本文中，作者们讨论了云测试在软件交付过程中的影响。他们讨论了云测试服务，比如性能测试和Web应用测试。他们也共享了与不同组织访谈的结果以及他们对云测试的应用，并提出一个云测试路线图。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/29.htmlb">从赌钱游戏看PageRank算法</a>PageRank算法有着非常高的知名度和普及度，我们将以PageRank算法为例讲述“并行计算+数据算法”的经典搭配，并且这种“海量数据并行处理、迭代多轮后收敛”的分析过程也跟其他的数据挖掘或者机器学习算法应用类似，能起到很好的参考作用。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/28.htmlb">深入浅出node.js游戏服务器开发——基于Pomelo的MMO RPG开发</a>Pomelo是杭州网易研究院发布的基于Node.js开源游戏框架，本篇是连载内容的第三篇，为大家介绍如何使用Pomelo框架来搭建MMO RPG服务器，并分析其设计思路和实现方法。以此来帮助大家更好的理解和使用Pomelo框架，理解Pomelo框架游戏开发的基础流程，使用方法和设计理念。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/27.htmlb">函数式反应型编程(FRP) - 实时互动应用开发的新思路</a>本文详细讲解JavaScript编程的一种新型编程模型：利用函数式编程(Functional Programming)的思想和方法(函数、高阶函数)来支持Reactive Programming，来达到所谓的Functional Reactive Programming，简称FRP。它从新的视角关注数据流，代码更接近于只描述做什么(what)的声明式(declarative)代码，简洁又直观。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/26.htmlb">交付云计算的复杂性</a>即便在21世纪初的今天，计算看起来仍然更像是一门艺术而非科学。然而，背后的原因恐怕连最资深的业内人士也无法说清。最可能的原因是，IT从多种角度思考最终产品、应用和数据。打个比方，就像三个盲人摸象，因为摸到的位置不同，所以每个人心中的大象也各不相同。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/25.htmlb">详解Java 7中新的文件API</a>Java 7向语言中引入了一些有用的特性，其中包括一个新的I/O文件包。相对于老的java.io包，这个包针对文件系统——特别是基于POSIX的系统——提供了粒度更细的控制功能。本文首先介绍一下新的API，之后通过一个基于Web的文件管理器项目WebFolder来详细探索这些API。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/24.htmlb">敏捷教练指导的另一种选择</a>Phil Abernathy声称敏捷教练这个角色可能将日暮西山，基于向敏捷团队中加入敏捷实践经理的见解，他提出了敏捷教练的另一种选择。敏捷实践经理将与团队“风险共担（skin in the game）”，其职责不仅仅包括优化团队流程，同时也负责通过产品交付客户价值。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/23.htmlb">Etsy工程师Sam Haskins谈代码部署，监控与故障处理</a>在本次访谈中，Sam Haskins分享了他在Etsy做DevOps的经验。Etsy使用Git做代码管理，平均每天提交的更新数量在30次左右，有时甚至达到70个。在如此高频率提交代码的情况下，他们如何进行代码审查？如何在每次更新之后监控系统性能？如何处理故障？下面，Sam将一一解答。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/22.htmlb">使用HTML5开发体感游戏——VeloMaze的开发简介</a>在这篇文章中Raimo讲解了他在NodeKO竞赛上开发一个HTML5体感游戏时遇到的挑战和解决的办法。在这个游戏中用到的技术有：Node.js、express（静态内容服务）、Socket.io（处理客户端和服务器端的通讯）、Sylvester.js（物理引擎的矢量库）和JQuery。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/21.htmlb">Apache Crunch：用于简化MapReduce编程的Java库</a>Josh Wills在本文中介绍了一个新的Apache孵化器项目Crunch，该项目是用于创建MapReduce流水线的Java库。Crunch建立在一组用于简化MapReduce应用设计的高层抽象之上，还提供了用于实现如连接数据、执行聚合和排序记录等常见任务的模式库。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/20.htmlb">开发者需要了解的WebKit</a>Paul Irish是著名的前端开发工程师，同时他也是Chrome开发者关系团队成员。针对大家对WebKit的种种误解，他在自己的博客发表了《WebKit for Developers》一文，试图为大家解惑WebKit的同与不同。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/19.htmlb">深入理解Java内存模型（七）——总结</a>Java线程之间的通信对程序员完全透明，内存可见性问题很容易困扰Java程序员，本文试图揭开Java内存模型神秘的面纱。本文大致分三部分：重排序与顺序一致性；三个同步原语（lock，volatile，final）的内存语义，重排序规则及在处理器中的实现；Java内存模型的设计目标，及其与处理器内存模型和顺序一致性内存模型的关系。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/18.htmlb">一次推荐算法的普及性讨论</a>在这个相对比较偏学术的讨论中，作者和百度的前技术委员会主席廖若雪就推荐算法的基本概念，算法和架构、策略、机器学习之间的关系，以及算法应用的几点经验进行了沟通，希望能对想对算法有所了解的同学有所帮助。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/17.htmlb">阅读者（二十三）——《精益和敏捷开发大型应用指南》</a>此书为传统大型IT部门多团队实施敏捷之得力帮手，首先列出了复杂问题的思考工具，其次给出了大型组织实施敏捷的具体方式及尝试方法，尤其是如何组织团队、提高团队适应能力、培养学习型团队以及各个角色如何做好职责转变等，此外还描述了传统企业常见的团队组织方式并分析其利弊。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/16.htmlb">Fn.py：享受Python中的函数式编程</a>尽管Python事实上并不是一门纯函数式编程语言，但它本身是一门多范型语言，并给了你足够的自由从函数式编程方式中受益。fn.py类库就是为了帮助Python开发者使用函数式编程方式开发而诞生的。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/15.htmlb">究竟什么是敏捷测试</a>敏捷测试已经不是一个新概念了，但时至今日，感觉在许多人心目中还是比较模糊。希望这篇文章可以一次把“敏捷测试”这个内涵给大家说清楚。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/14.htmlb">从WordPress看开源平台的发展</a>很少有人知道，地球上六分之一的网站采用Wordpress架构，在Alexa排名前10万的网站中，有16.7%使用了WordPress。如果把WordPress看做一个开放平台的话，它比Facebook更有影响力。而事实上，它就是这样的一个平台。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/13.htmlb">深入理解Java内存模型（六）——final</a>StartFragmentJava线程之间的通信对程序员完全透明，内存可见性问题很容易困扰Java程序员，本文试图揭开Java内存模型神秘的面纱。本文大致分三部分：重排序与顺序一致性；三个同步原语（lock，volatile，final）的内存语义，重排序规则及在处理器中的实现；Java内存模型的设计目标，及其与处理器内存模型和顺序一致性内存模型的关系。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/12.htmlb">自动化构建：一致性关键之道</a>如果有那么一件事软件开发人员很在行，那一定是将通常需要人工完成的任务自动化。让计算机处理重复乏味的任务将使得大家生活得更轻松，这里我们讨论的是如何让大家专注于他们所关心的事情。然而，研发团队时常会忽略那个最有帮助的受众—他们自己。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/11.htmlb">深入理解Java内存模型（五）——锁</a>Java线程之间的通信对程序员完全透明，内存可见性问题很容易困扰Java程序员，本文试图揭开Java内存模型神秘的面纱。本文大致分三部分：重排序与顺序一致性；三个同步原语（lock，volatile，final）的内存语义，重排序规则及在处理器中的实现；Java内存模型的设计目标，及其与处理器内存模型和顺序一致性内存模型的关系。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/10.htmlb">TeamToy2的开发故事：面向移动的API设计，代码重用，快速迭代</a>2013年的元旦后，一个名叫TeamToy的项目再次进入了人们的视野，这是一个面向团队的Todo类产品。目前，TeamToy2仍处于快速更新、完善产品的阶段，其移动版本TeamToyPocket刚刚宣布开源。为此，InfoQ中文站联系到了TeamToy的作者陈理捷，请他谈谈整个TeamToy2开发中的一些想法和经验，以及移动版本的选型、整个项目开源这一决策的考量。 
  </div> 
 </body>
</html>