<html>
 <head></head> 
 <body>
  <div>
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/2.htmlb">使用MySQL、Hudson、Gradle、Maven和Git实现数据库DevOps</a> DevOps这个术语描述的是经改良的开发团队与运维团队之间的协作。在软件工程中，数据库通常都位于关键路径之中。本文介绍了什么是DevOps，并且解释了使用了具体概念和工具的数据库DevOps是什么样的。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/1.htmlb">豆瓣的基础架构</a> 本文根据InfoQ中文站对豆瓣洪强宁（@hongqn）的沟通交流整理而成。洪强宁介绍了豆瓣的架构和组件，并分享了豆瓣基础平台部的一些团队经验。文中截图来自洪强宁在2013年CTO俱乐部中的分享。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/0.htmlb">DevOps @ Spotify</a> 本文是“DevOps每月实战故事”系列的一部分。每个月我们都会听听来自不同团队的DevOps故事，了解哪些对我们有用，哪些没有用，并且描绘出DevOps实施过程中所面对的挑战。在这个问题上，我们学会了如何从DevOps中吸取经验教训并贯穿在Spotify的工程师管理中。其结果是团队领导者、产品经理以及敏捷教练共同收获一个健康的Potlac（注：Potlac是作者自造的生词，意思是Product Owner + Team Lead + Agile Coach）。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/49.htmlb">更好地实施敏捷</a> 敏捷实施现在举步维艰——组织对敏捷实践进行授权式管理并期望团队可以改变其工作的方式，但是这种改变看上去是不可持续的。该文是一系列研究文章中的第一篇，这些文章探讨了为什么这种情况会发生，并且给出了一个替代方案——开放式敏捷实施基于邀请和参与，而不是来自上级的授权和指示。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/48.htmlb">通过Microsoft Azure服务设计网络架构的经验分享</a> 本文从产品设计和架构角度分享了Microsoft Azure网络服务方面的使用经验，希望你在阅读本文之后能够了解这些服务之间，从而更好地设计你的架构。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/47.htmlb">Pair Painting 结对粉刷房间</a> Victoria上周粉刷了一下家中的厨房，这一过程使她联想起了结对编程。她和她的搭档之前也有过粉刷房间的经验，而且出来的效果也让她们感到十分自豪。但换成了她自己来做的话，尽管她具有良好的技能与知识，但最终的效果也不那么理想。她对此产生了疑问：事情为什么是这样？ 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/47.htmlb">最好的流程是没有流程</a> 官僚机构常常烦恼于大型产品开发的工作量。正如技术债会减缓研发速度，流程债则会减缓商业发展。你有没有节省过12,096,000%的时间？理清战略。流程自动化。并行工作。专心地协作。你知道吗？MS project的一个系统默认值有可能会让你的计划缺乏弹性。消除流程债，快速上市。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/46.htmlb">Node.js的线程和进程</a> 很多Node.js初学者都会有这样的疑惑，Node.js到底是单线程的还是多线程的？通过本章的学习，能够让读者较为清晰的理解Node.js对于单/多线程的关系和支持情况。同时本章还将列举一些让Node.js的web服务器线程阻塞的例子，最后会提供Node.js碰到这类cpu密集型问题的解决方案。在学习本章之前，读者需要对Node.js有一个初步的认识，熟悉Node.js基本语法、cluster模块、child_process模块和express框架；接触过apache的http压力测试工具ab；了解一般web服务器对于静态文件的处理流程。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/45.htmlb">高质量代码——书评与采访</a> 由Stephen Vance所撰写的《高质量代码》（Quality Code）一书涵盖了软件开发生命周期的各个方面，尤其关注于提交高质量的产品。Stephen在本书中谈论了为支持软件技术水准测试所需的一些实践。InfoQ有幸与作者进行了交流，对本书的内容以及测试应用程序代码的最佳实践进行了一番讨论。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/44.htmlb">Web安全实战</a> 本章将主要介绍使用Node.js开发web应用可能面临的安全问题，读者通过阅读本章可以了解web安全的基本概念，并且通过各种防御措施抵御一些常规的恶意攻击，搭建一个安全的web站点。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/43.htmlb">用Kiji构建实时、个性化推荐系统</a> 现在网上到处都有推荐。亚马逊等主流电子商务网站根据它们的页面属性以各种形式向用户推荐产品。Mint.com之类的财务规划网站为用户提供很多建议，比如向用户推荐他们可能想要办理的信用卡，可以提供更好利率的银行。谷歌根据用户搜索历史记录的信息优化搜索结果，找到相关性更高的结果。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/42.htmlb">响应式Web图形篇 —— icon fonts 的探析及应用</a> 像素完美（Pixel Perfection）、分辨率无关（Resolution Independent）和多平台体验一致性是设计师们的追求。 可访问性（Accessability）、加载性能和重构灵活性是前端工程师们关心的主题。 当下互联网设备「风起云涌」，显示分辨率「层出不穷」，为 Web 创建者们带来越来越多的难题。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/42.htmlb">OSGi Bundle Convert插件原理</a> 普通的web应用要转换为OSGi应用，经常会遇到应用中依赖的Jar是非标准的情况，这些Jar可能只遵守了部分OSGi规范，甚至Manifest信息是空的。这种情况在OSGi 应用中根本无法使用这个非标准的Jar做为Bundle，故必须要将这个非标准的Jar转换成遵守OSGi规范的Bundle。另外用Maven管理的仓库，由于不同开发者对规范的理解不同，在仓库中也存在了各种规范或者不规范的Jar，如果我们能很好的将Maven仓库中的Jar转换成标准的Bundle，Maven仓库也就转换成对应的OSGi Bundle仓库，对于非OSGi的应用而言也就可以很方便的利用Maven仓库，普通web应用也可以平滑的切换到OSGi环境。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/42.htmlb">Node.js V0.12新特性之性能优化</a> v0.12悠长的开发周期(已经过去九个月了，并且还在继续，是有史以来最长的一次)让核心团队和贡献者们有充分的机会对性能做一些优化。本文会介绍其中最值得注意的几个。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/42.htmlb">Node.js V0.12新特性之在单进程中跑多个实例</a> 经常有人提出，希望Node.js能被嵌入到其他程序中，特别是让它能跟其他事件循环整合而且（与此同时）支持多个Node执行情境：也就是说让多个Node实例在同一个进程中和平共处的能力。StrongLoop接到了一个客户的订单，在Node v0.12中实现了在同一个事件循环中使用多个执行情境的能力。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/41.htmlb">西蒙•布朗谈可持续竞争力</a> 为什么有些团队很成功，而其他团队不那么成功呢？团队可以使用流程开展工作吗？管理人员如何帮助团队变得更好？团队需要有改善软件质量的激励措施吗？InfoQ采访了西蒙•布朗，他从持续改进、平衡人员与流程，以及软件质量与架构等几个方面谈了可持续竞争力。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/40.htmlb">测试数据构造秘技（1） ——专属数据引用数据分离</a> 持续集成难，自动化测试更难；测试环境准备难，测试数据准备更难。测试数据准备秘技这个系列，我希望能将测试数据准备的一线经验和体会完整地呈现给大家，将教科书上一些抽象的原则，用鲜活的示例来给读者解释明白，希望能对一线的测试从业人员起到指导作用。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/39.htmlb">看DeepMind如何用Reinforcement learning玩游戏</a> 说到机器学习最酷的分支，非Deep learning和Reinforcement learning莫属（以下分别简称DL和RL）。这两者不仅在实际应用中表现的很酷，在机器学习理论中也有不俗的表现。DeepMind工作人员合两者之精髓，在Stella模拟机上让机器自己玩了7个Atari 2600的游戏，结果是玩的冲出美洲，走向世界，超越了物种的局限。不仅战胜了其他机器人，甚至在其中3个游戏中超越了人类游戏专家。噢，忘记说了，Atari 2600是80年代风靡美国的游戏机，当然你现在肯定不会喜欢了。长成什么样子？玩玩当下最火的flappy bird吧！ 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/38.htmlb">ActiveJPA——针对JPA的活动记录模式</a> ActiveJPA是Martin Fowler所提出的活动记录模式的Java实现，它围绕JPA提供了一些有益的抽象以简化数据访问。借助于ActiveJPA，模型本身会作为DAO并与数据库交互，这样就不需要额外的代码作为数据访问层了。在本文中，ActiveJPA的主要提交者将会对其进行讨论并且提供了大量的使用样例。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/37.htmlb">Oleg Shilo：基于CS-Script的Notepad++插件</a> Oleg Shilo向我们介绍了他的项目，一个优秀的基于CS-Script的Notepad++的插件。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/36.htmlb">数据库变更部署自动化秘诀</a> Yaniv Yehuda探讨了自动化数据库部署所面临的挑战，并提供了基于敏捷和DevOps思想的建议。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/36.htmlb">微博平台的链路追踪及服务质量保障系统——Watchman系统</a> 如其他大中型互联网应用一样，微博平台由众多的分布式组件构成，用户通过浏览器或移动客户端的每一个HTTP请求到达应用服务器后，会经过很多个业务系统或系统组件，并留下足迹（footprint）。但是这些分散的数据对于问题排查，或是流程优化都帮助有限。本文将会详细介绍新浪微博的实现方式和经验分享。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/36.htmlb">如何使用Microsoft技术栈</a> Microsoft技术栈最近有大量的变迁，这使得开发人员和领导者都想知道他们到底应该关注哪些技术。Microsoft自己并不想从官方层面上反对Silverlight这样的技术，相对而言他们更喜欢让这种技术慢慢淡出人们的视线，否则局面可能会更加混乱。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/35.htmlb">Oleg Shilo：基于CS-Script的Notepad++的插件</a> 如果只是想写几句试验代码，Visual Studio显得有点大材小用。因此一些开发者会选择轻量级的编辑器，如Notepad++，来满足编写脚本的需要。Oleg Shilo向我们介绍了他的项目，一个优秀的基于CS-Script的Notepad++的插件。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/34.htmlb">豆瓣的研发管理</a> 本文基于庄表伟跟豆瓣工程副总裁段念的一次沟通整理而成，双方主要探讨了如何给团队设置规则、如何传输价值观、如何恰到好处的设置激励策略、如何考核工程师等话题。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/33.htmlb">LinkedIn是如何使用Apache Samza的？</a> Apache Samza是LinkedIn最近开源的一款流处理器。在题为《Samza：LinkedIn的实时流处理》的演讲中，Chris Riccomini探讨了Samza的功能集，它如何与YARN和Kafka集成，LinkedIn如何用它，以及其未来路线图是什么。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/32.htmlb">使用Contemplate ThreadSafe发现并判断Java并发问题</a> 当使用并发编写正确和安全的Java软件时，我们需要很仔细地进行思考。因为错误使用并发会导致偶尔才出现的缺陷，这些缺陷甚至能够躲过最严格的测试环境。静态分析工具能够分析源码或编译形成的字节码，以便在执行之前就能发现隐藏在代码之中的缺陷。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/32.htmlb">Java测试的自定义断言</a> 使用“匹配器类库（matcher libraries）”实现自定义断言，提高测试代码的可读性和可维护性。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/31.htmlb">使用AppVeyor CI 和PowerShell部署应用</a> 部署实际应用不是一件易事。总是有问题不断出现在以下情况中：需要在注册表（Registry）或自定义文件夹中配置设置，或你需要部署到Web集群。本文中，我们通过使用PowerShell远程处理（PowerShell remoting）和AppVeyor CI为带有ASP.NET web应用程序和Windows Service的解决方案在其暂存（staging）和产品环境中配置持续集成。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/30.htmlb">用于大数据的嵌入式分析和统计</a> 本文概要地介绍了嵌入式数据分析和统计的相关工具及类库，其中包括独立的软件包和带有统计能力的编程语言。两位作者还讨论了如何将这些嵌入式分析技术结合起来处理大数据。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/29.htmlb">别闯进Hybrid App的误区</a> Hybrid App，一种开发模式，兼顾Web和Native的一种开发模式。有人说它把Web App扼杀在摇篮里，有人说它把Native App引向一个新阶段。我说，它是一把双刃剑，千万别闯进它的误区。本文是笔者在实践Hybrid App开发模式过程中总结出的一些经验教训，供读者参考。Hybrid App虽好，可万万不能仓促选择，盲目运用。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/28.htmlb">JCA——一个名不见经传却重要的JavaEE规范</a> JCA(Java EE Connector Architecture)规范可以说是JavaEE规范集合里最“默默无闻”的，在JavaEE1.3规范发布时就加入了，比现在重要成员JPA, CDI等都早了很多。如此重要的规范，为何很少人知晓呢，本文就解释一些其中的原委。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/27.htmlb">从命令式编程到Fork/Join再到Java 8中的并行Streams</a> 在这篇文章中，两位作者分别用命令式风格、Fork/Join框架和Java 8中新的Streams API三种方式计算了一个大数据集的方差，并进行了对比。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/26.htmlb">通过一组RESTful API暴露CQRS系统功能</a> 我们在此提出并展示一种为CQRS系统创建一套RESTful API的方式。这种方式结合了HTTP的语义、REST API基于资源的风格，并能够处理分布式计算的某些问题，例如最终一致性和并发性。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/25.htmlb">Spine.JS+Rails重客户端Web应用技术选型思路：『风车』架构设计</a> 风车这个项目开始于 2011 年 11 月份，之前叫做 Pragmatic.ly。从第一天开始我们基本上就定了大致的框架结构，在今天回头看，基本上整个架构都没有什么变化，可以算是个很成熟和很适合时代的方案，☺。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/24.htmlb">开发模块化的JavaScript组件</a> 本文将通过一个示例为你展示某个简单的widget的演化过程，看看它是如何从一个庞大的、缺乏结构性的代码库进化为一个可重用的组件的。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/23.htmlb">Redis计数在新浪微博的应用</a> 作为微博中一项重要的数据，计数类业务在微博业务中占的比重和重要性逐步提高。计数结果的准确度直接影响用户体验，并且很容易引起用户的投诉。在计数业务上，在不断的优化和改进中，我们将会分享所经历的三个阶段。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/23.htmlb">Node.js V0.12新特性之Cluster轮转法负载均衡</a> Node核心代码的提交者Ben Noordhuis和Bert Belder会写一系列的文章来介绍Node 0.12的新特性,大概会有7到8篇的样子 。在这第一篇文章中，Ben会讲一讲新的轮转法集群算法。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/22.htmlb">现代企业中性能分析的反模式</a> 文中我们提出了一些在现代企业平台中进行性能分析时最常见的反模式，包括它们的根源以及矫正策略。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/21.htmlb">利用In-Database Analytics技术在大规模数据上实现机器学习的SGD算法</a> 随着应用数据的增长，在大规模数据集上进行统计分析和机器学习越来越成为一个巨大的挑战。目前，适用于统计分析/机器学习的语言/库有很多，如专为数据分析用途而设计的R语言，Python语言的机器学习库Scikits，支持分布式环境扩展的有基于Map-Reduce实现的Mahout，以及分布式内存计算框架Spark上的机器学习库MLlib等等。目前Spark框架也推出了R语言的接口SprakR。但是，本文要讨论的，则是另外一种设计思路，在database中实现统计分析和机器学习算法，即In-Database Analysis，Madlib库就是这种设计思路的代表。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/20.htmlb">基于反馈控制实现可靠的自动扩展服务</a> Philipp K. Janert说明了如何使用反应式方法，基于反馈控制可靠地自动扩展系统，提供了比确定性方法和基于规则的方法更精确的解决方案。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/20.htmlb">BYOC和混合云的崛起</a> BYOC正在市场上快速普及。对于IT部门而言，让那些不受监控、未经授权的服务运行在内网里，既引入了安全隐患，又把自己的基础架构搞得更加复杂，因此必须把它们管起来。本文作者提供了一些将BYOC集成到企业IT架构当中的经验，以及如何让混合云更好用的建议。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/19.htmlb">微博春晚背后的技术故事</a> 统计数据结果表明，马年春晚直播期间，微博的访问量和发表量都再创新高，而我们系统也自始至终平稳运行，经受住了此次高峰的考验。这成功的背后，是我们的工程师将近一个月的努力。其间面临了哪些问题，又是如何解决的呢？下面，我们一一为大家揭秘。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/18.htmlb">安全领域中的大数据分析</a> 作者在本文中探讨了大数据和Hadoop在安全分析领域中所扮演的角色，以及在做安全信息和事件管理(SIEM)、欺诈检测等安全分析的用例中，如何使用MapReduce高效地处理数据。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/17.htmlb">运营精益创业组织的柔术</a> 通过练习巴西柔术，Yiannis将经营精益创业组织的做法和原则跟这门武术所需的技巧和宗旨联系到一起。他向我们展示了两者的内在实践有多相似，以及掌握巴西柔术的做法如何帮助精益创业组织节省精力，实现结果的最大化。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/16.htmlb">程序员的工具</a> 作为一名程序员，我会用到许多工具。道理很简单，因为它们可以提高我的工作效率。但这里有个前提条件，那就是这些工具可以很好地支持我在工作和编码中的实践。如果某些工具违背了这些实践以及它们背后的价值观，我就不会使用或者有限地使用那些有用的功能。在本文中，我会分享一些工具以及背后的思考，希望对广大程序员朋友有所启示和帮助。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/15.htmlb">单元化架构，为什么要用以及我们如何做到</a> 微博粉丝服务平台在单元化架构方面的实践已经在QCon讲过，这次重又写起文章，我想传播知识已经不那么重要（单元化架构不是创新，稍后会详细介绍），更重要的是还是希望能够借此引起诸位的思考，能够在架构层面多投入精力思考和尝试。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/14.htmlb">采访Jan de Baere：一家敏捷公司的兴衰</a> 是什么让一家咨询公司的经理决定彻底改变文化？在敏捷之旅布鲁塞尔会议上，Jan de Baere解释了原因，并说明这家公司是如何采用敏捷，他们经历了怎样的历程，最后又为何突然终止。InfoQ采访了他，谈论敏捷的方法、文化和信任，以及从一次敏捷旅程中学到的东西。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/13.htmlb">Node.js软肋之CPU密集型任务</a> Node.js的EventLoop只考虑了I/O操作，但对于需要占用大量CPU资源的计算，显得有点儿先天不足。本文分析了Node.js不擅于处理CPU密集型任务的原因，并给出了加强Node.js处理CPU密集型任务能力的几种办法。https://gist.github.com/wuhaixing/cce3abd50585d931c3f7 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/13.htmlb">与Ole Jepsen谈敏捷中的领导力</a> 优秀的领导者创造环境让自我管理（self-organizing）团队茁壮成长，从而创造伟大的产品和服务去满足客户的需求。这是Ole Jepsen在本次采访中表达的观点。在XP Days Benelux会议上，他谈到什么是真正的领导力，以及控制和放权之间微妙但重要的差异。 
  </div>  
 </body>
</html>