<html>
 <head></head> 
 <body>
  <div>
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/11.htmlb">10大准则令完美的开发/测试实验室成为可能</a> 对企业来说，开发和测试驱动业务的软件所需的时间，往往就像是个无底洞。现在，凭借能够将私有和公有云规范化的新技术，“终极软件开发实验室”不止成为可能而且还具有成本效益。为了实现超敏捷软件开发，这里给出了若干关键准则，用来构建企业DevOps梦寐以求的下一代开发/测试实验室。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/10.htmlb">HBase优化案例分析：Facebook Messages系统问题与解决方案</a> 该论文首先讲了Facebook的分析方法包括tracing/analysis/simulation，FM系统的架构和文件与数据构成等，接下来开始分析FM系统在性能方面的一些问题，并提出了解决方案。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/9.htmlb">PyParallel：Python的一个快速并行版本</a> By combining asynchronous I/O with a shared-nothing architecture, PyParallel research project is able to execute code in a parallel context faster than it can using CPython’s normal interpreter. And it does this without removing the GIL. The secret, no reference counting or garbage collection of any kind. 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/8.htmlb">深度剖析京东云引擎核心技术</a> 京东云引擎构建于Cloud Foundry之上，为更好地服务于个人开发者与京东ISV，开发团队对Cloud Foundry做了许多重要扩展，如智能路由、弹性伸缩、智能启动与资源隔离及访问控制。本文为您一一剖析它们的实现原理。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/7.htmlb">仆人领导</a> 本文中，我们将讨论仆人领袖，或者是潜在的Scrum Master、敏捷项目经理、潜在的客户经理，及你所需要填充的任意角色上，可能需要的素质、偏好和非技术技能。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/6.htmlb">达成销售，然后构建</a> “在编写任何代码之前，确保先有一个失败测试。”在90年代晚期出现时，这曾是个革命性的概念。而现如今，许多成功的企业家实践了另一个相似的理念：“在构建产品/服务以前，首先确保拥有付费的客户。”Naresh Jain介绍了寻找有效的MVP以验证其教育产品的方法，以及为何敏捷方法未能奏效。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/5.htmlb">可视化Java垃圾回收</a> 垃圾回收，就像双陆棋一样，只需几分钟来学习，但要用一生来精通。本文是对资深培训师兼顾问Ben Evans最近在InfoQ的演讲“可视化垃圾回收”的总结。在演讲中，他从基础谈起讨论了垃圾回收。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/4.htmlb">在实践中实施看板</a> 在精益看板大会上，InfoQ问Arne Roock博士，团队如何评估看板是不是正确的工具以及如何开始实施。他给出了若干规定性建议。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/3.htmlb">专访Yammer公司Brian Murray：精益创业和最简化可实行产品的使用</a> Brian Murray详细地说明了Yammer是如何使用最简化可实行产品来检验他们在业务上的用户假设，以及为什么他们要在自己的产品架构的上投入如此多的精力。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/3.htmlb">Java里快如闪电的线程间通讯</a> 完全不用锁、同步器、信号量、等待和通知，在Java里开发一个轻量、无锁的线程间通讯框架；并且也没有队列、消息、事件或任何其他并发专用的术语或工具。只用普通的老式Java接口实现POJO的通讯。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/2.htmlb">关于DevOps你必须知道的11件事</a> 尽管很多人视DevOps为ITIL和ITSM的颠覆，而我则有着不同的看法，在支撑IT运维的业务流程方面，ITIL和ITSM流程无疑还是最好的。实际上，他们描述了需要被IT运维支持的功能集合，这些功能集合足以支撑DevOps式的工作流。本文从DevOps的定义入手，介绍DevOps的理念、基本原则以及一些模式。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/2.htmlb">Node 出现 uncaughtException 之后的优雅退出方案</a> Node 的异步特性是它最大的魅力，但是在带来便利的同时也带来了不少麻烦和坑，错误捕获就是一个。由于 Node 的异步特性，导致我们无法使用 try/catch 来捕获回调函数中的异常，本文将讨论一种Node 出现 uncaughtException 之后的优雅退出方案。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/1.htmlb">使用Spring Boot构建RESTful Web服务以访问存储于Aerospike集群中的数据</a> Spring Boot能够帮助你很容易地构建基于Spring的应用。Aerospike是分布式和可复制的内存数据库，它遵循ACID。本文将会引领你使用Spring Boot和Aerospike创建一个简单的RESTful Web服务。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/0.htmlb">执行分析还是内存分析？</a> 在寻找执行热点的时候，有时内存分析将会提供比执行分析更加清晰的图像。在本文中，Kirk Pepperdine谈论了一些决定应该在什么时候采用哪种类型的分析器的指示灯。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/49.htmlb">浅析基于微软SQL Server 2012 Parallel Data Warehouse的大数据解决方案</a> 本文将深入介绍SQL Server 2012 Parallel Data Warehouse的Polybase技术，并结合具体业务场景示例讲解Polybase技术如何为业务人员提供简单易用的大数据解决方案。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/48.htmlb">虚拟座谈会：性能调优面面观</a> 在应用交付领域，看上去性能调优仍然没有成为主流。InfoQ采访了性能监控领域的5位大师，探讨了其原因，以及我们该做些什么。讨论非常激烈。虚拟座谈会的5位成员是Ben Evans、Charlie Hunt、Kirk Pepperdine、Martin Thompson和Monica Beckwith。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/47.htmlb">跟Alexander Smirnov聊图形可视化</a> To help the user understand what they are seeing, developers often turn to bar and pie charts. But that only works for discrete data; when at the links between data other tools come into play. We asked Alexander Smirnov, creator of GraphX, to explain what graph visualization is and how it can be used. 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/46.htmlb">DevOps ≠ Chef/Puppet</a> 如何才能实现DevOps呢？很多人会不假思索地告诉你，使用Chef/Puppet，你就能实现DevOps。于是，DevOps变成了一个简单的问题，选择Chef还是Puppet。这并不奇怪，在开源软件盛行的今天，各种软件声称自己是DevOps工具，而人们通常不会去思考一项新技术或者新思路背后的缘由，人们需要的是“银弹”。 如同Agile，把DevOps等同于工具层面的Chef/Puppet，是错误的，会严重束缚人们的思维。在国内Cloud Native应用开发时代即将开启的今天，充分认识DevOps是很有必要的。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/45.htmlb">分布式系统的事务处理</a> 本文来自阿里巴巴北京研发中心、商家业务部任资深专家陈皓自己的博客（http://coolshell.cn/articles/10910.html），在本人许可下，由InfoQ中文站进行转载，在这里给大家分享。本文讨论了在数据冗余情况下考虑数据的一致性和性能的问题。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/44.htmlb">豆瓣 CODE 两年历程回顾：git 不是万能的，没有 review 是万万不能的</a> 2014 年 2 月 14 日是豆瓣 CODE 项目成立两周年，同日豆瓣 CODE 团队宣布将整个框架开源。本次开源包含 CODE 框架以及 Mikoto、Linguist、P、CodeLive 等周边项目，感兴趣的工程师可以在这个基础上继续开发。下面，豆瓣 CODE 的工程师们将在 InfoQ 上分享一些 CODE 背后的故事。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/43.htmlb">Docker：利用Linux容器实现可移植的应用部署</a> Docker是一种在Linux容器里运行应用的开源工具，一种轻量级的虚拟机。除了运行应用，Docker还提供了一些工具，借助Docker Index或自己托管的Docker注册表对进行了集装箱化处理的应用进行分发，从而简化复杂应用的部署过程。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/42.htmlb">ReactiveCocoa - iOS开发的新框架</a> ReactiveCocoa（其简称为RAC）是由Github 开源的一个应用于iOS和OS X开发的新框架。RAC具有函数式编程和响应式编程的特性。它主要吸取了.Net的 Reactive Extensions的设计和实现，本文详细介绍了这个框架。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/41.htmlb">借助JArchitect探究Cassandra CLI内部机制</a> 文中，作者通过使用JArchitect工具和CQLinq语言分析Cassandra CLI的源代码来探究CLI的架构模型。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/40.htmlb">“数据驱动生活，算法统治世界”——QCon北京2014专题出品人吴甘沙专访</a> 大数据可以被分为收集、组织、存储、检索、可视化以及数据分析，其核心是从数据中挖掘出价值。正如Google首席经济学家Hal Varian所说，数据是广泛可用的，所缺乏的是从中提取出知识的能力。数据收集的根本目的是根据需求从数据中提取有用的知识，并将其应用到具体的领域之中，而不同领域的大数据应用有不同的特点。本届QCon北京2014，InfoQ特别邀请到英特尔中国研究院首席工程师吴甘沙来打造“数据驱动生活，算法统治世界”专题，解读数据与算法与普通人生活的关系。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/39.htmlb">你的应用就绪了吗？</a> 我们通常会按时间交付软件，在截止时间之前努力完成所有开发和测试工作。我们会优先完成那些自己觉得重要的部分，当应用达到确定的质量标准后，就准备上线了。但交付软件时，我们能辨别应用的就绪状态吗？ 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/38.htmlb">Scrum Master：职位还是角色？</a> Scrum交付团队需要专职Scrum Master。但在团队成长起来以后，是否仍然需要这样一个专职Scrum Master呢？本文提出了另一个方案。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/37.htmlb">开发经理的职能</a> 开发经理要承担很多责任，但重要的是发布产品。担任这个职位需要很多技能，本文讨论了要成为一名能干的开发经理需要掌握哪些技能，哪些技能又能忽略。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/36.htmlb">对培育市场创新来说，安全管理API技术至关重要</a> Web服务以实时创新的方式，带来了杰出的市场投放速度。但同时它需要在如何保护和管理API方面采用全新的标准，并具备在B2B企业网关层面进行组织机构间通讯的特质。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/35.htmlb">Windows Server基础架构云参考架构：硬件之上的设计</a> 毫无疑问，移动互联网、社交网络、大数据和云计算已经成为IT发展的四个大的趋势。其中云计算又为前三个提供了一个理想的平台。今天不仅互联网公司，很多传统行业的大中型企业也在建设自己的私有云。本文旨在介绍一个基于Windows Server 2012和System Center 2012 SP1构建基础架构云其硬件部分的参考架构。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/34.htmlb">阅读者（二十七）：两家公司，两个故事</a> 我基本不读当季的热门书，原因是希望让时间来帮忙筛选掉一些书，最近连续读了《打造Facebook：亲历Facebook爆发的5年》和《淘宝技术这十年》这两本不那么技术的书，它们分别和两家大公司有关，讲述了两段不同的故事。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/33.htmlb">超越数据挖掘</a> 作者在文中探讨了预测建模社区的关注点需要做出的改变，并比较了四种不同的数据挖掘类型：算法挖掘、景观挖掘、决策挖掘和讨论挖掘。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/32.htmlb">Android布局优化</a> 在Android开发中，我们常用的布局方式主要有LinearLayout、RelativeLayout、FrameLayout等，通过这些布局我们可以实现各种各样的界面。与此同时，如何正确、高效的使用这些布局方式来组织UI控件，是我们构建优秀Android App的主要前提之一。本篇内容就主要围绕Android布局优化来讨论在日常开发中我们使用常用布局需要注意的一些方面，同时介绍一款SDK自带的UI性能检测工具HierarchyViewer。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/31.htmlb">作者访谈与书评：“Nagios企业监控实践（原书第2版）”</a> 最近，David Josephsen的一本关于构建监控平台最佳实践的新书出版了，该书侧重使用方面对Nagios的运作原理进行了介绍，并包含了实施Nagios项目的实用指南。David编写这本书虽然以帮助系统工程师和企业架构师为主，但书中包含的内容依然与大多数技术角色相关。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/30.htmlb">基于AWS的自动化部署实践</a> 随着DevOps观念的深入发展，自动化部署已经逐渐成为现代软件开发、部署及运营中的重要一环。本文以Amazon Web Service（AWS）为背景，详细介绍了为运行在AWS上面的在线服务进行自动化部署的一种实践，呈现出传统DevOps精神与AWS服务的高度结合。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/30.htmlb">宁愿编写代码？还是把事情都写下来吧！</a> 出于多方面原因，大多数开发者都很讨厌编写代码之外的东西。敏捷宣言也不再强调文档的重要性，但是有的时候，项目中的些许文档可能会起到很大的作用。在这篇文章中，我们来探讨一下，为什么“协作胜过面面俱到的文档”并不意味着“不要”文档，以及何时应该停下手中的代码，把事情记下来。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/29.htmlb">为首次部署MongoDB做好准备：容量计划和监控</a> 在本文中作者Mat Keep将从容量计划和监控两个方面讨论MongoDB数据库的最佳部署实践。他还会介绍硬件选择、监控的关键指标和添加分片的时机等主题。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/28.htmlb">从MVC在前端开发中的局限性谈起</a> 我们知道Controller的职责之一是负责响应用户在视图上的行为，而具体每个行为应如何进行响应，需要落实到Controller具体的方法上，这个方法我们可以称之为action。但问题来了，如何将用户在视图上的行为，与响应行为的方法action关联起来？甚至与Controller关联起来？URL便是方法之一，但是这样还是有局限性。本文就从这其中的局限性谈起。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/27.htmlb">敏捷项目估算：什么是故事？什么是点数？</a> 有没有想过在敏捷项目中我们该如何以及为什么要进行估算？在David Morris为InfoQ写的第一篇文章中，他描绘了自己从90年代以来的经验和其它几位主要敏捷作者的论述，对敏捷估算这个话题进行了探讨：它是什么？我们通常怎么做？为什么要做？对#NoEstimates（不要估算）争论的简要评价，以及最后为初学者提出了一些建议。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/26.htmlb">Backbone与Angular的比较</a> Victor Savkin为读者分析了使用Backbone.js和Angular.js创建web应用的优缺点，并对这两种框架进行了深入比较。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/25.htmlb">业务架构的主题和规则</a> 本文定义了业务架构的主题和规则。与其他方式不同，只有业务职能和业务信息才能成为架构中的实体，共同形成业务架构的主题。另一方面，业务架构的规则是对业务架构主要及次要任务的描述。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/24.htmlb">使用Jazz Automation编写自动化测试</a> Jazz Automation是一个测试框架，构建它的目的是为所有类型的Web系统或者静态网站自动化同时加速验收/功能测试。它还能够容易地实现自动化集成测试。以前的时候这种类型的测试需要人工完成，劳动强度大又不准确。借助于自动化测试，公司能够创造高质量的应用程序，创造的产品bug更少，同时又加快了投入市场的速度。Jazz Automation支持下面的Web浏览器：IE、Firefox、Safari和Chrome。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/23.htmlb">《管理不易管理之人》作者问答</a> Mickey Mantle和Ron Lichty写了一本有关管理程序员和雇佣程序员的书。本书分析描述了程序员的特质和程序员团队的特质，讨论了如何管理好他们这个问题。他们将他们多年积累的工具和规则分享给大家。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/22.htmlb">教育也敏捷——eduScrum和蓝图教育的经验之谈</a> 学校用Scrum帮学生提高学习效率，让他们以一种愉悦的方式培养自己。自发组织起来的学生团队按Sprintsprint的方式学习各种科目，推进他们的学习过程。敏捷可以改善教学质量，提高成绩，激发学生的学习热情。这次InfoQ的访谈对象来自几所采用敏捷方式教学的学校。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/21.htmlb">实现Java中的高性能解析器</a> 在某些情况下，你需要实现自己的解析器，有可能是因为没有标准的做法可以满足你的需求。本文将带你一步一步创建高性能的解析器。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/20.htmlb">从Reifer的“敏捷方法定量分析”研究中学到的十个知识点</a> Reifer咨询有限责任公司发表了一份名为“敏捷方法定量分析”的基准报告，这份报告比较了敏捷方法软件生产率、成本、持续时间和质量与传统的计划驱动项目的差异。本文从这份研究报告中总结了十个知识点。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/19.htmlb">ATDD实战</a> 本文以一个具体的例子阐述了如何基于已有的代码库启用验收测试驱动开发。这是应对技术债解决方案的一部分。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/18.htmlb">作者问答 – Java编码规范</a> 大多数开发者都同意编写安全的代码的必要性，但往往因为项目发布的压力使他们放弃了这一追求。而另一些开发者可能仅仅是不知道从哪里开始着手。InfoQ有幸与《Java Coding Guidelines》的作者们进行了一次对话，试图更多地了解他们的新书是如何帮助开发者们编写更好的代码的。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/17.htmlb">使用AeroGear框架进行Java EE 移动应用开发</a> AeroGear是JBoss所推出的一个移动开发框架，它支持在iOS和Android设备上开发web、混合与原生移动应用的开发，还包括了相应的服务端资源，并且加入了对RESTEasy等现有项目的扩展。Jay Balunas与Marius Bogoevici在JavaOne 2012大会上的演讲中介绍了AeroGear框架。InfoQ与他们两位和Anil Saldhana进行了一次对话，谈论了关于移动开发的一些话题。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/16.htmlb">书评：DevOps for Developers</a> 尽管其标题，“DevOps for Developers”是一本面向所有对DevOps感兴趣的入门级书籍，却聚焦三个观点：度量观、流程观和技术观。 
  </div> 
  <div> 
   <a href="https://raw.github.com/TomJerryA/Test/master/InfoQ/15.htmlb">今日Java——Cay Horstmann访谈</a> 近日InfoQ荣幸邀约Cay Horstmann，就Java最新形势和Cay的新书Java核心技术：卷一&amp;卷二（第九版）进行探讨。 
  </div>  
 </body>
</html>