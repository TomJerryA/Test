<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /></head><body><h3>iBeacon Device Maker Estimote Releases 1.3 SDK with UUID Customization</h3><p><a href="http://estimote.com">Estimote</a> has released a <a href="http://blog.estimote.com/post/74816977799/estimote-app-v1-2">new version</a> of their mobile SDK that allows developers to build contextual computing solutions using small Bluetooth low energy (Bluetooth LE or BLE) beacons called “motes”.</p>
<p>Estimote is a maker of these small iBeacon devices which are capable of broadcasting BLE signals that can be detected by compatible smartphones to enable a variety of micro-location services.</p>
<p>Estimote, similar to other beacon and wearable device makers, is fueling the Internet of Things revolution by enabling contextual computing for developers. The potential application of BLE in wearable devices and smartphones is wide reaching from mobile payment transactions, to smart buildings, to guided tours where you interact with the environment around you, to mobile coupons and shopping.</p>
<p>Release 1.3 of the Estimote’s Objective-C SDK allows developer to now update the UUID on their beacon devices. Previously you were restricted using Estimotes hard coded UUID which was a major limitation to developers. This is an important next step in the flexibility of the SDK to allow developers to customize Estimote Bluetooth beacons without being limited to a single hard coded UUID. UUID customization allows application developers to define their own BLE signal signature unique from other applications and services. Future releases are promising more enterprise features along with authentication and encryption. Currently, Estimote devices are in beta release and can be ordered from their website.</p>
<p>Estimote beacons are powered by a 32-bit ARM processor and include features such as an accelerometer and temperature sensors along with <a href="http://en.wikipedia.org/wiki/Bluetooth_low_energy">Bluetooth LE</a> transmission capability.</p>
<p>Prior versions of the SDK did not allow developers to customize the UUID, thus developers were restricted to Estimote’s hardcoded configurations. Estimote has further indicated on its blogs and <a href="https://github.com/Estimote/iOS-SDK/issues/9">community discussion boards</a> that it plans to enable authentication to its devices so that UUIDs and major/minor numbers can be secured and locked down by the beacon owners. These are all features vital to allowing Estimote’s small beacon devices to be used in production environments by enterprise customers such as retailers.</p>
<p>The new SDK includes the following new Objective-C method to set the UUID:</p>
<pre>
void)writeBeaconProximityUUID:(NSString *)<i>pUUID</i> 
withCompletion:(ESTStringCompletionBlock)<i>completion</i></pre>
<p>To complement the SDK update, Estimote has <a href="http://community.estimote.com/hc/en-us/articles/200922676-Estimote-App-2-1-released-">released a new version</a> of their iOS app that allows developers to customize the Bluetooth settings on individual beacons. The new app adds several new features including:</p>
<ul> 
 <li>Adjusting Bluetooth advertising interval</li> 
 <li>Adjusting Bluetooth broadcasting power level</li> 
 <li>Over-the-air firmware update of all beacons</li> 
</ul>
<p>This app is available in the Apple app store and the related source code can be found on <a href="http://github.com/Estimote">GitHub</a>.</p>
<p>Looking toward the future, developers are still eagerly awaiting the production launch of Estimote’s beacons and support for a more robust <a href="http://community.estimote.com/hc/communities/public/questions/200906137-Estimote-Beacon-Connect-Password">iBeacon security model</a> in the SDK. Today you can “pre-order” developer versions of Estimote’s beacon devices to integrate contextual computing and micro-location into your mobile apps.</p><br><br><br><br><br><br></body></html>