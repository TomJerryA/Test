<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /></head><body><h3>Ruby 2.1.0 Released, Delivering new GC</h3><p class="MsoNormal">The official release of Ruby 2.1 has <a href="http://www.ruby-lang.org/en/news/2013/12/25/ruby-2-1-0-is-released/">arrived</a>, bringing with it a number of <a href="http://www.infoq.com/news/2013/09/ruby-2-1-gc-revamp">anticipated</a> improvements, including big changes to the garbage collector which will bring several performance enhancements now and in the future.&nbsp; 
 <o:p></o:p></p>
<p class="MsoNormal">The garbage collector in Ruby 2.1 implements a form of generational garbage collection, with Ruby calling their implementation RGenGC (Restricted Generational Garbage Collection).&nbsp; This replaces the “Mark &amp; Sweep” implementation used in previous versions of Ruby.&nbsp; A presentation by Ruby developer Koichi Sasada in April 2013 observed that the challenge for Ruby developers was to implement a GC algorithm that could handle both protected and unsafe objects in the same heap.&nbsp; 
 <o:p></o:p></p>
<p class="MsoNormal">Since rewriting all existing C-extensions to use the new GC is not practical, Write-Barriers are used as part of the RGenGC implementation.&nbsp; As Sasada explains in a <a href="http://www.atdot.net/~ko1/activities/rubyconf2013-ko1_pub.pdf">presentation</a>&nbsp;(PDF) given at RubyConf 2013, RGenGC provides a third way given the 2 original alternatives:&nbsp; A) Do not implement generational GC at all (as in Ruby 2.0 &amp; before) or B) Implement Generational GC with a requirement that all C-extensions are rewritten.&nbsp; 
 <o:p></o:p></p>
<p class="MsoNormal">Using RGenGC provides high compatibility with existing extensions while still bringing performance improvements.&nbsp; Popular objects Array, String, Hash, Object, and Numeric are Write-Barrier protected, thus able to take advantage of the RGenGC system. &nbsp;Future work on both internal and external libraries offer the possibility of additional performance gains in the future.
 <o:p></o:p></p>
<p class="MsoNormal">The new garbage collection system is not the only improvement, others include RDoc 4.1.0, RubyGems 2.2.0, and several updated libraries.&nbsp; For a complete list of 2.1’s changes take a look at the <a href="https://github.com/ruby/ruby/blob/v2_1_0/NEWS">release notes</a> located at the project’s GitHub page.
 <o:p></o:p></p><br><br><br><br><br><br></body></html>