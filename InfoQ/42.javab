<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /></head><body><h3>API Business Models: 20 Models in 20 Minutes</h3><p>John Musser knows APIs. As the founder of Programmable Web, John has witnessed thousands of APIs and many business models. John recently shared his experience in a <a href="http://www.infoq.com/presentations/API-Business-Models">keynote address</a> at the 2013 API Strategy Conference.</p>
<p>The most frequent question asked of John is &quot;how do you make money from this?&quot; The answer depends on why...&quot;why do you want an API?&quot; There are many reasons to have an API and this leads to the first of John's five API secrets that he discloses in the keynote, &quot;an API strategy is not an API business model&quot;. An API strategy is about &quot;why&quot; you want an API and a business model is about &quot;how&quot; you make money from it.</p>
<p>Looking back to 2005, the beginning of APIs and the time when Google Maps took off, there were four core API business models: &quot;free&quot;, &quot;developer pays&quot;, &quot;developer gets paid&quot; and &quot;indirect&quot;. Today in 2013 there are still the same four core business models but each has expanded into a variety of different ways to provide and monetise APIs. John's second secret is that &quot;most APIs have more than one type of ROI.&quot;</p>
<p>For the remainder of his address, John takes a deep dive into each of the core business models, starting with &quot;Free&quot;. Contrary to popular belief, &quot;free&quot; is not the predominant API business model. John cites Facebook as an example plus all the government and public sector APIs, but these free APIs are only a &quot;tiny fraction&quot; of all API business models.</p>
<p><img src="http://www.infoq.com/resource/articles/api-business-models/en/resources/Fig1.jpg" alt="" _href="img://Fig1.jpg" _p="true" /></p>
<p>The next category John describes is &quot;developer pays&quot; where application developers pay for the services provided by the API. This comprises many sub-categories such as &quot;pay as you go&quot; where developers pay only for the services or resources they actually consume. John's example here is Amazon Web Services which states in its pricing plan: &quot;Pay only for what you use. There is no minimum fee.&quot; A second sub-category, the &quot;tiered&quot; model offered by companies like Mailchimp provides lower cost per unit as you consume higher volumes of their services. &quot;Freemium&quot; is a well known model where basic features are provided free but for a fee you add services such as additional APIs, higher SLAs, an account representative etc. John cites Compete and Google Maps as examples of the freemium model. &quot;Unit-based&quot; pricing is another sub-category such as Sprint's offering where different features in the API attract different charges. The final example of &quot;developer pays&quot; is the &quot;transaction fee&quot; familiar to users of payment APIs where a percentage of the transaction is charged. John cites PayPayl, Stripe and Chargify as examples of this model.</p>
<div id="lowerFullwidthVCR"></div>
<p><img src="http://www.infoq.com/resource/articles/api-business-models/en/resources/1Fig2.jpg" alt="" _href="img://1Fig2.jpg" _p="true" /></p>
<p>The converse of &quot;developer pays&quot; is the &quot;developer gets paid&quot; business model and that is the next category that John describes. This category also has many sub-categories such as the &quot;affiliate revenue share&quot; model offered by Amazon Affiliate Program where developers are paid for customer referrals. Another sub-category is &quot;revenue share&quot; where developers are paid a share of the revenue from referring purchases. John gives the example of mysimon.com and howstuffworks.com, comparison sites which use shopping.com APIs to support product comparisons and then gain revenue share from click-throughs. John notes that affiliate revenue share is not a &quot;small business.&quot; Expedia derives 90% of their revenue from an affiliate network using Expedia APIs which represents $2 billion per year. Finally there is the &quot;recurring revenue share&quot; model used by companies such as rdio.com where affiliates who refer new customers for subscription purchases are paid a revenue share for the life of that customer.</p>
<p>John's API business model secret number three is &quot;you need to bake your business model into your API.&quot; This is the biggest secret that John wants his audience to go away and think about. For example, the Amazon affiliate programme was a natural extension of their retail business model.</p>
<p><img src="http://www.infoq.com/resource/articles/api-business-models/en/resources/Fig3.jpg" alt="" _href="img://Fig3.jpg" _p="true" /></p>
<p>Out of the original four core business models, John now discusses the &quot;Indirect&quot; category which he thinks contains some of the most interesting ways to monetize APIs. The first sub-category is &quot;content acquisition.&quot; Businesses like eBay and Twitter need to rapidly acquire content in order to grow, so they use APIs to facilitate content acquisition. eBay APIs allowed power users to create mass listings in the eBay marketplace. Twitter derives and distributes content almost exclusively through APIs and third-party applications. &quot;Content dissemination&quot; is the next sub-category, where the New York Times has lots of content and utilises APIs to syndicate that content to partners.</p>
<p>SaaS up-sell is another business model within the &quot;indirect&quot; category. Salesforce.com offers API access to their platform, but only for companies that pay the enterprise licence. Salesforce.com knows that API integration is important and uses that to upsell customers into higher subscriptions. John characterises APIs as &quot;the glue of any SaaS.&quot; Integration adds value to SaaS applications and provides a stickiness factor that dramatically reduces churn. John's API business model secret number four is &quot;API business models are not one size fits all.&quot;</p>
<p>The final business model John presents is the &quot;internal use&quot; model where companies use APIs to support their own business. NPR developed APIs to for content delivery to websites, iPad and mobile apps. Over 99% of Evernote's API traffic is from iPad apps, mobile apps and partner apps. And Netflix uses its APIs to support content delivery to over 800 different kinds of devices. Hence John's fifth and final API secret is that &quot;internal use may be the biggest API use-case of them all.&quot;</p>
<h2>About the Author</h2>
<p><strong><img src="http://www.infoq.com/resource/articles/api-business-models/en/resources/SaulCaganoff.jpg" vspace="3" hspace="3" align="left" alt="" _href="img://SaulCaganoff.jpg" _p="true" />Saul Caganoff</strong> is the CTO of <a href="http://www.sixtree.com.au/">Sixtree</a>, an Australian system integration consultancy. He has extensive experience as an architect and engineer in major integration and software development projects in Australia, the United States and Asia. Saul's professional interests include architecture at all levels - enterprise, solution and applications - distributed systems, composite applications, cloud computing and cloud APIs.</p><br><br><br><br><br><br></body></html>