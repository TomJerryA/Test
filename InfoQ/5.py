<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /></head><body><h3>Entity FrameworkベースのコアビジネスアプリケーションでDDDを活用する</h3><p><a target="_blank" href="http://www.infoq.com/news/2013/11/leveraging-ddd-ef"><em>原文(投稿日：2013/11/30)へのリンク</em></a></p>
<div class="article_page_left news_container text_content_container"> 
 <div class="text_info"> 
  <p><a href="http://en.wikipedia.org/wiki/Domain-driven_design">ドメイン駆動設計 (Domain-Driven Design/DDD)</a> とはすなわちドメインだ，永続性ではない – <a href="http://thedatafarm.com/blog/">Julie Lerman</a>氏が先日，スエーデンの開発者カンファレンス&Oslash;redevで行った<a href="http://vimeo.com/78893724">プレゼンテーション</a>での説明だ。<br /> 2003年の<a href="http://mvp.microsoft.com/en-us/mvp/Julie%20Lerman-8987">Microsoft MVP</a>であり，.NETプラットフォームのコンサルタントである氏は，この25年間，データベースプログラミングに注目してきた。ここ数年は <a href="http://msdn.microsoft.com/en-us/data/aa937723">Entity Framework (EF)</a> を用いていたが，最近ではドメインを重視したDDDに関心を持っている。<br /> 自身の経験から，DDDに従事する人々の多くは永続性を気に掛けていない，データベースはもはや開発作業の最後の付け足しに過ぎない，と氏は述べている。とは言っても，最終的にはデータをデータベースに格納しなければならない。ドメインを重視しながらも，永続化の機能を追加すべき時がいつなのかは事前に把握しておきたい，と氏は考えている。</p> 
  <p><a href="http://en.wikipedia.org/wiki/Domain-driven_design#Bounded_context">コンテキスト境界(Bounded Context)</a>は氏にとって，DDDでもっとも重要なコンセプトのひとつだ。アプリケーション全体のエンティティや動作などを一度に考えなくてよいように，コンテキスト境界は，問題に関する思考の構造化，サブシステム化を支援してくれる。カスタマサービスに関する作業を行う時には他のサブシステム，例えばマーケティングとのインタラクションは無視することができるのだ。識別情報などわずかな情報を他のコンテキストから参照する必要はあるかも知れないが，ほとんどの部分は，コンテキストドメイン内の境界情報を考えるだけでよい。つまり永続性を考えるにあたって，一度に注目するのは少数のエンティティに限定できる，ということだ。<br /> 例えば顧客エンティティのように，複数のコンテキストで同じエンティティを使用して作業するような場合であっても，永続化の対象となるCustomerテーブルを変更することなく，コンテキスト毎に顧客エンティティを再定義できるのである。別テーブル，あるいは別データベースによって完全にコンテキストが分離されるようなことがなければ，潜在的な拡張を意識することもない。</p> 
  <p><a href="http://en.wikipedia.org/wiki/Value_object">バリューオブジェクト(Value Object)</a>は氏を困惑させるコンセプトのひとつだ。氏は５人にDDDエキスパートから違う説明を受けた。彼らの言うことはみな正しく，氏の見聞を豊かにしてくれた。バリューオブジェクトとは，データベースの複数カラムに永続化される複合タイプとして機能する，アイデンティティを持たない不変オブジェクトである，というのが，現在の氏の認識だ。</p> 
  <p>氏は通常，ドメインモデルをデータモデルとしても使用しているが，非常に複雑なドメインを扱う場合には，永続化モデルを分離する必要を感じている。従来型のデータベースを使った開発が，そのようなシナリオのひとつだ。</p> 
  <p>氏は今年始め，データ駆動開発からDDD利用に移行する過程で学んだことを基に，<a href="http://www.infoq.com/news/2013/10/data-driven-to-ddd">３つの記事を書いている</a>。</p> 
 </div> 
</div><br><br><br><br><br><br></body></html>