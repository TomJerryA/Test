<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /></head><body><h3>BDD and JavaScript Using CucumberJS</h3><p><a href="https://github.com/cucumber/cucumber-js">CucumberJS</a> is a new tool that when added to the <a href="http://en.wikipedia.org/wiki/Test-driven_development">TDD</a> workflow for JavaScript-based projects embraces the ideas of <a href="http://en.wikipedia.org/wiki/Behavior-driven_development">Behaviour Driven Development</a>, BDD, allowing a developer to follow the TDD principles while developing from the outside in; running automated tests that fail until code that supports a feature is implemented, <a href="http://custardbelly.com/blog/blog-pages/about.html">Todd Anderson</a> <a href="http://custardbelly.com/blog/blog-posts/2014/01/08/bdd-in-js-cucumberjs/index.html">reveals</a> in a recent blog post.</p>
<p>Todd, an application developer and co-author of <a href="http://www.amazon.com/Todd-Anderson/e/B0037FMULM/ref=ntt_athr_dp_pel_2">three books</a>, describes CucumberJS as a port of the BDD tool <a href="http://cukes.info/">Cucumber</a> to JavaScript running both on <a href="http://nodejs.org/">NodeJS</a> and modern web browsers. It allows definitions of feature specifications to be written in <a href="http://docs.behat.org/guides/1.gherkin.html">Gherkin</a> and these specifications to be run using a command line tool which will report pass or fail of the steps and scenarios building up a specification. He notes though that Cucumber is only the testing framework, it's up to a developer to include an assertion library that will make these steps pass or fail.</p>
<p>Todd uses an earlier <a href="http://custardbelly.com/blog/blog-pages/category/grocery-ls.html">grocery list application</a> as an example of how to adapt to BDD using Cucumber, giving one example of a feature:</p>
<pre>
 <blockquote>
   Feature: Shopper can add an item to their Grocery List
  <br />  Scenario: Item added to grocery list
  <br />    Given I have an empty grocery list
  <br />    When I add an item to the list
  <br />    Then the grocery list contains a single item
 </blockquote></pre>
<p>The feature defines a business value, while the scenario defines the steps that provide that value. Each scenario has a list of steps defined by the keywords <em>Given</em>, <em>When</em>, <em>Then</em>; steps that CucumberJS will execute after having read the feature specification. <br /> Using CucumberJS together with NodeJS, Todd walks through some examples of implementing and running the grocery list application while moving from all tests failing to all pass.</p>
<p>Todd concludes with a belief that there is a reward in having code under a test harness when it comes to refactoring and bug fixing, and with an ambition to follow up with new posts addressing how he uses CucumberJS to run tests integrating with a browser.</p>
<p>BDD was developed around 2006 by <a href="http://dannorth.net/about/">Dan North</a>.<br /> Cucumber is an open source tool for Behaviour Driven development, BDD, currently for nine programming languages, including JavaScript.</p><br><br><br><br><br><br></body></html>