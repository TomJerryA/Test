<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /></head><body><h3>Elasticsearch 1.0.0 released</h3><p>Elasticsearch <a href="http://www.elasticsearch.org/blog/1-0-0-released/">released</a> version 1.0.0 of its self-titled, open-source analytics tool. Elasticsearch is a distributed search engine which allows for real-time data analysis in big-data environments. It's based on the <a href="http://lucene.apache.org/"> Apache Lucene</a> text search engine and exposes its functionality via a ReST API. Besides directly accessing Elasticsearch via HTTP, there are client libraries for various languages like Java, JavaScript, Python and more. It also allows for integration in <a href="http://hadoop.apache.org/">Apache Hadoop</a> environments. Elasticsearch is already used by companies that deal with vast amounts of data like GitHub, Foursquare or SoundCloud.</p>
<p>The basic features of Elasticsearch focus around scalability, high-availability and real-time analysis. Data entered into the search engine is immediately indexed, replicated in the cluster and ready to be analyzed.</p>
<ul> 
 <li><strong>Scalability:</strong> Elasticsearch is designed to work in clustered environments. As soon as a node is started, it automatically looks for other nodes in the network and connects to them. Indices are organized in shards and distributed over the cluster. Searching an index therefore is an distributed operation which runs in parallel over all cluster nodes. If there is the need for more performance, additional nodes just have to be added to cluster and the shards will reorganize automatically.</li> 
 <li><strong>Availability:</strong> Database shards are not only used for horizontal scaling but also for availability reasons. For each shard there is a replica shard which is stored on a different cluster node, so no data is lost if a node goes down. Malfunctioning nodes are detected by Elasticsearch and removed from the cluster. After removing a failing node, the shards are reorganized to optimize with regard to scalability and resilience.<br /> To support full cluster restarts, all meta-data needed by Elasticsearch can be persisted onto various storage-types. Data is stored with the help of so-called gateways which currently support local storage and shared file-systems.</li> 
 <li><strong>Real-time:</strong> Elasticsearch is schema-free and allows for arbitrary JSON documents to be indexed. The structure of the documents is analyzed and even some data-types like timestamps are automatically detected. By default, all fields contained in the documents are indexed and searchable. Besides simple full text search, facets - analytical functions providing bucketing (date ranges, distances, histograms and others) and metrics (sum, average, stats and others) - can be applied to the index immediately.</li> 
</ul>
<p>&nbsp;</p>
<h3>New Features in Elasticsearch 1.0.0</h3>
<p>Version 1.0.0 comes with various functional enhancements and changes to the API to make Elasticsearch more intuitive and powerful to use. Amongst others, the functional enhancements include new ways to backup and restore indices, analyze data and make Elasticsearch more resilient:</p>
<ul> 
 <li><strong>Snapshot/Restore:</strong> With the new version there is a simple API to produce snapshots of a complete cluster to create backups. The state of an Elasticsearch cluster including meta-data and indices can be stored in a snapshot repository. Usually the repository resides on a shared file-system and can hold an arbitrary number of snapshots. In case of issues that can't be handled by built-in fail-over and resilience mechanisms, the cluster can be recreated to any snapshot state in the repository.</li> 
 <li><strong>Aggregations:</strong> Aggregations provide even more powerful ways to analyze existing data than the existing facets in pre 1.0.0 versions. While facets only provide the mere results for analytical functions (e.g. the number of stores within a certain distance), aggregation retain which documents actually were found by a certain query and make it possible to use the resulting set of documents as input for a new query (e.g. the average sales volume by quarter for all stores within a certain distance).</li> 
 <li><strong>Circuit Breaker:</strong> Circuit breakers will be added to prevent operating or runtime errors from causing serious harm to the search index. The first safeguard that was added in Elasticsearch 1.0.0 is one that monitors free memory and estimates the amount of memory required by search or analysis operations. If an operation would need more than the available amount of memory it is blocked and won't create OutOfMemory-exceptions. More circuit breakers will be implemented in future releases.</li> 
</ul>
<p>&nbsp;</p>
<p>Elasticsearch used the major-version change to tidy up the existing API, also accepting to break backwards compatibility. Before upgrading to version 1.0.0, users are asked to backup all data and read the list of <a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/breaking-changes.html">breaking changes</a>.</p>
<p>Elasticsearch also provides additional tools to deal with data capturing and analysis. Together with <a href="http://www.elasticsearch.org/overview/logstash">Logstash</a> and <a href="http://www.elasticsearch.org/overview/kibana">Kibana</a>, Elasticsearch forms the <a href="http://www.infoq.com/news/2014/02/">ELK-stack</a> to parse log-files and other sources of time-related and analyze and visualize them in various ways.<br /> It's also possible to purchase professional support via Elasticsearch's <a href="http://www.elasticsearch.com/">commercial branch</a>.</p><br><br><br><br><br><br></body></html>