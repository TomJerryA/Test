<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /></head><body><h3>Introducing Clide, an “Enjoyable Visual Studio Automation API”</h3><p>When writing an add-in or extension for Visual Studio developers have traditionally had to choose between EnvDTE and the IVs interfaces. The former is easy to use but limited; the latter exposes all of Visual Studio but contains “a lot of COM baggage”. In an attempt to create library that is both powerful and easy to use Clarius Labs is offering <a href="https://www.nuget.org/packages/clide">Clide</a> which they call an “Enjoyable Visual Studio Automation API”.</p>
<p>Clide relies on modern .NET API coding styles such as the use of LINQ and extension methods. Here is a <a href="http://blogs.clariusconsulting.net/kzu/high-level-overview-of-visual-studio-extensibility-apis/">sample provided by Daniel Cazzulino</a> that demonstrates finding all of the project names in a solution.</p>
<pre><p>var projects = DevEnv.Get(serviceProvider)<br />    .SolutionExplorer()<br />    .Solution<br />    .Traverse()<br />    .OfType&lt;IProjectNode&gt;()<br />    .Select(project =&gt; project.DisplayName)<br />    .ToList();</p></pre>
<p>Clide is offered as an <a href="https://github.com/clariuslabs/clide">open source</a> project with a <a href="https://github.com/clariuslabs/clide/blob/master/License.txt">custom license</a>. The <a href="http://www.nudoq.org/#!/Projects/Clide">documentation</a> is available on NuDoq.</p><br><br><br><br><br><br></body></html>