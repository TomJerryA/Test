<p><a href="http://www.brentozar.com/archive/2013/02/7-things-developers-should-know-about-sql-server">Brent Ozar</a>, SQL Server Consultant, recently published seven techniques which every <a href="http://www.microsoft.com/en-in/SQLserver/default.aspx">SQL Server</a> developer should follow in their day-today programming tasks. According to Brent, developers should avoid the usage of <a href="http://msdn.microsoft.com/en-IN/library/ms188385.aspx">ORDER BY</a> clause as far as possible and advises developers to sort data by consuming all query results into the app memory. <br /> <br /> If you database performs some work such as processing, sorting, loading, caching then you should ideally use a separate databases for each task. Brent suggests you to put these databases in simple recovery mode and backup it once daily.</p> 
<p>He also suggest you to make effective use of <a href="http://msdn.microsoft.com/en-us/library/ms188754.aspx">Dynamic Management Views</a> (DMVs) and advises you to use 3 different connection strings in your app for various scenarios such as connection for writes, reads, data which are 5-15 minutes old and for data as of yesterday.&nbsp; According to Brent, the first connection string scenario is difficult to scale as we don't have a lot of options in SQL Server to scale out multiple servers that handle writes.<br /> <br /> &quot;<a href="http://blogs.technet.com/b/sql_server_isv/archive/2010/12/21/using-read-committed-snapshot-isolation-mini-lab.aspx">Read-Committed Snapshot Isolation</a> is a better choice than <a href="http://blog.sqlauthority.com/2011/05/08/sql-server-what-kind-of-lock-with-nolock-hint-takes-on-object/">With(Nolock)</a> for your app because it gets you consistent data with less blocking hassles,&quot; says Brent.<br /> <br /> According to Brent, you should not refer to old editions of books and online articles as they are not regularly updated.&nbsp; &quot;When you read something that sounds like good advice, I like to try the Anti-Doctor-Phil strategy,&quot; says Brent.<br /> <br /> Finally, Brent suggests you to make use of <a href="http://msdn.microsoft.com/en-us/library/aa174792(v=sql.80).aspx">stored procedures</a> and <a href="http://msdn.microsoft.com/en-in/library/ms187956.aspx">views</a> instead of functions if you want to reuse code. He says that functions has huge performance drawbacks in the database tier.</p> 
<p>Several developers doesn't agree to Brent's tips. <br /> <br /> Tyler Burd</p> 
<blockquote>
  I disagree with #2 (&quot;Avoid ORDER BY; sort in the app instead&quot;) without any stipulations.
</blockquote> 
<p>Brent replied to Tyler's remarks:</p> 
<blockquote>
  why not consume the entire dataset down to the app tier and cache it there? 
</blockquote> 
<p>Few developers also posted comments against Brent's suggestion to avoid functions and make use of views or stored procedures.<br /> <br /> Do you agree/disagree with Brent's tips and suggestions? Post your comments and InfoQ will make sure to reach out to Brent to address them?</p> 
<p id="lastElm"></p>