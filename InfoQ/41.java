<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /></head><body><h3>Spring Updated for Java 8</h3><p>Java 8 was <a href="http://www.infoq.com/news/2014/03/java8-launch-qa">released on March 18</a>, just a few weeks ago. Days later, <a href="http://at.linkedin.com/pub/juergen-hoeller/0/a6b/a07">Jeurgen Hoeller</a>, Spring Framework project lead, published an article titled <a href="http://spring.io/blog/2014/03/21/java-8-in-enterprise-projects">Java 8 in Enterprise Projects</a>. In it, he noted how established Java EE application servers won't allow you to upgrade easily.</p>
<blockquote> 
 <p>With Java EE servers, there is usually an upgrade showstopper in the form of a bundled JDK version. With WebSphere, even on WAS 8.5, the default JDK is still Java 6, with Java 7 as an opt-in choice. With WebLogic, recent releases are more strongly Java 7 based already. However, neither of those servers lets you freely choose the JDK generation to use.</p> 
 <p>As deeply integrated as an application server stack typically is with a specific JDK version, it's not advisable to simply run it against a different JDK installation. A current-generation application server is not likely to survive even a startup smoke test against JDK 8.</p> 
</blockquote>
<p>Hoeller goes on to write that those using Tomcat and Jetty have the edge for developers who want to adopt Java 8 rapidly.</p>
<blockquote> 
 <p>Lean web application servers such as Tomcat and Jetty have a clear advantage here in that they are not dependent on the specifics of any JDK version. Tomcat 8 and Jetty 9 have been tested against OpenJDK 8 for half a year already and are generally declared compatible with Java 8. Even Tomcat 7 joins that club, receiving an upgraded Eclipse compiler etc as well.</p> 
 <p>So both Tomcat and Jetty present themselves as immediate production-quality options for use with JDK 8.</p> 
</blockquote>
<p>He wraps up the post with a warning about specific frameworks and libraries needing to be Java 8 compatible. If you read the end of the article, it seems as if Spring is &quot;ready to go&quot; when it comes to Java 8.</p>
<blockquote> 
 <p>The Spring Framework 4 generation has been designed in a Java 8 compatible fashion right from the start. In fact, we released Spring Framework 4.0 GA with comprehensive Java 8 development support even before the first OpenJDK 8 release candidate became available.</p> 
 <p>From our perspective, Spring Framework 4 on Java 8 is a great combination in many environments, not just with Tomcat, Jetty or WildFly but also with recent embedded engines such as Reactor or Undertow, and other kinds of custom application architectures.</p> 
</blockquote>
<p>Six days later, <a href="http://spring.io/blog/2014/03/27/spring-framework-4-0-3-released-with-java-8-support-now-production-ready">Spring 4.0.3 was released</a>. The difference? This version of Spring &quot;is built with OpenJDK 8 GA&quot; and &quot;includes the latest ASM 5.0.1 (with bytecode support at the JDK 8 GA level as well, superseding the custom ASM 4.2 fork that we were previously using)&quot;. In addition to bonafide Java 8 support, Spring's 4.0.3 release has seen a lot improvements in the WebSocket space. From our review it appears that all of the issues noted in Prashant Deva's article, titled <a href="http://movingfulcrum.tumblr.com/post/78696653156/a-guide-around-spring-4s-buggy-websocket-support">A guide around Spring 4's buggy Websocket support</a>, are fixed as part of this release.</p>
<p><a href="http://www.infoq.com/news/2014/04/spring-boot-goes-ga">Spring Boot went GA</a> earlier this month and the <a href="http://www.linkedin.com/in/chrisbeams">Chris Beams</a> has done a nice job of showing <a href="http://spring.io/blog/2014/04/04/project-sagan-zero-downtime-deployments">how they built spring.io with Boot</a>. The Pivotal development team has been aggressive in supporting Java 8, as well as promoting their support for using other languages with Spring Boot.</p>
<blockquote class="twitter-tweet" lang="en"> 
 <p>Interesting aspect about <a href="https://twitter.com/search?q=%23SpringBoot&amp;src=hash">#SpringBoot</a>: it's not about Java VS. Groovy VS. Scala. It's about a mature platform + your JVM language of choice…</p> — Oliver Gierke (@olivergierke) 
 <a href="https://twitter.com/olivergierke/statuses/451061489613684737">April 1, 2014</a>
</blockquote>
<script async="" src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
<p>Have you tried upgrading your apps to use the latest versions of Spring and Java? If not, what's holding you back?</p><br><br><br><br><br><br></body></html>