<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /></head><body><h3>Interview and Book Review: DevOps Troubleshooting: Linux® Server Best Practices</h3><p>Kyle Rankin delivers practical advice and techniques for team oriented troubleshooting of Linux servers in a DevOps culture. <a href="http://www.informit.com/store/devops-troubleshooting-linux-server-best-practices-9780321832047">The book</a> targets systems engineers, developers, and QA staff that have gaps in knowledge about troubleshooting Linux servers. Experienced Linux system engineers will find the content refreshing and prescriptive in what should be shared in a cross functional team environment. An seasoned Linux engineer could take this book as a basis for leading a small series of hands on labs to help prepare developers and QA staff for the times when trouble strikes.</p><h2>Focusing on DevOps</h2><p>The first chapter provides an approach to troubleshooting for everyone in a DevOps culture. DevOps is put front and center, setting the stage for individuals with different expertise to interact efficiently. The first chapter guides people to do the following things:</p><ul> 
 <li>Approach troubleshooting with a divide and conquer mentality.</li> 
 <li>Prefer IRC or similar text based chat technology during troubleshooting.</li> 
 <li>Start troubleshooting with quick simple tests and avoid the slow complex tests if possible.</li> 
 <li>Use known solutions first.</li> 
 <li>Document your troubleshooting experience including the solution.</li> 
 <li>Start by considering what has changed recently.</li> 
 <li>Build up knowledge and understanding of how systems work and interact.</li> 
 <li>Use the internet for specific inquiries only.</li> 
 <li>Gather as much information related to the server(s) having issues before rebooting.</li> 
</ul><p>Throughout the book Kyle makes a case for common ground troubleshooting skills as being an important part of a DevOps culture. He states it as follows:</p><blockquote> 
 <p>&quot; In a DevOps organization, cooperation between all the teams is stressed, but when it comes to troubleshooting, often people still fall into their traditional roles even if there’s no blame game. Why? Well, even if everyone wants to work together, without the same troubleshooting skills and techniques, everyone may still be waiting on everyone else to troubleshoot their part. The goal of this book is to get every member of your DevOps team on the same page when it comes to Linux troubleshooting.&quot;</p> 
</blockquote><p>Chapters 2 through 10 divide the problem domains that can exist on a Linux server. The following is a list of the topics that Kyle approaches from a Linux server troubleshooting perspective: server slowness, booting, disks, networking, DNS, email, websites, databases, and hardware.</p><h2>Server Slowness</h2><p>Linux servers appear to &quot;slow&quot; down when troublesome processes are causing high loads of the following types: CPU, RAM, or I/O. During troubleshooting a team needs to identify and stop processes from degrading server performance. Most Linux servers will have the tools to determine the category of issue and the offending process(es). The command line interface (or CLI) tool &quot;uptime&quot; will help diagnosis CPU load issues by reporting the load averages for the last 1,5, and 15 minutes. The CLI tool &quot;top&quot; will help diagnosis CPU and RAM load issues by continually reporting system information to the console. The CLI tool &quot;iotop&quot; will help diagnosis I/O load issues. The before mentioned command line tools analyze the issue if the issue exists while the tools are being used, however a different tool is needed for analysis after the issue has occurred. The &quot;sysstat&quot; package provides a collection of tools for gathering data across time using a configurable interval and for reporting that information after the fact.</p><h2>Problems Booting</h2><p>Kyle covers the Linux boot process from bios to init process with a description of both the classic &quot;System V Init&quot; and &quot;Upstart Init&quot;. Then the book dives into individual components in the boot process that can cause boot problems and discusses how to resolve those problems. The book covers the following: BIOS, GRUB, disabling splash screen, mounting root file system, and mounting secondary file system. The order of the material leads the reader through one or more potential problems in a way that allows each problem to be analyzed and worked through sequentially.</p><h2>Disk Issues</h2><p>Readers gain knowledge about disk issues through a series of troubleshooting scenarios. Starting with how to manage a full disk, which Linux has prepared for by having reserved space set aside for the root user to login and move files around. The reserved space can be examined by using &quot;tune2fs&quot; utility. Then the command &quot;du&quot; assists in tracking down the largest directories. Next if the disk is not empty, but you can't create files, then you may not have any inodes free. Use the command &quot;df -i&quot; to see how many inodes are being used. Another disk issue is when a file system protects itself by mounting read only after experiencing an error. Use the &quot;mount&quot; utility command to remount it. Conversely &quot;unmount&quot; a corrupted disk and use the &quot;fsck&quot; utility to check and correct the disk. The path &quot;/proc/mdstat&quot; when concatenated to the console will reveal failed disks in a RAID. The command &quot;mdadm&quot; can remove a failed disk from a RAID configuration and likewise add a good disk to a RAID configuration.</p><h2>Networking Problems</h2><p>When a server becomes unaccessible from a client computer, each layer of the networking starting from the client should be analyzed in turn. Start by using the &quot;ethtool&quot; command on the client computer to determine if a physical connection to the network exists. Once the link is detected the next step is to determine if the interface is up and has an IP address. The command &quot;ifconfig&quot; will report status of an interface and its IP address. Next a check is made with the &quot;route&quot; command for a default gateway, additionally the &quot;ping&quot; command is used to test communication from the client to other computers. After securing basic communication a test of DNS is needed by using &quot;nslookup&quot; to make sure the server name resolves. Determine if the client communication route is breaking down along the way to the server using &quot;traceroute&quot;. Once the route to the machine is secure, use the &quot;telnet&quot; utility to check if the remote port is open. Next, use SSH to connect to the server, then use the &quot;netstat&quot; command locally on the server and also check the firewall with the &quot;iptables&quot; command. Use the &quot;iftop&quot; utility to detect slowly performing networks. Finally the &quot;tcpdump&quot; utility or &quot;winshark&quot; tool will allow for deep protocol inspection in and out of a server if necessary for protocol analysis.</p><h2>DNS Issues</h2><p>DNS issues can exist on the client side and server. The client can use the utility &quot;nslookup&quot; to determine if the issue is a mis-configured &quot;/etc/resolv.conf&quot; file. In another case the server may respond to the client indicating that the host searched for is not configured. The &quot;dig&quot; utility is a powerful utility that can help detect server problems including: recursive name server, DNS caching, TTL, zone syntax errors, and zone transfer issues.</p><h2>Email Issues</h2><p>Email is delivered according to well known protocols. The headers with in an email expose important information about the route the email took in its delivery. In the event that email fails to be received, &quot;telnet&quot; can be used to send email by connecting to port 25 and typing in character data according to the SMTP protocol. Codes returned by the mail server can be used to diagnosis issues. Additionally &quot;nmap&quot; will reveal if a mail server is listening on a port. Scanning through the logs and inspecting the configuration of the mail server are further options for diagnosing email issues.</p><h2>Website Down</h2><p>Nginx web server and the Apache web server are both applications that provide similar website services. A large part of a website's responsibility is to receive requests and send responses. When a website becomes unavailable it is quickly noticed. The first thing to do is to check if the service providing the website is running, this can be checked with &quot;service&quot; command and it should be made sure that it is configured to start when the server boots by using the &quot;chkconfig&quot; command (or similar tool depending on Init system). The command line tools &quot;wget&quot; and &quot;curl&quot; use the http protocol to communicate with websites to quickly test their availability. For example, following the restart of a web server service you can use the utilities to make sure a specific URL returns a success message (status code 200). Websites serve requests using the HTTP protocol, the protocol has a set of well known status codes. The book describes the status code ranges and their associated meanings. Web servers also generate logs that can be inspected for errors. The most common errors you will find in the logs include configuration errors and permission issues. Additionally the web servers can directly report their status through a webpage. The statistics that a web server will report directly can be used to determine if there is excessive load causing sluggishness or errors.</p><h2>Database Slow</h2><p>MySQL and PostgresSQL are two industry strength database technologies. Both database technologies provide services that can be checked like the before mentioned web servers using the &quot;service&quot; and &quot;chkconfig&quot; commands. The general patterns for inspection of a database server are similar to web servers. The inspection of logs can reveal previous issues, and likewise the databases themselves can report on their current status. The logging can be configured to do specialized logging like tracking slow queries. Additionally, the tooling used for analyzing server slowness and disk issues apply to database troubleshooting.</p><h2>Hardware Failure</h2><p>Troubleshooting may lead to the detection of failed hardware. Hard drives fail the most often, however the other following hardware components have a potential to fail (or cause failure): Ram, Network card, temperature, and power supply. Each device can exhibit unique symptoms of failure, and some symptoms have multiple root causes.</p><h2>About the Book Author</h2><p><img src="http://www.infoq.com/resource/articles/Book-Review-DevOps-Troubleshooting-Linux-Server/en/resources/rankin_kyle_c.jpg;jsessionid=576E0BCEBB889DA87C901DD52F1E6A96" vspace="3" hspace="3" align="left" alt="" _href="img://rankin_kyle_c.jpg" _p="true" /><b>Kyle Rankin</b> is the Systems Engineering Lead for Artemis Internet, Inc. In addition to &quot;DevOps Troubleshooting&quot;, he is the author of &quot;The Official Ubuntu Server Book&quot;, &quot;Knoppix Hacks&quot;, &quot;Knoppix Pocket Reference&quot;, &quot;Linux Multimedia Hacks&quot;, and &quot;Ubuntu Hacks&quot;, and a contributor to a number of other books. Rankin is an award-winning columnist for Linux Journal, and has written for PC Magazine, TechTarget websites and other publications. He speaks frequently on Open Source software including at SCALE, OSCON, Linux World Expo, Penguicon, and a number of Linux Users Groups.</p><p>&nbsp;</p><p>&nbsp;</p><div class="clearer-space"></div><br><br><br><br><br><br></body></html>