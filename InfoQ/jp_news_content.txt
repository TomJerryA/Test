オブジェクト指向プログラミングには<a href="http://en.wikipedia.org/wiki/SOLID">SOLID</a>原則のような十分に確立された設計原則が数多くあるが、関数型プログラミングに移った場合、これまでに身に付けた設計スキルを活かす方法を知らない開発者が多い。<a href="http://insightfullogic.com/about/">Richard Warburton</a>は最近のプレゼンテーションでそのように<a href="https://skillsmatter.com/skillscasts/5070-twins-fp-and-oop">述べた</a>。<br /> ・ 同じ問題について<a href="http://blog.ploeh.dk/about.html">Mark Seemann</a>は最近のブログ記事に<a href="http://blog.ploeh.dk/2014/03/10/solid-the-next-step-is-functional/">書いた</a>。SOLID原則を突き詰めれば、関数型プログラミングがかなり魅力的に見えてくる境地に達するとのことだ。