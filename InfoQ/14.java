<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /></head><body><h3>Camunda Forks Alfresco Activiti</h3><p><a href="http://www.camunda.com">Camunda</a>, a Berlin-based software and consulting company specializing in BPM, has <a href="http://www.bpm-guide.de/2013/03/18/camunda-forks-activiti-and-launches-camunda-bpm/">announced</a> that they are forking Alfresco <a href="http://www.bpm-guide.de/2013/03/18/camunda-forks-activiti-and-launches-camunda-bpm/">Activiti</a> to launch a new product called <a href="http://www.camunda.org/">camunda BPM</a>. The new product replaces camunda fox, the firm's previous Activiti-based BPM offering.</p> 
<p>camunda BPM comprises four components:</p> 
<ol> 
 <li>A BPMN 2.0 process engine implemented in Java</li> 
 <li>Cockpit, a monitoring and and administration tool.</li> 
 <li>Modeler, an Eclipse plugin for BPMN process modeling.</li> 
 <li>Cycle which can be used to synchronize BPMN diagrams from the business analysts' BPMN tool with the technically executable BPMN 2.0 XML files your developers edit with Modeler.</li> 
</ol> 
<p>The majority of camunda BPM is <a href="http://www.apache.org/licenses/LICENSE-2.0">Apache licensed</a>, with the Eclipse Modeler tool using the <a href="http://www.eclipse.org/legal/epl-v10.html">Eclipse Public License</a>. WebSphere and WebLogic integration, and some additions to the Cockpit monitoring product for high-load scenarios, are offered separately and are not open-sourced.</p> 
<p>One of the main differences between the two offerings is that camunda BPM supports a larger range of application servers. As well as Tomcat, camunda BPM runs on JBoss AS 7 and EAP 6, GlassFish &nbsp;3.1, WebSphere 8 and WebLogic 12c. &quot;We have the concept of a shared process engine and embedded process engine,&quot; Bernd R&uuml;cker, founder and managing director of camunda, told InfoQ. &quot;By leveraging that we can run in any application server. And it got much, much easier for us with this move to this kind of thing.&quot;</p> 
<p>Writing on his <a href="http://bpmn20inaction.blogspot.co.uk/2013/03/activiti-forked.html">blog</a>, Activiti project lead Tijs Rademakers said, &quot;The additional application server components would have fitted with the Activiti project also very well,&quot; but during our conversation R&uuml;cker explained that his motivation for making the fork was as much to do with the different emphasis of the two companies as on technical issues.</p> 
<blockquote> 
 <p>Alfresco is driving Activiti as an embeddable engine for their Enterprise Content Management (ECM) system, and their goal from the beginning was for it to be a jBPM replacement in that system. For us it is what we call BPM + Java.</p> 
 <p>So for example we have Zalando as a client. They have really huge numbers of orders (and processes overall) every day. So that results in completely different requirements than having some underwriting in an ECM system. You can see this in a lot of feature differences - for example for Alfresco it is more important that you can easily configure a simple workflow, whilst for us full BPMN 2.0 support is the goal. Those differences caused some friction on the project, so that is a significant reason for the split.</p> 
 <p>The other reason is our emphasis on business/IT alignment. We want business analysts coming to the community, and we did not see that happening with the Activiti community.</p> 
</blockquote> 
<p>When we spoke to him, Tijs Rademakers said to InfoQ, &quot;It's everybody's right to fork a project.&quot; However, he went on,</p> 
<blockquote> 
 <p>... it should bring additional value to the open source community and there should be good reasons to do it.</p> 
 <p>And that's why the fork doesn't make a lot of sense to me. To my opinion it doesn't bring additional value to the open source BPM community. On the contrary, both projects use the same Activiti codebase and every new functionality has to be built twice. And in addition, the components that camunda open-sourced would have fitted equally well in the Activiti project.</p> 
 <p>There was no upfront discussion to talk about ways to work together in one project and we didn't have arguments with each other. So the choice to do a fork was a very unpleasant surprise for us.</p> 
</blockquote> 
<p>With Tom Baeyens, the original creator of Activiti, <a href="http://www.infoq.com/news/2013/03/baeyens-activiti;jsessionid=C1561A897525A26F403CF3A22ECBB3A3">also having left </a>the project to work on bringing BPM to the cloud, some concern about its future is inevitable, but Rademakers has stated that he isn't concerned.</p> 
<blockquote> 
 <p>As you know Tom, together with Joram [Barrez], started the Activiti project. I'm very interested to see the direction of this new product, as I think it is challenging to do BPM fully on the cloud. And I wish Tom all the best. Tom leaving the Activiti project was actually not a big change, since his involvement had already been declining for a year or so. We have a fantastic community and development team working on Activiti right now.</p> 
 <p>Looking at the future, I think it's looking very bright for Activiti. As we showed with the 5.11 and 5.12 releases, we put a lot of effort in bringing new functionality (a new web modeler, an easy-to-use process editor, JavaScript-based process diagrams, reporting etc) on top of a rock solid BPMN engine. And based on the size of our community, the forum activity and the community contributions this is also paying off. So for the June release (5.13) we'll keep on improving Activiti with a revised, feature complete REST API, a JavaScript SDK and easier administration and setup. With our community, our partners and the core Activiti development team supported by Alfresco, we're in a good place to keep rocking the BPM space.</p> 
</blockquote> 
<p>It is certainly risky to fork a popular project, but R&uuml;cker says he isn't naive about the challenges and is confident that there is room for camunda BPM in the market.&nbsp;</p> 
<p id="lastElm"></p><br><br><br><br><br><br></body></html>