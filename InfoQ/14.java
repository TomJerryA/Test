<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /></head><body><h3>OData Scaffolding is Visual Studio 2013</h3><p>One of the new features in VS 2013 is OData Scaffolding. Like MVC Scaffolding, this feature is designed as both a training aid and to speed development. However, it requires a bit more setup than the MVC version. To help you out, Kirthi of Microsoft has created a <a href="http://blogs.msdn.com/b/webdev/archive/2013/11/08/odata-scaffolding.aspx">walk-through on OData Scaffolding</a>.</p>
<p>The most important thing to remember after creating a Web API based OData endpoint is to update the <a href="http://www.asp.net/web-api/overview/extensibility/configuring-aspnet-web-api">WebApiConfig</a>. By convention, the WebApiConfig is a static class with a single method called Register(HttpConfiguration config). Within this method an <a href="http://msdn.microsoft.com/query/dev12.query?appId=Dev12IDEF1&amp;l=EN-US&amp;k=k(System.Web.Http.OData.Builder.ODataConventionModelBuilder);k(TargetFrameworkMoniker-.NETFramework,Version%3Dv4.5);k(DevLang-csharp)&amp;rd=true">ODataConventionModelBuilder</a> is used to actually map the model to an <a href="http://msdn.microsoft.com/en-us/library/microsoft.data.edm.iedmmodel(v=vs.113).aspx">EDM Model</a>. This model is then registered as a route.</p>
<p>If the website was originally created without Web API support you will also need to add this line to the Application_Start event:</p>
<pre><p>GlobalConfiguration.Configure(WebApiConfig.Register);</p></pre>
<p>This method is meant to be used to register routes for the OData controllers and is invoked as a callback to GlobalConfiguration.Configure.</p><br><br><br><br><br><br></body></html>