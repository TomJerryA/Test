<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /></head><body><h3>Refatoração de sistemas legados: um estudo de caso</h3><p>O c&oacute;digo legado sempre cheira mal. E todo desenvolvedor que se preza, ao se deparar com um c&oacute;digo assim, tem o desejo de refator&aacute;-lo. O ideal &eacute; refatorar o c&oacute;digo legado com apoio de uma ferramenta de testes unit&aacute;rios para evitar regress&atilde;o do c&oacute;digo. Contudo, escrever testes unit&aacute;rios para c&oacute;digo legado n&atilde;o &eacute; nada f&aacute;cil; o c&oacute;digo legado geralmente &eacute; muito bagun&ccedil;ado.</p>
<p>Para escrever testes unit&aacute;rios efetivos para o c&oacute;digo legado, provavelmente ser&aacute; necess&aacute;rio refator&aacute;-lo antes; para tal s&atilde;o necess&aacute;rios testes unit&aacute;rios para se certificar que nada seja quebrado. Ou seja, &eacute; a situa&ccedil;&atilde;o do ovo e da galinha - o que vem antes? Este artigo descreve uma metodologia para refatorar o c&oacute;digo legado de maneira segura, atrav&eacute;s da apresenta&ccedil;&atilde;o da experi&ecirc;ncia do autor em um caso real.</p>
<h2>Definindo o problema</h2>
<p>Neste artigo, fa&ccedil;o uso de um caso real para demonstrar as melhores pr&aacute;ticas de teste e refatora&ccedil;&atilde;o de sistemas legados. O sistema era em Java, mas as pr&aacute;ticas podem ser aplic&aacute;veis em qualquer outra linguagem. Modifiquei o cen&aacute;rio para n&atilde;o expor ningu&eacute;m, e simplifiquei os casos para facilitar o entendimento.</p>
<p>Este artigo n&atilde;o tem a pretens&atilde;o de abordar os fundamentos de testes unit&aacute;rios e refatora&ccedil;&atilde;o. Para tal, recomendo a leitura de livros como &quot;<a href="http://www.amazon.com/Refactoring-Improving-Design-Existing-Code/dp/0201485672">Refactoring: Improving the Design of Existing Code</a>&quot; de <a href="http://martinfowler.com/">Martin Fowler</a> e &quot;<a href="http://www.amazon.com/Refactoring-Patterns-Joshua-Kerievsky/dp/0321213351">Refactoring to Patterns</a>&quot; de <a href="https://twitter.com/JoshuaKerievsky">Joshua Kerievsky</a>. Em vez disso, este artigo mostra um pouco das dificuldades frequentemente encontradas na vida real e fornece, assim espero, pr&aacute;ticas &uacute;teis para superar tais dificuldades.</p>
<p>O exemplo usado aqui se baseia num sistema fict&iacute;cio de gerenciamento de recursos em que um recurso se refere a uma pessoa que pode ser designada para uma ou mais tarefas. Digamos que um recurso possa ser designado para um t&iacute;quete - um t&iacute;quete de RH ou um t&iacute;quete de TI. Um recurso tamb&eacute;m pode ser designado para uma requisi&ccedil;&atilde;o - de RH ou de TI. O gerente do recurso tamb&eacute;m pode registrar uma estimativa de tempo que o recurso deve gastar na tarefa. Por fim, o recurso registra quanto tempo foi gasto de fato num t&iacute;quete ou numa requisi&ccedil;&atilde;o. Veja a figura abaixo:</p>
<p><img src="http://www.infoq.com/resource/articles/refactoring-legacy-applications/pt/resources/image00.png" alt="" _href="img://image00.png" _p="true" /></p>
<div id="lowerFullwidthVCR"></div>
<p>A utiliza&ccedil;&atilde;o dos recursos pode ser demonstrada num gr&aacute;fico de barras, que apresenta tanto o tempo estimado como o tempo real gasto:</p>
<p><img src="http://www.infoq.com/resource/articles/refactoring-legacy-applications/pt/resources/image02.png" alt="" _href="img://image02.png" _p="true" /></p>
<p>Nada complicado, certo? Bem, no sistema real, os recursos podiam ser designados para v&aacute;rios tipos de tarefas, o que ainda n&atilde;o faria disso um modelo complexo. Entretanto, quando li o c&oacute;digo pela primeira vez, parecia que tinha descoberto um f&oacute;ssil, pois eu conseguia enxergar como o c&oacute;digo tinha evolu&iacute;do (ou melhor, involu&iacute;do). Inicialmente, o sistema era capaz de lidar somente com as requisi&ccedil;&otilde;es. Posteriormente, foi adicionada a funcionalidade de lidar com t&iacute;quetes e outros tipos de tarefas.</p>
<p>Come&ccedil;ou assim. Um engenheiro veio e escreveu o c&oacute;digo para lidar com as requisi&ccedil;&otilde;es extraindo os dados do reposit&oacute;rio e fazendo a montagem para apresent&aacute;-los no gr&aacute;fico de barras, sem ao menos se incomodar em organizar a informa&ccedil;&otilde;es em objetos apropriados.</p>
<pre><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#222222;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">class ResourceBreakdownService {</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#222222;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">public Map search (Session context) throws SearchException {</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;text-indent: 36pt;"><span style="font-size:12px;font-family:'Courier New';color:#222222;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">// ... omitidas por volta de vinte linhas de c&oacute;digo para tirar o crit&eacute;rio de pesquisa do contexto e verific&aacute;-los, tal como abaixo:</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;text-indent: 36pt;"><span style="font-size:12px;font-family:'Courier New';color:#222222;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">if(resourceIds==null || resourceIds.size ()==0) {</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;margin-left: 36pt;text-indent: 36pt;"><span style="font-size:12px;font-family:'Courier New';color:#222222;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">throw new SearchException(“Lista de Recursos n&atilde;o foi fornecida”);</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;margin-left: 36pt;"><span style="font-size:12px;font-family:'Courier New';color:#222222;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">}</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;margin-left: 36pt;"><span style="font-size:12px;font-family:'Courier New';color:#222222;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">if(resourceId!=null || resourceIds.size()&gt;0){</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;margin-left: 36pt;text-indent: 36pt;"><span style="font-size:12px;font-family:'Courier New';color:#222222;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">resourceObjs=resourceDAO.getResourceByIds(resourceIds);</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;margin-left: 36pt;"><span style="font-size:12px;font-family:'Courier New';color:#222222;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">}</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;margin-left: 36pt;"><span style="font-size:12px;font-family:'Courier New';color:#222222;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">// realiza a carga de trabalho para todas as requisi&ccedil;&otilde;es</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;margin-left: 36pt;"><span style="font-size:12px;font-family:'Courier New';color:#222222;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">Map requestBreakDown = getResourceRequestsLoadBreakdown(resourceObjs,startDate,finishDate);</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;margin-left: 36pt;"><span style="font-size:12px;font-family:'Courier New';color:#222222;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">return requestBreakDown;</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#222222;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">}</span></p><p>&nbsp;</p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#222222;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">}</span></p></pre>
<p>Sem d&uacute;vida esse &eacute; um c&oacute;digo que cheira mal. Definitivamente <strong>search </strong>n&atilde;o &eacute; um nome representativo para o m&eacute;todo; para testar uma cole&ccedil;&atilde;o<em> </em>era melhor ter usado o m&eacute;todo <strong>CollectionUtil.isEmpty()</strong> da biblioteca Apache Commons. E por que retornar um Map?</p>
<p>O mal vai al&eacute;m. Veio um segundo engenheiro, que seguiu o exemplo do anterior e lidou com os t&iacute;quetes do mesmo jeito. E o c&oacute;digo ficou assim:</p>
<pre><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">// realiza a carga de trabalho para todos os t&iacute;quetes<br class="kix-line-break" />Map ticketBreakdown = getResourceRequestsLoadBreakdown(resourceObjs, startDate, finishDate, ticketSeverity);</span></p><p><b style="font-weight:normal;" id="docs-internal-guid-760b4d76-1c95-3e64-c6b5-af7e65402b98"><br /></b></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">Map result = new HashMap();<br class="kix-line-break" /></span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">for (Iterator i = resourceObjs.iterator(); i.hasNext();) {<br class="kix-line-break" /> &nbsp;&nbsp;&nbsp;Resource resource = (Resource) i.next(); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="Apple-tab-span" style="white-space:pre;"> </span></span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;Map requestBreakdown2 = (Map) requestBreakdown.get(resource);</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;List ticketBreakdown2 = (List) ticketBreakdown.get(resource);</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;Map resourceWorkloadBreakdown = combineRequestAndTicket(requestBreakdown2, ticketBreakdown2);</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;result.put(resource, resourceWorkloadBreakdown);</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">}</span></p><p>&nbsp;</p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">return result;</span></p>
 <div>
  <span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"><br /></span>
 </div></pre>
<p>Deixando de lado quest&otilde;es sobre a nomenclatura, o equil&iacute;brio da estrutura e demais aspectos est&eacute;ticos, o que mais cheira mal nesse c&oacute;digo &eacute; o retorno do m&eacute;todo ser um objeto Map. Um Map &eacute; um buraco negro que aceita de tudo e n&atilde;o fornece muitas pistas sobre o que tem dentro de si. Somente escrevendo um c&oacute;digo de depura&ccedil;&atilde;o para imprimir recursivamente o conte&uacute;do do Map pude descobrir como era sua estrutura de dados.</p>
<p>No exemplo a seguir, {} representa um Map; =&gt; representa o valor de uma chave de mapeamento; e [] representa uma cole&ccedil;&atilde;o:</p>
<pre><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">{resource with id 30000 =&gt; [<br class="kix-line-break" /><span class="Apple-tab-span" style="white-space:pre;"> </span>SummaryOfActualWorkloadForRequestType,<br class="kix-line-break" /><span class="Apple-tab-span" style="white-space:pre;"> </span>SummaryOfEstimatedWorkloadForRequestType,<br class="kix-line-break" /><span class="Apple-tab-span" style="white-space:pre;"> </span>{30240 =&gt; [<br class="kix-line-break" /> &nbsp;&nbsp;&nbsp;<span class="Apple-tab-span" style="white-space:pre;"> </span> &nbsp;&nbsp;&nbsp;&nbsp;ActualWorkloadForReqeustWithId_30240,<br class="kix-line-break" /> &nbsp;&nbsp;&nbsp;<span class="Apple-tab-span" style="white-space:pre;"> </span> &nbsp;&nbsp;&nbsp;&nbsp;EstimatedWorkloadForRequestWithId_30240 ],</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;<span class="Apple-tab-span" style="white-space:pre;"> </span> &nbsp;&nbsp;&nbsp;&nbsp;30241 =&gt; [</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="Apple-tab-span" style="white-space:pre;"> </span> &nbsp;&nbsp;&nbsp;&nbsp;ActualWorkloadForReqeustWithId_30241,</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="Apple-tab-span" style="white-space:pre;"> </span> &nbsp;&nbsp;&nbsp;&nbsp;EstimatedWorkloadForRequestWithId_30241 ]</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> <span class="Apple-tab-span" style="white-space:pre;"> </span>}</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> <span class="Apple-tab-span" style="white-space:pre;"> </span>SummaryOfActualWorkloadForTicketType,</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> <span class="Apple-tab-span" style="white-space:pre;"> </span>SummaryOfEstimatedWorkloadForTicketType,</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> <span class="Apple-tab-span" style="white-space:pre;"> </span>{20000 =&gt; [</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;<span class="Apple-tab-span" style="white-space:pre;"> </span> &nbsp;&nbsp;&nbsp;&nbsp;ActualWorkloadForTicketWithId_2000,</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;<span class="Apple-tab-span" style="white-space:pre;"> </span> &nbsp;&nbsp;&nbsp;&nbsp;EstimatedWorkloadForTicketWithId_2000 ],</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> <span class="Apple-tab-span" style="white-space:pre;"> </span>}<span class="Apple-tab-span" style="white-space:pre;"> </span><span class="Apple-tab-span" style="white-space:pre;"> </span> &nbsp;&nbsp;&nbsp;&nbsp;<span class="Apple-tab-span" style="white-space:pre;"> </span></span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> <span class="Apple-tab-span" style="white-space:pre;"> </span>]</span></p><p>&nbsp;</p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">}</span></p></pre>
<p>Com uma estrutura de dados p&eacute;ssima como essa, a l&oacute;gica de empacotar e desempacotar os dados estava quase ileg&iacute;vel, al&eacute;m de ser extremamente longa e tediosa.</p>
<h2>Teste de integra&ccedil;&atilde;o</h2>
<p>At&eacute; aqui espero ter convencido a todos que esse c&oacute;digo era realmente complexo. Se eu tivesse come&ccedil;ado tentando desemaranhar essa bagun&ccedil;a e entender cada pequeno peda&ccedil;o do c&oacute;digo antes de refator&aacute;-lo... poderia ter ficado louca. Para preservar minha sanidade, decidi que para entender a l&oacute;gica do c&oacute;digo seria melhor usar uma abordagem de cima para baixo. Ou seja, ao inv&eacute;s de ler o c&oacute;digo e deduzir a l&oacute;gica, decidi que era melhor rodar o sistema e depur&aacute;-lo, e assim entender o quadro geral.</p>
<p>Uso essa mesma abordagem ao escrever testes. O senso comum manda escrever pequenos testes para verificar cada parte do c&oacute;digo. Desse modo, se tudo estiver bem testado, quando todas as partes forem colocadas juntas, haver&aacute; grandes chances de que o c&oacute;digo inteiro funcione como esperado.</p>
<p>Mas essa abordagem n&atilde;o se aplica aqui. A classe <strong>ResourceBreakdownService </strong>era uma Classe Deus (<a href="http://c2.com/cgi/wiki?GodClass">God Class</a>). Se eu come&ccedil;asse quebrando a classe em peda&ccedil;os, com somente o entendimento do quadro geral, teria cometido muitos erros. Isso porque poderia haver diversos segredos escondidos em cada canto do sistema legado.</p>
<p>Ent&atilde;o escrevi este teste simples, que refletia o meu entendimento geral:</p>
<pre><p>&nbsp;</p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">public void testResourceBreakdown() {<br class="kix-line-break" /> &nbsp;&nbsp;&nbsp;Resource resource = createResource();<br class="kix-line-break" /> &nbsp;&nbsp;&nbsp;List requests = createRequests();<br class="kix-line-break" /> &nbsp;&nbsp;&nbsp;assignRequestToResource(resource, requests);<br class="kix-line-break" /> &nbsp;&nbsp;&nbsp;List tickets = createTickets();<br class="kix-line-break" /> &nbsp;&nbsp;&nbsp;assignTicketToResource(resource, tickets);<br class="kix-line-break" /> &nbsp;&nbsp;&nbsp;Map result = new ResourceBreakdownService().search(resource);<br class="kix-line-break" /> &nbsp;&nbsp;&nbsp;verifyResult(result,resource,requests,tickets);<br class="kix-line-break" />}</span></p></pre>
<p>Considere o m&eacute;todo <strong>verifyResult()</strong>; primeiramente descobri a estrutura de result (o Map retornado pela classe <strong>ResourceBreakdownService</strong>), imprimindo seu conte&uacute;do recursivamente. Assim <strong>verifyResult()</strong> p&ocirc;de usar esse conhecimento para verificar se o objeto continha os dados corretos:</p>
<pre><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">private void verifyResult(Map result, Resource rsc, List&lt;Request&gt; requests, List&lt;Ticket&gt; tickets) {</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assertTrue(result.containsKey(rsc.getId()));</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// neste caso de teste simples, a carga de trabalho real est&aacute; vazia</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UtilizationBean emptyActualLoad=createDummyWorkload(); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;List resourceWorkLoad=result.get(rsc.getId()); &nbsp;&nbsp;<span class="Apple-tab-span" style="white-space:pre;"> </span></span></p><p><b style="font-weight:normal;" id="docs-internal-guid-760b4d76-1c97-0551-26e4-0110e39a88fb"><br /></b></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UtilizationBean scheduleWorkload=calculateWorkload(rsc,requests);</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assertEquals(emptyActualLoad,resourceWorkLoad.get(0)); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assertEquals(scheduleWorkload,resourceWorkLoad.get(1)); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p><p><b style="font-weight:normal;"><br /></b></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Map requestDetailWorkload = (Map)resourceWorkLoad.get(3);</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (Request request : requests) {</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assertTrue(requestDetailWorkload.containsKey(request.getId());</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UtilizationBean scheduleWorkload0=calculateWorkload(rsc, request);</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assertEquals(emptyActualLoad, requestDetailWorkload.get(request.getId()).get(0));</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assertEquals(scheduleWorkload0, requestDetailWorkload.get(request.getId()).get(1)); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"><span class="Apple-tab-span" style="white-space:pre;"> </span>}<br class="kix-line-break" /></span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"><span class="Apple-tab-span" style="white-space:pre;"> </span>// ... c&oacute;digo para checar t&iacute;quetes omitido</span></p><p>&nbsp;</p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">}</span></p>
 <div>
  <span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"><br /></span>
 </div></pre>
<h2>Contornado os obst&aacute;culos</h2>
<p>O caso de teste acima parece simples, por&eacute;m encobre diversas complexidades. Para come&ccedil;ar, o m&eacute;todo <strong>ResourceBreakdownService.search()</strong> &eacute; muito acoplado ao ambiente de execu&ccedil;&atilde;o, pois tem de acessar o banco de dados e provavelmente outros servi&ccedil;os desconhecidos. Como acontece com v&aacute;rios legados, esse sistema n&atilde;o tinha nenhum teste unit&aacute;rio de infraestrutura constru&iacute;do. Para acessar os servi&ccedil;os de tempo de execu&ccedil;&atilde;o, a &uacute;nica op&ccedil;&atilde;o era iniciar o sistema inteiro, o que era muito custoso e inconveniente.</p>
<p>A classe que inicializava a parte servidor do sistema era <strong>ServerMain</strong>. Essa classe era um f&oacute;ssil tamb&eacute;m; olhando para ela era poss&iacute;vel dizer como evoluiu. O sistema foi escrito h&aacute; mais de dez anos. Naquela &eacute;poca n&atilde;o havia <a href="http://www.springsource.org/">Spring</a>, nem <a href="http://www.hibernate.org/">Hibernate</a>, e <a href="http://www.jboss.org/">JBoss</a> e <a href="http://tomcat.apache.org/">Tomcat</a> ainda estavam engatinhando. Os bravos pioneiros daquela &eacute;poca tiveram que fazer muito servi&ccedil;o de infraestrutura &quot;na m&atilde;o&quot;, tanto que criaram um cluster &quot;caseiro&quot;, e um servi&ccedil;o de cache e um pool de conex&otilde;es do zero, al&eacute;m de diversas outras coisas.</p>
<p>Posteriormente, plugaram de alguma forma o sistema no JBoss e no Tomcat. Por&eacute;m, infelizmente deixaram para tr&aacute;s tudo aquilo que haviam criado manualmente - tanto que o c&oacute;digo foi deixado com dois conjuntos de mecanismos de gerenciamento de transa&ccedil;&otilde;es e tr&ecirc;s tipos de pools de conex&otilde;es.</p>
<p>Decidi, ent&atilde;o, fazer uma c&oacute;pia da classe <strong>ServerMain </strong>para <strong>TestServerMain </strong>e fazer a chamada do m&eacute;todo <strong>TestServerMain.main()</strong>. Surgiu o seguinte erro:</p>
<pre><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">org.springframework.beans.factory.BeanInitializationException: Could not load properties; nested exception </span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">is</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">java.io.FileNotFoundException: class path resource [database.properties] cannot be opened because it does not exist</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">at</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">org.springframework.beans.factory.config.PropertyResourceConfigurer.postProcessBeanFactory (PropertyResourceConfigurer.java:78)</span></p></pre>
<p>&Eacute; um erro f&aacute;cil de corrigir! Era s&oacute; pegar um arquivo <strong>database.properties</strong>, jog&aacute;-lo no classpath de teste e rodar o teste novamente. Desta vez a exce&ccedil;&atilde;o lan&ccedil;ada foi a seguinte:</p>
<pre><p>&nbsp;</p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">java.io.FileNotFoundException: .\server.conf (The system cannot find the file specified)<br class="kix-line-break" /> &nbsp;&nbsp;&nbsp;at java.io.FileInputStream.open(Native Method)<br class="kix-line-break" /> &nbsp;&nbsp;&nbsp;at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:106)<br class="kix-line-break" /> &nbsp;&nbsp;&nbsp;at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:66)<br class="kix-line-break" /> &nbsp;&nbsp;&nbsp;at java.io.FileReader.&lt;init&gt;(FileReader.java:41)<br class="kix-line-break" /> &nbsp;&nbsp;&nbsp;at com.foo.bar.config.ServerConfigAgent.parseFile(ServerConfigAgent.java:1593)<br class="kix-line-break" /> &nbsp;&nbsp;&nbsp;at com.foo.bar.config.ServerConfigAgent.parseConfigFile(ServerConfigAgent.java:1720)<br class="kix-line-break" /> &nbsp;&nbsp;&nbsp;at com.foo.bar.config.ServerConfigAgent.parseConfigFile(ServerConfigAgent.java:1712)<br class="kix-line-break" /> &nbsp;&nbsp;&nbsp;at com.foo.bar.config.ServerConfigAgent.readServerConf(ServerConfigAgent.java:1581)<br class="kix-line-break" /> &nbsp;&nbsp;&nbsp;at com.foo.bar.ServerConfigFactory.initServerConfig(ServerConfigFactory.java:38)<br class="kix-line-break" /> &nbsp;&nbsp;&nbsp;at com.foo.bar.util.HibernateUtil.setupDatabaseProperties(HibernateUtil.java:207)<br class="kix-line-break" /> &nbsp;&nbsp;&nbsp;at com.foo.bar.util.HibernateUtil.doStart(HibernateUtil.java:135)<br class="kix-line-break" /> &nbsp;&nbsp;&nbsp;at com.foo.bar.util.HibernateUtil.&lt;clinit&gt;(HibernateUtil.java:125)</span></p></pre>
<p>Agora era necess&aacute;rio colocar o arquivo serv.conf em algum lugar. Mas essa abordagem era desconfort&aacute;vel. S&oacute; de escrever esse &uacute;nico caso de teste, de imediato um problema no c&oacute;digo ficou evidente. <strong>HibernateUtil</strong>, conforme indica o nome, deveria apenas tratar a informa&ccedil;&atilde;o de banco de dados a ser fornecida por database.properties. Por que essa classe deveria acessar server.conf, que &eacute; respons&aacute;vel por configurar os servidores?</p>
<p>Havia portanto um sinal de c&oacute;digos mal-cheirosos: se ao ler um c&oacute;digo a pergunta &quot;por qu&ecirc;&quot; est&aacute; sempre na cabe&ccedil;a, como se estivesse lendo um romance policial, ent&atilde;o provavelmente o c&oacute;digo est&aacute; ruim. Eu poderia ter investido mais tempo estudando os c&oacute;digos de <strong>ServerConfigFactory</strong>, <strong>HibernateUtil</strong> e <strong>ServerConfigAgent</strong>, e tentar descobrir como apontar <strong>HibernateUtil</strong> para o <strong>database.properties</strong>, mas a essa altura o que queria mesmo era ver o servidor rodando. Al&eacute;m disso, havia uma forma de contornar a situa&ccedil;&atilde;o: usando <a href="http://eclipse.org/aspectj/">AspectJ</a>.</p>
<pre><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">void around():<br class="kix-line-break" /> &nbsp;&nbsp;&nbsp;call(public static void com.foo.bar.ServerConfigFactory.initServerConfig()) {</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;System.out.println(&quot;bypassing com.foo.bar.ServerConfigFactory.initServerConfig&quot;);<br class="kix-line-break" />}</span></p></pre>
<p>Para quem n&atilde;o conhece o AspectJ, o c&oacute;digo acima realiza o seguinte: quando a execu&ccedil;&atilde;o estiver no ponto da chamada de <strong>ServerConfigFactory.initServerConfig()</strong>, uma mensagem ser&aacute; impressa no console e a execu&ccedil;&atilde;o ser&aacute; retornada, sem entrar no m&eacute;todo mencionado.</p>
<p>Isso pode parecer magia negra, mas &eacute; muito eficiente. Sistemas legados sempre s&atilde;o cheios de enigmas e problemas, e existem ocasi&otilde;es em que &eacute; preciso partir para um combate estrat&eacute;gico. Naquele momento, para conseguir deixar o cliente satisfeito, o mais importante era corrigir os defeitos no sistema e melhorar a performance. Consertar coisas em outras &aacute;reas n&atilde;o era prioridade. Mas deixei anotado na minha lista de coisas a fazer para voltar depois e arrumar a bagun&ccedil;a em <strong>ServerMain</strong>.</p>
<p>Em seguida, no ponto em que <strong>HibernateUtil</strong> realiza a leitura das informa&ccedil;&otilde;es requisitadas de server.conf, fiz uma altera&ccedil;&atilde;o para que as buscasse em <strong>database.properties</strong>:</p>
<pre><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">String around(): call(public String com.foo.bar.config.ServerConfig.getJDBCUrl()) {<br class="kix-line-break" /> &nbsp;&nbsp;&nbsp;// c&oacute;digo omitido, lendo de database.properties</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">}</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">String around():call(public String com.foo.bar.config.ServerConfig.getDBUser()) {</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;// c&oacute;digo omitido, lendo de database.properties</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;">&nbsp;</p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">}</span></p></pre>
<p>J&aacute; se pode adivinhar o resto agora: contornar os obst&aacute;culos quando isso for mais conveniente ou natural a se fazer. Por&eacute;m, se existem mockups j&aacute; prontos, por que n&atilde;o reutiliz&aacute;-los? Por exemplo, num dado ponto, <strong>TestServerMain.main()</strong> gerou este erro:</p>
<pre><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">- Factory name: java:comp/env/hibernate/SessionFactory</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">- JNDI InitialContext properties:{}</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">- Could not bind factory to JNDI<br class="kix-line-break" />javax.naming.NoInitialContextException: Need to specify class name in environment or system property, or as an applet parameter, or in an application resource file: java.naming.factory.initial </span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;at javax.naming.spi.NamingManager.getInitialContext (NamingManager.java:645)</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;at javax.naming.InitialContext.getDefaultInitCtx (InitialContext.java:288)</span></p></pre>
<p>Isso aconteceu porque o servi&ccedil;o de nomes do JBoss n&atilde;o havia sido iniciado. Eu poderia ter usado a mesma t&eacute;cnica de &quot;magia negra&quot; para contornar o problema, mas <strong>InitialContext</strong> &eacute; uma interface do Javax com muitos m&eacute;todos, e fazer o mesmo para cada m&eacute;todo seria muito trabalhoso. Pesquisando rapidamente, descobri que o Spring j&aacute; tem uma classe mock <strong>SimpleNamingContext</strong>, que usei dentro do teste:</p>
<pre><p>&nbsp;</p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">SimpleNamingContextBuilder builder = new SimpleNamingContextBuilder();<br class="kix-line-break" />builder.bind(“java:comp/env/hibernate/SessionFactory”,sessionFactory);<br class="kix-line-break" />builder.activate();</span></p></pre>
<p>Ap&oacute;s algumas rodadas, eu j&aacute; era capaz de fazer <strong>TestServerMain.main()</strong> executar com sucesso. Comparando com <strong>ServerMain</strong>, isso foi muito mais simples, pois simulou diversos servi&ccedil;os do JBoss sem dificultar o gerenciamento de clusters.</p>
<h2>Criando os blocos de constru&ccedil;&atilde;o</h2>
<p>A classe <strong>TestServerMain</strong> est&aacute; conectada a um banco de dados real, e sistemas legados podem esconder l&oacute;gicas supreendentes em stored procedures - ou pior ainda, em triggers. Seguindo a mesma ideia de considerar o quadro geral, percebi que n&atilde;o seria boa ideia, naquele momento, tentar entender os mist&eacute;rios de dentro do banco de dados e criar um mock desse banco. Ent&atilde;o decidi fazer meus casos de teste acessarem o banco de dados real.</p>
<p>O caso de teste precisaria rodar repetidas vezes para garantir que cada pequena mudan&ccedil;a feita no c&oacute;digo do produto passasse no teste. Em cada execu&ccedil;&atilde;o, os testes criariam recursos e requisi&ccedil;&otilde;es no banco de dados. Diferentemente da pr&aacute;tica comum em testes unit&aacute;rios, algumas vezes n&atilde;o &eacute; desej&aacute;vel limpar o &quot;campo de batalha&quot; a cada execu&ccedil;&atilde;o, eliminando dados criados pelos casos de teste.</p>
<p>At&eacute; aqui, o exerc&iacute;cio de refatora&ccedil;&atilde;o e testes tinha sido uma miss&atilde;o de investiga&ccedil;&atilde;o - realizar os testes para entender o sistema legado. Era poss&iacute;vel verificar a gera&ccedil;&atilde;o dos dados atrav&eacute;s de casos de testes no banco de dados, ou usar os dados no sistema em execu&ccedil;&atilde;o para confirmar se tudo est&aacute; funcionando como esperado. Ou seja, os casos de testes precisavam criar entidades &uacute;nicas no banco de dados para evitar interfer&ecirc;ncias com outros casos de testes. Al&eacute;m disso, era desej&aacute;vel que houvesse classes utilit&aacute;rias para criar essas entidades facilmente.</p>
<p>Segue um exemplo de um bloco simples para criar <strong>resource</strong>:</p>
<pre><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">public static ResourceBuilder newResource (String userName) {</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;ResourceBuilder rb = new ResourceBuilder();</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;rb.userName = userName + UnitTestThreadContext.getUniqueSuffix();</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;return rb; </span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">}</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">public ResourceBuilder assignRole(String roleName) {</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;this.roleName = roleName + UnitTestThreadContext.getUniqueSuffix();</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;return this;</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">}</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">public Resource create() {</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;ResourceDAO resourceDAO = new ResourceDAO(UnitTestThreadContext.getSession());</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;Resource rs;</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;if (StringUtils.isNotBlank(userName)) {</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rs = resourceDAO.createResource(this.userName);</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;} else {</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new RuntimeException(&quot;must have a user name to create a resource&quot;);</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;}</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;if (StringUtils.isNotBlank(roleName)) {</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Role role = RoleBuilder.newRole(roleName).create();</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rs.addRole(role);</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;}</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;return rs;</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">}</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">public static void delete(Resource rs, boolean cascadeToRole) {</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;Session session = UnitTestThreadContext.getSession();</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;ResourceDAO resourceDAO = new ResourceDAO(session);</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;resourceDAO.delete(rs);</span></p><p><b style="font-weight:normal;" id="docs-internal-guid-760b4d76-1c9a-2ac3-7735-d415a37e5b33"><br /></b></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;if (cascadeToRole) {</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RoleDAO roleDAO = new RoleDAO(session);</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;List roles = rs.getRoles();</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (Object role : roles) {</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;roleDAO.delete((Role)role);</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;}</span></p><p>&nbsp;</p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">}</span></p>
 <div>
  <span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"><br /></span>
 </div></pre>
<p><strong>ResourceBuilder</strong> &eacute; uma implementa&ccedil;&atilde;o combinada dos design patterns Builder e Factory:</p>
<pre><p>&nbsp;</p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">ResourceBuilder.newResource(“Tom”).assignRole(“Developer”).create();</span></p></pre>
<p>Essa classe tamb&eacute;m cont&eacute;m um m&eacute;todo de limpeza: <strong>delete()</strong>. Na fase anterior desse exerc&iacute;cio de refatora&ccedil;&atilde;o, n&atilde;o invoquei <strong>delete()</strong> com muita frequ&ecirc;ncia, porque eu iniciava o sistema v&aacute;rias vezes e obtinha os dados de teste para checar se o gr&aacute;fico de barras estava correto.</p>
<p>Uma classe muito &uacute;til aqui foi <strong>UnitTestThreadContext</strong>, que armazena um objeto espec&iacute;fico para threads do objeto Session do Hibernate. Ela fornece strings &uacute;nicas para anexar ao nomes das entidades a serem criadas, de forma a garantir a exclusividade das entidades.</p>
<pre><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">public class UnitTestThreadContext {</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;private static ThreadLocal&lt;Session&gt; threadSession=new ThreadLocal&lt;Session&gt;();</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;private static ThreadLocal&lt;String&gt; threadUniqueId=new ThreadLocal&lt;String&gt;();</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;private final static SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy/MM/dd HH_mm_ss_S&quot;);</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"><span class="Apple-tab-span" style="white-space:pre;"> </span></span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;public static Session getSession(){&gt;</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;Session session = threadSession.get();</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;if (session==null) {</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new RuntimeException(&quot;Hibernate Session not set!&quot;);</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;}</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;return session;</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">}</span></p><p><b style="font-weight:normal;" id="docs-internal-guid-760b4d76-1c9a-fc7c-6f59-e3f2f5ed9742"><br /></b></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">public static void setSession(Session session) {</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;threadSession.set(session);</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">}</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"><span class="Apple-tab-span" style="white-space:pre;"> </span></span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">public static String getUniqueSuffix() {</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;String uniqueId = threadUniqueId.get();</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;if (uniqueId==null){</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uniqueId = &quot;-&quot;+dateFormat.format(new Date());</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;threadUniqueId.set(uniqueId);</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;}</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;return uniqueId;<span class="Apple-tab-span" style="white-space:pre;"> </span><span class="Apple-tab-span" style="white-space:pre;"> </span></span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">}</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">...</span></p><p>&nbsp;</p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">}</span></p>
 <div>
  <span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"><br /></span>
 </div></pre>
<h2>Concluindo</h2>
<p>Nesse ponto eu j&aacute; conseguia iniciar uma infraestrutura de execu&ccedil;&atilde;o m&iacute;nima e rodar meu caso de teste simples:</p>
<pre><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">protected void setUp() throws Exception {</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;TestServerMain.run(); //configura uma infraestrutura de execu&ccedil;&atilde;o m&iacute;nima</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">}</span><b style="font-weight:normal;" id="docs-internal-guid-760b4d76-1c9b-5d7d-2b61-bc93cfb2f55b"><br /></b></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">public void testResourceBreakdown(){</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;Resource resource=createResource(); //usar ResourceBuilder para construir recursos &uacute;nicos</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;List requests=createRequests(); //usar RequestBuilder para construir requisi&ccedil;&otilde;es &uacute;nicas</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;assignRequestToResource(resource, requests);</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;List tickets=createTickets(); //usar TicketBuilder para construir t&iacute;quetes &uacute;nicos</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;assignTicketToResource(resource, tickets);</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;Map result=new ResourceBreakdownService().search(resource);</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;verifyResult(result); &nbsp;&nbsp;<span class="Apple-tab-span" style="white-space:pre;"> </span></span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">}</span><b style="font-weight:normal;"><br /></b></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">protected void tearDown() throws Exception {</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;// usar TicketBuilder.delete() para deletar os t&iacute;quetes</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;// usar RequestBuilder.delete() para deletar as requisi&ccedil;&otilde;es</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"> &nbsp;&nbsp;&nbsp;// usar ResourceBuilder.delete() para deletar os recursos</span></p><p>&nbsp;</p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12px;font-family:'Courier New';color:#222222;background-color:#fafafa;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;">}</span></p>
 <div>
  <span style="font-size:12px;font-family:'Courier New';color:#222222;background-color:#fafafa;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;"><br /></span>
 </div></pre>
<p>Continuei escrevendo mais casos de testes complexos e refatorei o c&oacute;digo do produto e o c&oacute;digo de teste ao longo do caminho.</p>
<p>De posse desses casos de testes, continuei dividindo a Classe Deus <strong>ResourceBreakdownService</strong> pouco a pouco. N&atilde;o seria conveniente abordar aqui os detalhes; existem diversos livros que podem ensinar como fazer refatora&ccedil;&atilde;o com seguran&ccedil;a. Aqui est&aacute; a estrutura resultante ap&oacute;s a refatora&ccedil;&atilde;o:</p>
<p><img src="http://www.infoq.com/resource/articles/refactoring-legacy-applications/pt/resources/image01.png" alt="" _href="img://image01.png" _p="true" /></p>
<p>Agora aquela terr&iacute;vel estrutura de dados <strong>Map_Of_Array_Of_Map_Of...</strong> est&aacute; organizada dentro de <strong>ResourceLoadBucket</strong>, que faz uso do design pattern <a href="http://en.wikipedia.org/wiki/Composite_pattern">Composite</a>. Essa classe cont&eacute;m o esfor&ccedil;o estimado e o esfor&ccedil;o atual em um determinado n&iacute;vel; os esfor&ccedil;os do pr&oacute;ximo n&iacute;vel podem ser agregados pelo m&eacute;todo aggregate(). O c&oacute;digo resultante &eacute; muito mais limpo e tem desempenho melhor - mesmo com a exposi&ccedil;&atilde;o de alguns defeitos escondidos na complexidade do c&oacute;digo original. E, claro, fui evoluindo os casos de testes ao longo do processo.</p>
<p>Atrav&eacute;s de todo esse exerc&iacute;cio, o princ&iacute;pio fundamental respeitado foi o de visualizar o quadro geral. Encarei o desafio e procurei me manter focada nisso, contornando os obst&aacute;culos que n&atilde;o eram importantes para a atividade a ser realizada. Tamb&eacute;m constru&iacute; uma infraestrutura de testes minimamente vi&aacute;vel, que minha equipe continuou usando para refatorar outras &aacute;reas. Algumas partes de &quot;magia negra&quot;, por&eacute;m, ainda permanecem na infraestrutura de testes, porque n&atilde;o h&aacute; muito sentido para o neg&oacute;cio arrum&aacute;-las.</p>
<p>Com tudo isso, consegui refatorar uma &aacute;rea funcional muito complexa e tamb&eacute;m ganhei conhecimento mais profundo sobre o sistema legado. Tratar uma aplica&ccedil;&atilde;o legada como se fosse fr&aacute;gil como uma porcelana chinesa n&atilde;o torna o trabalho mais seguro. Ao inv&eacute;s disso, avan&ccedil;ar sobre o sistema de maneira mais firme e refator&aacute;-lo &eacute; o que deve ser feito para prolongar a vida das aplica&ccedil;&otilde;es legadas.</p>
<hr />
<h2>Sobre a autora</h2>
<p><strong>Chen Ping</strong> mora em Shanghai na China e formou-se Mestre em Ci&ecirc;ncia da Computa&ccedil;&atilde;o em 2005. Desde ent&atilde;o, trabalhou na Lucent and Morgan Stanley, e hoje atua na HP como gerente de Desenvolvimento. No tempo livre, gosta de estudar medicina chinesa.</p><br><br><br><br><br><br></body></html>