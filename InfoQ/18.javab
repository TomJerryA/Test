<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /></head><body><h3>Solving the Gordian Knot of Chronic Overcommittment in Development Organizations</h3><blockquote>
 The difference between successful people and very successful people is that very successful people say “no” to almost everything . Warren Buffet
</blockquote>
<p>Why do we as humans and organizations have such a strong tendency to promise more than we can deliver? One simple explanation is that we want to please those around us. We want to say yes when someone asks for our help. Saying no could mean that people see us as being rude or less capable. While being of service to others is a positive thing, when taken to excess it can be devastating - leading to stress, poor productivity and congestion (both physical as well as work-wise).</p>
<p>Another less flattering and perhaps more dangerous reason for overcommitment is external pressure to promise what we know that we can’t deliver.&nbsp; The forces behind these external pressures can include the following:</p>
<ul> 
 <li>Implicit and/or explicit threats to our job security if we don’t accept work that is being pushed upon us.</li> 
 <li>A view that the role of the IT-organization is to support the business and cannot stand in the way of business development.</li> 
 <li>An erroneous understanding of how work works, based on efficiency being a virtue in itself, without understanding the damages of high levels of work in process.</li> 
 <li>A high pressure on sales organizations that overpromise on behalf of the delivery organization in order to close more deals. This behavior is often reinforced through dysfunctional incentive systems.</li> 
</ul>
<p>This behavior is often displayed in a fractal way throughout the organization; people overcommitting on a personal level, project managers committing their teams to fantasy project plans, sales selling features that the organization lacks the capacity to implement, and top management making promises that won’t be delivered. This cultural aspect becomes self-reinforcing; when everyone else promises to deliver whatever is being asked for it’s easier for individuals to become part of this ever-growing mass than to be the troublemaker saying no. After all, when the problem becomes impossible to ignore, it might have already landed on someone else’s table.</p>
<p>When the organization fails to analyze its mistakes, or make a too shallow analysis, it’s easy to come to the conclusion that the plan was flawless and the problem lies entirely with the delivery. And this is where most organizations focus their efforts to come to terms with the problem; how to deliver according to corrupt plans.</p>
<h2>Organizational Behaviors Driving Overcommitment</h2>
<p>The main behaviors for chronic overcommitment in organizations are:</p>
<ol> 
 <li>Delivery capacity is unknown or hard to measure so it is easy to accept more and more work. It is common at several levels in the organization. Investment and schedule decisions are taken without knowing what delivery capacity exists. Projects are started and shoehorned into the unknowingly overloaded organization.</li> 
 <li>Projects and work is not prioritized. “<i>We already have 234 projects ongoing and suddenly Marketing/Finance comes with a high priority project that is a <strong>must</strong>. We do not know how it stacks up against the 234 other projects since most of them are high priority projects and a majority are <strong>must</strong></i>”.</li> 
 <li>Lack of a single point of entry for projects. Projects are started on many different levels and places in the organization.</li> 
 <li>Political; there is no structured &amp; holistic approach to stop projects from starting or killing projects for the benefit of more important projects. This causes zombie projects running long past their expiration date.</li> 
</ol>
<p>All of these causes enforce each other to create a vicious cycle that companies have a hard time recovering from. To examine this vicious cycle more closely, let’s take a look at a hypothetical case study.</p>
<div id="lowerFullwidthVCR"></div>
<h2>CASE STUDY – Claes Claesson at MegaRetailer AB</h2>
<p>Claes Claesson is an IT manager at MegaRetailer AB, a company that sells thousands of different products both in its own retail shops as well as through third party retailers and through their own popular Internet shop where some of the product families are available.</p>
<p>Claes attended a management meeting where the Marketing Director presented a two-pronged approach to increase sales and revenue for MegaRetailer AB. The first required change is to provide real-time inventory data for their own retail shops so that sales people can direct customers to another location if their shop does not have the item the customer wants. The real-time inventory data must be made available both in the retail shops and the Internet shop (showing closest retail shop carrying the item).&nbsp; It needs to be implemented in time for the Christmas shopping season. The business case for this change is good, there is no denying that.&nbsp; A 12% increase in sales is projected for the Christmas period on top of the existing sales figures providing a substantial revenue increase and lowering the inventory costs.</p>
<p>The second required change is to provide the Internet sales channel on mobile and tablet formats and enhance it with state of the art visual product recognition. The customer can take a picture of an item (s)he wants and the app will identify the product and recommend MegaRetails own brands or similar products. &nbsp;The app will also identify the closest location to purchase the item or to buy it from the net channel.</p>
<p>The overall plan is to implement these changes over the coming 12-24 months in multiple projects. Sourcing and Logistics have already started to look at scanning systems to provide product-matching data when new products are brought into the MegaRetail line.</p>
<p>There is no debate that the end result of these changes will be good for MegaRetail, but Claes already has hundreds of projects in various states of progress and the question remains whether there are enough people to staff these additional projects? There was no understanding or acceptance in the meeting that the IT department teams are already busy. In addition, the Marketing Director somewhat heavy handedly reminded Claes that business drives the company forward and IT is to be a supporting function and not a roadblock.&nbsp; Here Claes’s boss, the CIO, stepped in and said, “That’s right, IT supports the business and Claes here is our go-to guy for solving difficult problems and delivering the most challenging projects. But in all fairness Claes and his people should be given some time to analyze how we can deliver these work packages in the best way.”</p>
<p>At this time the Supply Manager could not refrain from sniping, “Well, maybe Claes could take a look at another challenge, our Delivery Control System, since it is already over 8 months delayed.” Luckily the meeting ended before that discussion escalated any further.</p>
<p>The decision was made, Claes and his organization are to analyze the marketing requirements and come up with a development and implementation plan. His boss told him, “Claes I know that we are stretched thin but these two items are crucial and have the backing of the CEO and the board, look at hiring consultants if you need but no hiring of employees beyond the current plan. &nbsp;We do not want to add to our cost mass. I have all faith in you and your people.”</p>
<h2>Understanding the Dynamics at Play in the Case Study</h2>
<p>In this section we will work to understand the dynamics at play for Claes and his team.&nbsp; We will map out the situation described in the case study using Causal Loop Diagrams. If you are not familiar with Causal Loop Diagrams you can read through the following short How-To section.</p>
<p>(Click on the image to enlarge it)</p>
<p><a _href="resource://fig1.jpg" href="/resource/articles/chronic-overcommitment/en/resources/fig1.jpg"><img src="http://www.infoq.com/resource/articles/chronic-overcommitment/en/resources/1fig1small.jpg" alt="" _href="img://1fig1small.jpg" _p="true" /></a></p>
<p><strong>Figure 1 - How to read Causal Loop Diagrams</strong></p>
<p>Claes is on the path of starting new projects to deliver what the Marketing Director requested. One of the reasons why it is so hard to say no is that the perceived benefits are seen as great and no one at the table understands the consequences of starting one or more new projects. Even if Claes or anyone else on the team has an instinctive feeling that we are already overloaded it is very hard to debate or discuss it without facts and numbers for consequences. &nbsp;The harder it is to understand the consequences the harder it is to say no to new work and we cannot get a good understanding of the coming consequences without understanding our current capacity.</p>
<p>(Click on the image to enlarge it)</p>
<p><a href="/resource/articles/chronic-overcommitment/en/resources/fig2.jpg" _href="resource://fig2.jpg"><img src="http://www.infoq.com/resource/articles/chronic-overcommitment/en/resources/1fig2small.jpg" alt="" _href="img://1fig2small.jpg" _p="true" /></a></p>
<p><strong>Figure 2 - Acceptance of new work</strong></p>
<p>When you continue to add projects in an uncontrolled manner long enough, the IT organization will be overcommitted, it may take some time but in the end, it will happen.</p>
<p>When existing projects get delayed, trust between IT and the business deteriorates and business stakeholders will start to take any opportunity to get their needs on the agenda. This will show up in the form of requirements being forced into projects that have already gotten clearance to start, skunkworks projects done by departments without any IT participation causing additional work for the IT department in the form of integration, maintenance and security issues. All of this can be summarized as pressure to accept more work. Eventually this will become a reinforcing loop that keeps heaping pressure on the team to accept additional work.</p>
<p>(Click on the image to enlarge it)</p>
<p><a href="/resource/articles/chronic-overcommitment/en/resources/fig3.jpg" _href="resource://fig3.jpg"><img src="http://www.infoq.com/resource/articles/chronic-overcommitment/en/resources/fig3small.jpg" alt="" _href="img://fig3small.jpg" _p="true" /></a></p>
<p><strong>Figure 3 - Increasing pressure to accept more work keeps the organization in a perpetual state of Overcommitment</strong></p>
<p>One of the actions Claes and his boss can do is to kill projects that are less important to create space for projects that are more important. This would lessen the strain on the IT organization and provide a more even flow of deliveries from the projects and allow Claes to come out on top of the situation.</p>
<p>(Click on the image to enlarge it)</p>
<p><a href="/resource/articles/chronic-overcommitment/en/resources/fig4.jpg" _href="resource://fig4.jpg"><img src="http://www.infoq.com/resource/articles/chronic-overcommitment/en/resources/fig4small.jpg" alt="" _href="img://fig4small.jpg" _p="true" /></a></p>
<p><strong>Figure 4 - Killing projects to lessen overcommitment problems</strong></p>
<p>Unfortunately other dynamics come into play when Claes wants to kill some of the existing projects.&nbsp; When the organization is overcommitted it usually has hundreds of projects with a multitude of stakeholders making it very difficult to kill a project. Project champions and stakeholders will want to keep their projects running in order to get the anticipated benefits, so they will point to other projects and say “find another project to kill, my project is important”.&nbsp; Basically Claes is trying to sell the message “Your baby is ugly and needs to be closed so someone else’s baby can be started”. &nbsp;He will not find many sympathetic listeners.&nbsp; This gives us the “Do not kill my project” reinforcing loop; the more overcommitted our organization is the harder it is to pinpoint the right projects to kill in order to bring us back to a stable execution mode.</p>
<p>(Click on the image to enlarge it)</p>
<p><a href="/resource/articles/chronic-overcommitment/en/resources/fig5.jpg" _href="resource://fig5.jpg"><img src="http://www.infoq.com/resource/articles/chronic-overcommitment/en/resources/fig5small.jpg" alt="" _href="img://fig5small.jpg" _p="true" /></a></p>
<p><strong>Figure 5 - &quot;Do not kill my project&quot; reinforcing loop</strong></p>
<p>Unfortunately, killing a running project will tear further on the trust between IT and Business and increase the pressure on IT to accept new work. So once we are in this “Catch 22” of over commitment, it is hard for an organization to get out of the hole they are in.</p>
<p>In summary, the IT organization can be viewed as a bathtub. When the “bathtub” overflows it creates extra costs and problems and delays delivery of existing projects. The basic rule is never add more work than flows out of the organization once you have reached your capacity limit.</p>
<p><img src="http://www.infoq.com/resource/articles/chronic-overcommitment/en/resources/1fig6.jpg" alt="" _href="img://1fig6.jpg" _p="true" /></p>
<p><strong>Figure 6 - IT department as a bathtub</strong></p>
<h2>Resolving the Gordian Knot between Business and IT</h2>
<p>A Gordian Knot represents a difficult, intractable and often insolvable problem, which is exactly what it feels like in an organization with chronic overcommitment.&nbsp; But there is hope. &nbsp;Let's see what Claes and his boss could do to improve things.</p>
<p>Claes could try to solve his resource issues by using external suppliers and doing various workarounds to provide functionality faster, but none of these methods address the main reasons for overcommitment.&nbsp; While workarounds may help, they will only serve to keep the organization in the Catch 22 situation they find themselves in. Even more worrisome is that over the long run, performance will deteriorate since the IT department’s capacity gets worse and worse over time.</p>
<p>Instead, Claes should apply the following four steps:</p>
<ol> 
 <li><strong>Learn to deliver on a small scale </strong></li> 
</ol>
<p style="margin-left: 40px;">Isolate some value stream or function where it's possible for a team to deliver value without dependencies on other parts of the organization. Have the team deliver with quality, accept no shortcuts or deliveries where the quality is unknown. Feed the learnings on how to organize around a value stream back to the organization and then slowly begin to scale up being careful to avoid unnecessary dependencies between the value streams.&nbsp; Use Agile and Lean practices and principles to improve your delivery capacity.</p>
<ol> 
 <li value="2"><strong>Have a clear strategy and live by it </strong></li> 
</ol>
<p style="margin-left: 40px;">You cannot kill project #265 without a clear strategy. By articulating the business vision and priorities in a concrete manner, with clear real examples, people can make the right decisions. Remember that everyone is prone to overcommitment and the job of management is to make sure that the delivery engine is not overloaded. Create hard rules of limits for the system and enforce escalation procedures like requiring CEO level acceptance to exceed the limits for work in progress. Companies like Volvo and Harley Davidson have learned this lesson and created a strategy to deal with it. At Volvo the strategy was codified in the quote “666 is the highway to hell” meaning that they should never do three major projects in parallel (major projects are called category 6 projects at Volvo). &nbsp;Similarly, Harley Davidson made huge progress by understanding that they could not do more than one big project per year.</p>
<ol> 
 <li value="3"><strong>Change your habits around problems</strong></li> 
</ol>
<p style="margin-left: 40px;">Normally when a problem occurs, management rushes in to help solve that problem but often making things worse by enforcing more control, status reporting, and other work that is disconnected from reality.</p>
<p style="margin-left: 40px;">By doing what should be the work of the front line people, managers lose their strongest card since their focus shrinks. Once you have ensured that your people have the needed expertise and any other resources necessary to solve the problem, make sure you have a structure to share information about the issue.</p>
<p style="margin-left: 40px;">&nbsp;Finally, think about how the problem might have side effects on the organization, both today and in the future, and try to answer the following questions. &nbsp;How could this problem have been detected earlier? Is there anything in the current system and strategy that creates this problem? How do we share new knowledge gained from this problem?&nbsp; Innovation requires space, how can you create this space for your teams so that this problem does not impact you again?</p>
<ol> 
 <li value="4"><strong>Create common knowledge</strong></li> 
</ol>
<p style="margin-left: 40px;">If you are responsible for the delivery engine in your organization, you will need to create a common understanding between all parties so that everyone understands the strategies and rules of the game. It is important to create this common ground so that everyone understands that the decisions and behavior is optimal for the organization and not done for local silo optimization.</p>
<h2>In Conclusion</h2>
<p>We have hopefully shown that the problem of chronic overcommitment is the result of many patterns and people interacting with each other and that any solution to this problem must be applied across several different layers. As a rule of thumb though, until you have a clear understanding of your organization's capacity, don't start any new work until you've closed something old. Our business is not to start as much as possible; it's to finish as much as possible.</p>
<blockquote>
 I'm as proud of what we don't do as I am of what we do. – Steve Jobs
</blockquote>
<h2>About the Authors</h2>
<p><strong><img align="left" src="http://www.infoq.com/resource/articles/chronic-overcommitment/en/resources/rolf.jpg" alt="" _href="img://rolf.jpg" _p="true" />Rolf H&auml;s&auml;nen</strong> is the founder of Value At Work and a systems thinker whom is passionate about improvement and innovation. Combining principles and methods of Systems Thinking, Lean Product Development, Design Thinking and the Agile world, Rolf helps people solve complex business problems and improve their organizations. Currently Rolf is working with challenges involved with large-scale product development and how to capture and share knowledge across organizational boundaries and unlock the full potential of team learning.</p>
<p>&nbsp;<strong><img align="left" src="http://www.infoq.com/resource/articles/chronic-overcommitment/en/resources/morgan.jpg" alt="" _href="img://morgan.jpg" _p="true" />Morgan Ahlstr&ouml;m</strong> combines a broad experience from several different roles in IT organizations in many different industries such as banking, media/television, automotive, telecom, travel, fashion and facilities management. This has given him a great ability to help his clients find new solutions to their challenges. For more than ten years, he has continuously nurtured a strong interest in Agile software development and change management in organizations and uses these skills to help his clients develop more effective and efficient organizations. Today, Morgan is mainly working as a lean/agile coach, helping individuals, teams and organizations implement Agile processes.</p><br><br><br><br><br><br></body></html>