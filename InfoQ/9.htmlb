<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /></head><body><h3>使用Flurry来统计和分析用户行为</h3><h2>简介</h2>
<p><img width="600" src="http://infoqstatic.com/resource/articles/use-flurry-to-statistics-and-analysis-user-behavior/zh/resources/1030200.png" alt="" _href="img://null" _p="true" /></p>
<p><a href="http://www.flurry.com/">Flurry</a>是一家专门为移动应用提供数据统计和分析的公司。他们的数据统计分析SDK支持的平台包括iPhone, iPad, Android, Windows Phone, Java ME和BlackBerry。使用Flurry服务的公司包括eBay、Yahoo、Hulu和Skype等超过11万家公司，涉及的应用超过36万个。</p>
<p>利用Flurry提供的分析平台，我们可以很容易地自动统计出应用的使用情况，例如：</p>
<ol> 
 <li>每天（每周或每月）登录用户数，应用使用次数</li> 
 <li>每天（每周或每月）新用户数，活跃用户数</li> 
 <li>用户的所在地、年龄、性别的分布情况</li> 
</ol>
<p>Flurry也可以自动统计出移动设备的分类情况，例如：</p>
<ol> 
 <li>使用3G，Wifi的会话比例</li> 
 <li>使用iOS系统各版本(例如iOS6.0, iOS7.0等)的比例</li> 
 <li>使用iOS各种设备（例如iPhone4, iPhone5等)的比例</li> 
</ol>
<p>除了上面介绍的自动统计项目，Flurry SDK也提供了统计用的相关API，便于我们针对自己产品的特点，做针对性的统计。例如统计应用中某个按钮的按下次数，或者网络请求的平均响应时间等。</p>
<h2>Flurry的基本使用</h2>
<h3>注册和下载对应SDK</h3>
<p>使用Flurry前，需要先到官方网站<a href="http://www.flurry.com/">http://www.flurry.com/</a>注册账号。然后登录到Flurry后台，依次选择 <code>&quot;Applications&quot; -&gt; “Add a New Application&quot;</code> ，增加一个需要统计分析的应用。如下图所示：</p>
<div id="lowerFullwidthVCR"></div>
<p><img width="600" src="http://infoqstatic.com/resource/articles/use-flurry-to-statistics-and-analysis-user-behavior/zh/resources/1030201.png" alt="" _href="img://null" _p="true" /></p>
<p>然后，在接下来的界面之后根据你的应用类型，选择iPhone或iPad应用。如下图所示：</p>
<p><img width="600" src="http://infoqstatic.com/resource/articles/use-flurry-to-statistics-and-analysis-user-behavior/zh/resources/1030202.png" alt="" _href="img://null" _p="true" /></p>
<p>接着，填入应用的名字和分类（名字仅用作在Flurry后台和自己的其它应用区分，不需要和应用的真实名字相同），之后点击&quot;Create App&quot;，如下所示：</p>
<p><img width="600" src="http://infoqstatic.com/resource/articles/use-flurry-to-statistics-and-analysis-user-behavior/zh/resources/1030203.png" alt="" _href="img://null" _p="true" /></p>
<p>到此，我们就成功在后台创建了一个新的应用统计和分析项目。点击下图中的&quot;Download&quot;，可以下载需要集成在应用中的SDK。而下图中的提示2中的Key：<code>X28BBKTNZ9H3VYTBDBG3</code>则是我们在集成时用于标识自己应用的ID。</p>
<p><img width="600" src="http://infoqstatic.com/resource/articles/use-flurry-to-statistics-and-analysis-user-behavior/zh/resources/1030204.png" alt="" _href="img://null" _p="true" /></p>
<h3>集成SDK</h3>
<p>我们将下载后的SDK解压，可以看到文件列表如下。列表中对我们最重要的文件是Flurry目录下的<code>flurry.h</code>文件和<code>libFlurry_4.3.0.a</code>文件。这2个文件需要复制到Xcode的工程中去。</p>
<p>而<code>ProjectApiKey.txt</code>文件中记录了我们之前创建的应用ID，在在代码中调用SDK初使化时需要使用。</p>
<p><img width="600" src="http://infoqstatic.com/resource/articles/use-flurry-to-statistics-and-analysis-user-behavior/zh/resources/1030205.png" alt="" _href="img://null" _p="true" /></p>
<p>接着我们打开Xcode工程，将之前下载解压的Flurry目录拖动添加到工程中，同时在工程的.pch文件中加上 <code>#import &quot;Flurry.h&quot;</code>，如下图所示：</p>
<p><img width="600" src="http://infoqstatic.com/resource/articles/use-flurry-to-statistics-and-analysis-user-behavior/zh/resources/1030206.png" alt="" _href="img://null" _p="true" /></p>
<p>接着我们在<code>Link Binary With Libraries</code>中加入如下2个依赖的framework:</p>
<ul> 
 <li>Security.framework</li> 
 <li>SystemConfiguration.framework。</li> 
</ul>
<p><img width="600" src="http://infoqstatic.com/resource/articles/use-flurry-to-statistics-and-analysis-user-behavior/zh/resources/1030207.png" alt="" _href="img://null" _p="true" /></p>
<p>接着我们打开 <code>AppDelegate.m</code>，在<code>- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions</code>方法中，加入代码<code>[Flurry startSession:@&quot;X28BBKTNZ9H3VYTBDBG3&quot;];</code>，如下图所示：</p>
<p><img width="600" src="http://infoqstatic.com/resource/articles/use-flurry-to-statistics-and-analysis-user-behavior/zh/resources/1030208.png" alt="" _href="img://null" _p="true" /></p>
<p>这样，就完成了Flurry最简单的集成。通过以上短短几步，Flurry就可以帮我们完成应用的基本使用数据的统计和分析。</p>
<h3>自定义统计项</h3>
<p>Flurry提供了<code>logEvent</code>函数，用于实现自定义的统计项。默认情况下，该函数接受一个参数，用于表示当前统计项的名字。</p>
<p>例如我们的界面中有2个按钮，我们想统计它们各自被用户的点击次数，则可以如下代码实现。在该代码中，我们定义了2个自定义的统计项，名字分别为<code>First Button Pressed</code>和<code>Second Button Pressed</code>。</p>
<p><img width="600" src="http://infoqstatic.com/resource/articles/use-flurry-to-statistics-and-analysis-user-behavior/zh/resources/1030209.png" alt="" _href="img://null" _p="true" /></p>
<p><code>logEvent</code>函数也支持添加各种参数，用于做更加精细的统计，例如，我们想在统计用户在同一个页面，点击时不同按钮的次数分布，看哪些按钮更加常用，则统计代码可以如下实现：</p>
<p><img width="600" src="http://infoqstatic.com/resource/articles/use-flurry-to-statistics-and-analysis-user-behavior/zh/resources/1030210.png" alt="" _href="img://null" _p="true" /></p>
<p><code>logEvent</code>函数也支持统计时间，常常用来统计某个复杂的网络操作的耗时或者用户对于某些界面的响应时间。例如，我们想统计用户停留在某个提示界面的时间，则可以用如下代码完成：</p>
<p><img width="600" src="http://infoqstatic.com/resource/articles/use-flurry-to-statistics-and-analysis-user-behavior/zh/resources/1030211.png" alt="" _href="img://null" _p="true" /></p>
<h3>查看统计结果</h3>
<p>完成上面的自定义统计的代码后，待应用发布后，我们就可以从后台的<code>Events</code>栏中看到相应的统计结果了。如下图所示：</p>
<p><img width="600" src="http://infoqstatic.com/resource/articles/use-flurry-to-statistics-and-analysis-user-behavior/zh/resources/1030212.png" alt="" _href="img://null" _p="true" /></p>
<h3>统计Crashlog</h3>
<p>Flurry从4.2.3开始，支持应用的Crashlog统计。只需要在<code>AppDelegate.m</code>文件 中，调用完<code>startSession</code>方法后，再调用如下代码即可：</p>
<p><code>[Flurry setCrashReportingEnabled:YES];</code></p>
<p>之后就可以从后台的<code>Errors</code>项中，获得应用的Crashlog信息。</p>
<h2>和其它统计分析平台的对比</h2>
<p>和著名的统计工具<a href="http://www.google.com/analytics/">Google Analytics</a>相比，Flurry的优点是：</p>
<ol> 
 <li>Flurry专门针对移动端做了许多优化。</li> 
 <li>Flurry没有被墙的问题。</li> 
</ol>
<p>Flurry缺点是:</p>
<ol> 
 <li>Google Analytics的统计功能相对更强大一些。</li> 
 <li>Google Analytics可以和网页版的统计数据做整合。</li> 
</ol>
<p>和国内的分析平台<a href="http://www.umeng.com/">友盟</a>相比，Flurry的优点是：</p>
<ol> 
 <li>使用Flurry的应用相对更多。根据Flurry和友盟的官方数据，有超过36万应用使用Flurry<sup><a href="http://www.flurry.com/big-data.html">1</a> </sup>，有超过18万应用使用友盟<sup><a href="http://www.umeng.com/analytics">2</a></sup>。</li> 
 <li>Flurry是国外的公司，保持独立和专注，数据安全性更高；友盟现在已经<a href="http://tech.163.com/13/0426/16/8TDB6H1N00094MOK.html">被阿里收购</a>，当用户的应用涉及领域和阿里有类似或重合的时候，那么该统计数据有潜在的安全性问题。</li> 
</ol>
<p>Flurry的缺点是：</p>
<ol> 
 <li>友盟因为是中国公司，所以对国内开发者非常友善，相关的文档或界面都是中文的。而Flurry并不提供中文的后台管理界面或相关文档。</li> 
 <li>Flurry的服务器在国外，在响应速度上应该相对比友盟慢一些。但在测试中，Flurry服务器都保证了500ms左右的响应时间，还是比较好的。</li> 
</ol>
<h2>总结</h2>
<p>本文介绍了Flurry的基本功能以及如何做自定义的统计，最后与业界其它同类工具做了对比。我也将相关示例代码整理到github上，地址是：<a href="https://github.com/tangqiaoboy/FlurryUsageSample">https://github.com/tangqiaoboy/FlurryUsageSample</a>，愿本文能帮助你更加方法地做应用的统计和分析工作。</p><br><br><br><br><br><br></body></html>