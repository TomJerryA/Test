<p>Oracle has launched the second part of its Java EE 8 community survey with cloud, security, logging, deployment, testability, pruning, and profiles amongst the topics.</p>
<p>&quot;During the last 5 weeks, we have been positively surprised by the community responses on the first part of the survey,&quot; writes David Delabassee. &quot;We have received a lot of valuable feedback! That means we have *a lot of data* to process, a really nice problem to face!&quot;</p>
<p>One of the big topics for consideration is whether it is now appropriate to standardise support for PaaS, SaaS and multi-tenancy. This was work that was originally planned for Java EE 7 but later shelved, at least in part because it was felt too early to attempt standarisation. At the time Linda DeMichiel wrote</p>
<blockquote> 
 <p>Despite our best intentions, our progress has been slow on the cloud side of our agenda. Partially this has been due to a lack of maturity in the space for provisioning, multi-tenancy, elasticity, and the deployment of applications in the cloud. And partially it is due to our conservative approach in trying to get things &quot;right&quot; in view of limited industry experience in the cloud area when we started this work. Because of this, we believe that providing solid support for standardized PaaS-based programming and multi-tenancy would delay the release of Java EE 7 until the spring of 2014 â€” that is, two years from now and over a year behind schedule. In our opinion, that is way too long.</p> 
</blockquote>
<p>Oracle is now interested in whether the wider Java community thinks it is worth trying again.</p>
<p>Other ideas being contemplated include a standard API to enable developers to trace the effects of a single request through the system, to see what services it uses, what other requests it makes, etc. In addition, Oracle is considering adding support for an embedded web container and embedded Java EE container. Security proposals include standardisation for group to role mapping, EL-enabled authorization annotations, and standardization of simple security providers.</p>
<p>Oracle is also pondering whether to have another go at standardising a deployment model. The original attempt at this, Java EE Application Deployment [JSR 88], theoretically allows any Java EE application to be deployed into any Java EE compatible environment using the same deployment tool, but it has been poorly supported by vendors and was considered for pruning in Java EE 6.</p>
<p>In a similar vein to JSR 88, Java EE Management [JSR 77] provides APIs for management tools to query a Java EE application server to determine its current status, applications deployed, and so on. Server management tools built using these APIs work in a cross-vendor manner providing system administrators with a means to switch application servers without changing management tools and processes, or to manage a network of multiple Java EE servers consisting of multiple vendor implementations of the platform. Like JSR 88 this API has suffered from poor vendor support, was considered for pruning in EE 7 and is back on the list this time. Other pruning candidates include EJB 2.x remote and local client view (<em>EJBObject</em>, <em>EJBLocalObject</em>, <em>EJBHome</em>, and <em>EJBLocalHome</em> interfaces) and CORBA.</p>
<p>There are 28 questions in the survey. As before, each question provides background on the related technology concept to help participants make an informed decision. You can find the survey here.</p>