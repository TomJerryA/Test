<p class="MsoNormal">The Solution Explorer area of Visual Studio has long used nesting to balance accessibility and clarity within a project's subfolders. &nbsp;Given the number of files in use with most projects today, having this nesting ability apply to other project items without having to physically relocate them would be a helpful organizational aid. &nbsp;Mads Kristensen has released a new File Nesting extension for Visual Studio that does just that.&nbsp;</p>
<p class="MsoNormal">It offers several options:&nbsp; nest a file when commanded to by the user, nest a selection of files, or enable automatic nesting for an entire project.&nbsp; File Nesting currently supports Visual Studio 2013, but support for VS2012 is planned according to Kristensen.&nbsp; The extension may be downloaded from the Visual Studio gallery while the source for the project is on GitHub.</p>
<p class="MsoNormal">&nbsp;</p>
<p class="MsoNormal">
 <o:p></o:p></p>
<p class="MsoNormal"><strong>Remembering to save with automatic snapshots</strong>
 <o:p></o:p></p>
<p class="MsoNormal">Recently released extension AutoHistory provides Visual Studio 2013 users with a new way to maintain their work.&nbsp; If you use source control features like TFS or Git, you are used to having the ability to rewind changes to your project.&nbsp; But what if you haven’t made a commit in a while, or what if what you committed isn’t really the approach you want to take?
 <o:p></o:p></p>
<p class="MsoNormal">AutoHistory’s approach to these scenarios is to automatically save the changes in files you have edited in your project at automatic intervals.&nbsp; You may look back over the chronology at any time to diff a changed file with its current contents.&nbsp; The extension currently stores changes for up to 3 days, but also provides for storing user-directed snapshots and regular file save events.&nbsp; Auto-snapshots are taken every 5 minutes.&nbsp; 
 <o:p></o:p></p>
<p class="MsoNormal">Channel 9 provides a helpful introduction to AutoHistory if you are interested in learning more.&nbsp; AutoHistory is a preview, so user feedback is still being actively solicited.
 <o:p></o:p></p>