<p>Open Source project Masonry aims to make Auto Layout code more concise and readable.</p>
<p>Masonry, “a light-weight layout framework which wraps Auto Layout with a nicer syntax”, enables a XIB- and Storyboard-free experience. Its creator, Jonas Budelmann, argues that while Auto Layout is powerful it quickly becomes verbose and unreadable.</p>
<p>Masonry is a domain specific language (DSL) offering all the capabilities provided by Auto Layout with convenience methods for making and updating constraints, accessing attributes, setting priorities and debug support.</p>
<p>Sample code on GitHub is designed to show typical usage and Masonry’s succinct syntax:</p>
<pre><p>UIEdgeInsets padding = UIEdgeInsetsMake(10, 10, 10, 10);</p><p>[view1 mas_makeConstraints:^(MASConstraintMaker *make) {<br />&nbsp;&nbsp; make.edges.equalTo(superview).with.insets(padding);<br />}];</p>
</pre>
<p>Central to Auto Layout is the constraint: a mathematical representation of a relationship between UI elements. Constraints comprise size, relative positions managed by priorities and thresholds. They are additive making it possible for constraints to conflict and insufficient constraints lead to ambiguity. Both scenarios can throw exceptions.</p>
<p>Programmatic creation of constraints without using Masonry is possible by creating an NSLayoutConstraint with references to views and specifying attributes and relationships. Apple also provides the Visual Format Language; another DSL for describing relationships in text.</p>
<p>Auto Layout is neither mandatory nor exclusive with “springs and struts” still a valid approach. “Springs and struts”, or autoresizing masks, determines how a view responds when its parent view changes bounds.</p>
<p>Apple provides compelling reasons to adopt Auto Layout:</p>
<ul> 
 <li>“Springs and struts” requires code to support multiple orientations, different screen sizes and dynamic content.</li> 
 <li>Dynamic Type in iOS 7 allows users to specify a prefered text size in apps.</li> 
 <li>Supporting both iOS 6 and iOS 7 and their different element metrics.</li> 
</ul>
<p>Auto Layout is not without fundamental issues. Apple provides guidance on how to use Auto Layout with the commonly used UIScrollView. Matt Neuburg provides a convincing argument on why “Auto Layout does not play at all well with view transforms” suggesting greater use of layer transforms to compensate.</p>
<p>Any kind of Auto Layout code means you will not gain from the Interface Builder&nbsp; enhancements made available in Xcode 5. Specifically the ability to visually resolve Auto Layout issues and the preview mode in the assistant editor that lets you view the runtime layout in different orientations, different iOS versions and different device sizes.</p>