<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /></head><body><h3>GCC 4.8 Completes Move to C++</h3><p class="western" style="margin-bottom: 0in"><span lang="en-US">The <a class="western" href="http://gcc.gnu.org/gcc-4.8/">latest version</a> of the GNU Compiler Collection (GCC) has been released which marks completion of its conversion to C++. </span><span lang="en-US">This process</span><span lang="en-US">&nbsp;</span><span lang="en-US">been </span><span lang="en-US">a multi</span><span lang="en-US">-</span><span lang="en-US">year </span><span lang="en-US">project,</span><span lang="en-US"> with the GCC </span><span lang="en-US">team </span><span lang="en-US">stating that this move was needed to retain and attrac</span><span lang="en-US">t</span><span lang="en-US"> new project members through a&nbsp;</span><span lang="en-US">maintainable</span><span lang="en-US"> code base. <a class="western" href="http://gcc.gnu.org/wiki/cxx-conversion">C++ was chosen</a> in part as it is a standards-based language that according to the project &quot;supports cleaner code, makes it easier to write and enforce cleaner interfa</span><span lang="en-US">c</span><span lang="en-US">es... and is not a panacea but it is an improvement [over the C-based legacy code].” </span><span lang="en-US">The </span><span lang="en-US">end-result for most developers is only that those interested in compiling 4.8 from source must use a compiler that understands C++ 2003. &nbsp;Typical users will simply benefit from a compiler suite that is designed to be more efficient and easier to update.</span></p> 
<p class="western" style="margin-bottom: 0in"><b>New Compiler Features</b></p> 
<p class="western" style="margin-bottom: 0in">General compiler improvements include a &quot;new general optimization level [that] has been introduced. It addresses the need for fast compilation and a superior debugging experience while providing a reasonable level of runtime performance.” Additionally, 4.8 includes the <a class="western" href="https://code.google.com/p/address-sanitizer/">AddressSanitizer</a><b> </b>for memory error detection and the <a class="western" href="https://code.google.com/p/data-race-test/wiki/ThreadSanitizer">ThreadSanitizer</a> which allows instructions [to] be instrumented to detect data races. (The ThreadSanitizer is currently exclusively available on x86-64 GNU/Linux.)</p> 
<p class="western" style="margin-bottom: 0in">Notable new compiler targets include 64-bit ARM (AArch64), and 32-bit ARMv8 architecture.</p> 
<p class="western" style="margin-bottom: 0in;"><b>Language Specific Improvements</b></p> 
<p class="western" style="margin-bottom: 0in">Completing the switch to C++ is not the only notable accomplishment of this release. Several areas of the compiler received improvements. GCC now supports the preliminary version of Go 1.1 for GNU/Linux and Solaris on multiple architectures. Fortran and C also received several updates worth investigating if developing in those languages.</p> 
<p class="western" style="margin-bottom: 0in;"><span lang="en-US">C++ users will find <a class="western" href="http://gcc.gnu.org/gcc-4.8/cxx0x_status.html">improved C++11 support</a>:</span></p> 
<ul> 
 <li>thread_local keyword</li> 
 <li>attribute syntax</li> 
 <li>alignment specifier</li> 
 <li>inheriting constructors</li> 
 <li>forward_list meets the allocator-aware container requirements</li> 
</ul> 
<p class="western" style="margin-bottom: 0in;">C++11 support in GCC 4.8 compares very favorably to the <a class="western" href="http://clang.llvm.org/cxx_status.html">Clang 3.2</a>, and both of these compilers have pulled ahead of the latest support in <a class="western" href="http://www.infoq.com/news/2012/11/nov12CTP;jsessionid=0F9224EBC4E0457C54143900C0671CEA">Visual Studio 2012's November CTP</a>. Planning for future C++ changes has begun with the addition of the option <i>-std=c++1y</i> for experimentation with features proposed for the next major revision of the standard, expected <a class="western" href="http://isocpp.org/std/status">around 2017</a>.</p> 
<p class="western" style="margin-bottom: 0in;">The C++ runtime standard library (libstdc++) has greater support for C++11, improvements in random number generation (including hardware support on new X86 processors), and new random number distributions.</p> 
<p id="lastElm"></p><br><br><br><br><br><br></body></html>