<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /></head><body><h3>Got Node? AWS Latest Cloud to Offer Node.js Application Services</h3><p>The Amazon Web Services (AWS) team recently added support for Node.js to its <a href="http://aws.amazon.com/elasticbeanstalk/" target="_blank">Elastic Beanstalk service</a>, giving it an industry-leading set of supported platforms. In addition to Node.js, the AWS Elastic Beanstalk gives developers the ability to package, deploy, and manage applications written in Java, PHP, .NET, Ruby, and Python. AWS has joined a crowded field of Node.js-friendly clouds and will attempt to differentiate themselves through integration with other top AWS services.</p> 
<p>In <a href="http://www.allthingsdistributed.com/2013/03/beanstalk-a-la-node.html" target="_blank">a blog post about the addition of Node.js</a> to the AWS Elastic Beanstalk, AWS CTO Werner Vogels described some of the reasons for including this increasingly-popular platform.</p> 
<blockquote> 
 <p>I spent a lot of time talking to AWS developers, many working in the gaming and mobile space, and most of them have been finding Node.js well suited for their web applications. With its asynchronous, event-driven programming model, Node.js allows these developers to handle a large number of concurrent connections with low latencies. These developers typically use EC2 instances combined with one of our database services to create web services used for data retrievals or to create dynamic mobile interfaces</p> 
</blockquote> 
<p>Jeff Barr of the AWS team <a href="http://aws.typepad.com/aws/2013/03/aws-elastic-beanstalk-for-nodejs.html" target="_blank">pointed out some of his favorite features</a> of Node.js on Elastic Beanstalk.</p> 
<ul> 
 <ul> 
  <li>Choose <a href="http://nginx.org/">Nginx</a> or <a href="http://httpd.apache.org/">Apache</a> as the reverse proxy to your Node.js application. You can even choose to not use any proxy if your application requires that the client establishes a direct connection.</li> 
  <li>Configure HTTP and TCP load balancing depending on what your application needs. If your application uses WebSockets, then TCP load balancing might be more appropriate for your workload.</li> 
  <li>Configure the Node.js stack by using the specific version of Node.js that your application needs or by providing the command that is used to launch your Node.js application. You can also manage dependencies using <a href="https://npmjs.org/">npm</a>.</li> 
  <li>Help improve performance by configuring gzip compression and static files when using Nginx or Apache. With gzip compression, you can reduce the size of your response to the client to help create faster transfer speeds. With static files, you can let Nginx or Apache quickly serve your static assets (such as images or CSS) without having these requests take time away from the data-intensive processing that your Node.js application might be performing.</li> 
  <li>Seamlessly integrate your app with <a href="http://aws.amazon.com/rds/">Amazon RDS</a> to store and retrieve data from a relational data store.</li> 
  <li>Customize your EC2 instances or connect your app to AWS resources using Elastic Beanstalk configuration files (visit the <a href="http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create_deploy_nodejs_custom_container.html">AWS Elastic Beanstalk Developer Guide</a> to learn more about configuration files).</li> 
  <li>Run your Node.js application inside an <a href="http://aws.amazon.com/vpc/">Amazon Virtual Private Cloud</a> for additional networking control.</li> 
 </ul> 
</ul> 
<p>In addition to those features listed, the Elastic Beanstalk also supports <a href="http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create_deploy_nodejs.sdlc.html" target="_blank">Git integration</a>, <a href="http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create_deploy_nodejs_express_elasticache.html" target="_blank">clustering for high availability</a>, and usage of <a href="http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create_deploy_nodejs_custom_container.html" target="_blank">environment-specific variables</a>. AWS made its first foray into Node.js back in December 2012 when they <a href="http://aws.amazon.com/about-aws/whats-new/2012/12/04/introducing-the-aws-sdk-for-node-js/" target="_blank">launched an SDK</a> for Node.js developers. This SDK provides access to a vast majority of the available AWS services including Amazon DynamoDB, Amazon Simple Storage Service (S3), Amazon Relational Database Service (RDS), Amazon Simple Queue Service (SQS), Amazon Elastic Compute Cloud (EC2), and more.</p> 
<p>AWS joins many other clouds in offering Node.js application services. With the exception of the Google App Engine, nearly every major Platform-as-a-Service vendor offers a Node.js fabric including <a href="https://devcenter.heroku.com/articles/nodejs" target="_blank">Heroku</a>, <a href="http://www.windowsazure.com/en-us/develop/nodejs/" target="_blank">Windows Azure</a>, <a href="https://www.openshift.com/paas" target="_blank">Open Shift</a>, <a href="https://www.engineyard.com/products/cloud/features" target="_blank">Engine Yard</a>, and the many providers of <a href="http://docs.cloudfoundry.com/frameworks/nodejs/nodejs.html" target="_blank">Cloud Foundry</a>. All of these vendors also compete with thought leader and <a href="https://www.nodejitsu.com/" target="_blank">dedicated Node.js platform provider Nodejitsu</a>. So how do these vendors differentiate themselves? One way is through tooling. Werner Vogels points out how Elastic Beanstalk is tightly integrated into the development tools of many top platforms.</p> 
<blockquote> 
 <p>You can deploy and manage your applications in any AWS region (except for GovCloud). Many tools are available for you to deploy and manage your application, just choose your favorite flavor. If you’re building Java applications, you can use the AWS Toolkit for Eclipse. If you’re building .NET applications, you can use the AWS Toolkit for Visual Studio. If you prefer to work in a terminal, you can use a command line tool called ‘eb’ along with Git. Partners like eXoCloud IDE also offer integration with Elastic Beanstalk.</p> 
</blockquote> 
<p>exoCloud, now spun off as <a href="https://codenvy.com/features" target="_blank">CodeEnvy</a>, provides developers a cloud-based development environment that can target the Elastic Beanstalk for Node.js deployments.</p> 
<p>In addition to providing developers with tools to build and deploy Node.js applications, cloud providers are differentiating themselves through integration with complimentary services, and by offering solutions to the “hard” problems in application management. A compelling aspect of running Node.js on the Elastic Beanstalk is the ability to easily integrate with the many application services provided by AWS. Node.js applications that run in the AWS environment have low latency access to databases, storage, compute, queuing, caching, and much more. Clouds like Windows Azure have a similar value proposition where <a href="http://www.windowsazure.com/en-us/develop/nodejs/" target="_blank">developers who deploy Node.js applications</a> there also have access to diverse set of native services for databases, storage, and messaging. Providers like <a href="https://addons.heroku.com/" target="_blank">Heroku</a> and <a href="https://www.nodejitsu.com/paas/addons/" target="_blank">Nodejitsu</a> don’t have their own set of complimentary application services, but they maintain curated catalogs of services that can integrate with applications running on their platform.</p> 
<p>In addition to providing complimentary services as a way to differentiate themselves, cloud providers also tout their ability to make application deployment and management easier. This means supporting web-based&nbsp; source control repositories – as clouds like AWS, Windows Azure, and Nodejitsu do – and offering continuous deployment services, as Nodejitsu does through TravisCI support. A high quality monitoring and response system can make capacity management much simpler for cloud developers and administrators. AWS has products for monitoring cloud usage and automatically resizing application environments and <a href="http://www.allthingsdistributed.com/2013/03/beanstalk-a-la-node.html" target="_blank">Werner Vogels explained</a> how the Elastic Beanstalk helps provision applications with all the management capabilities included.</p> 
<blockquote> 
 <p>Elastic Beanstalk automates the provisioning, monitoring, and configuration of many underlying AWS resources such as Elastic Load Balancing, Auto Scaling, and EC2. Elastic Beanstalk also provides automation to deploy your application, rotate your logs, and customize your EC2 instances.</p> 
</blockquote> 
<p>Keep an eye on this space as cloud providers enhance the application management capabilities of their platforms while offering native or integrated services that enhance the usefulness of applications running on their platforms.</p> 
<p id="lastElm"></p><br><br><br><br><br><br></body></html>