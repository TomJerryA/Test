<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /></head><body><h3>O estado do NoSQL</h3><p>Ap&oacute;s pelo menos quatro anos de duras cr&iacute;ticas, &eacute; hora de uma posi&ccedil;&atilde;o mais s&oacute;lida sobre o estado do NoSQL. Tanta coisa aconteceu em torno do NoSQL que &eacute; dif&iacute;cil conseguir uma vis&atilde;o geral e avaliar quais objetivos foram alcan&ccedil;ados e em que o NoSQL n&atilde;o deu resultados.</p>
<p>Em muitos setores da ind&uacute;stria e tamb&eacute;m no meio acad&ecirc;mico o NoSQL foi mais do que bem sucedido. As universidades est&atilde;o come&ccedil;ando a entender que o NoSQL deve ser cada vez mais adotado na ementa do curso. A estrutura curr&iacute;cular simplesmente n&atilde;o &eacute; suficiente para ensinar tudo sobre normaliza&ccedil;&atilde;o de banco de dados. Isto, naturalmente, n&atilde;o significa que uma base profunda em modelos relacionais esteja errada. Ao contr&aacute;rio, NoSQL &eacute; certamente uma adi&ccedil;&atilde;o perfeita e importante.</p>
<h2>O que aconteceu?</h2>
<p>O universo NoSQL explodiu em apenas 4 ou 5 anos para cerca de 50 a 150 novos bancos de dados. O site <a href="http://nosql-database.org/">nosql-database.org</a> lista cerca de 150 desses bancos de dados, incluindo alguns &quot;dinossauros&quot; bem antigos, mas ainda fortes como bancos de dados orientados a objetos. E, claro, algumas fus&otilde;es interessantes aconteceram, como o CouchDB e Membase dando origem ao CouchBase.</p>
<p>Muita gente presumiu que haveria uma enorme consolida&ccedil;&atilde;o do NoSQL. No entanto, isso n&atilde;o aconteceu. O dom&iacute;nio do NoSQL simplesmente explodiu e ainda est&aacute; explodindo. Tal como acontece com todas as &aacute;reas da ci&ecirc;ncia da computa&ccedil;&atilde;o − como, por exemplo, linguagens de programa&ccedil;&atilde;o − existem cada vez mais ramifica&ccedil;&otilde;es que se abrem para uma enorme quantidade de bancos de dados. E tudo isso est&aacute; em sintonia com a explos&atilde;o da Internet, do big-data, dos sensores e de v&aacute;rias outras tecnologias no futuro, levando a mais dados e diferentes requisitos sobre como trat&aacute;-los. Nos &uacute;ltimos quatro anos, vimos apenas um sistema de grande porte saindo de cena: o banco de dados alem&atilde;o orientado a grafos Sones. A grande maioria dos bancos de dados NoSQL continuam a viver felizes tanto no dom&iacute;nio do c&oacute;digo aberto, sem qualquer reviravolta consider&aacute;vel envolvendo dinheiro, quanto no dom&iacute;nio comercial.</p>
<h2>Visibilidade e dinheiro</h2>
<p>Outro ponto importante &eacute; a visibilidade e ado&ccedil;&atilde;o da ind&uacute;stria. Nesse espa&ccedil;o &eacute; poss&iacute;vel notar uma grande diferen&ccedil;a entre a velha ind&uacute;stria − protegendo o investimento − e a nova ind&uacute;stria: sobretudo startups. Embora quase todas as startups web que se destacaram, como Pinterest ou Instagram, possuem uma arquitetura hibrida (SQL + NoSQL), a &quot;velha&quot; ind&uacute;stria ainda se esfor&ccedil;a com a ado&ccedil;&atilde;o do NoSQL. Mas a observa&ccedil;&atilde;o aqui &eacute; que mais e mais empresas como estas est&atilde;o tentando projetar que parte de seus fluxos de dados sejam processados ​​e posteriormente analisados ​​com solu&ccedil;&otilde;es NoSQL como Hadoop, MongoDB, Cassandra, etc.</p>
<p>E isso leva tamb&eacute;m a um aumento forte na demanda por desenvolvedores e arquitetos com conhecimento em NoSQL. Uma <a href="http://servicesangle.com/blog/2011/12/29/top-10-developer-and-engineering-skills-employers-will-look-for-going-into-2012/">pesquisa recente</a> mostrou as seguintes habilidades requeridas ultimamente pela ind&uacute;stria:</p>
<div id="lowerFullwidthVCR"></div>
<ol start="1"> 
 <li>HTML5</li> 
 <li>MongoDB</li> 
 <li>iOS</li> 
 <li>Android</li> 
 <li>Aplica&ccedil;&otilde;es para dispositivos m&oacute;veis</li> 
 <li>Puppet</li> 
 <li>Hadoop</li> 
 <li>jQuery</li> 
 <li>PaaS</li> 
 <li>M&iacute;dia social</li> 
</ol>
<p>H&aacute; dois bancos de dados NoSQL entre os dez primeiros para os requisitos de tecnologia na lista acima, e um at&eacute; mesmo antes de iOS. &Eacute; imposs&iacute;vel n&atilde;o enaltecer tal fato.</p>
<p>Mas a ado&ccedil;&atilde;o do NoSQL est&aacute; indo mais r&aacute;pida e profunda do que se poderia pensar &agrave; primeira vista. Em um documento t&eacute;cnico (whitepaper) bem conhecido, a Oracle afirmou em meados de 2011 que bancos de dados NoSQL se pareciam com um sabor de sorvete, mas que n&atilde;o se deveria apegar neles porque poderiam n&atilde;o durar muito tempo. Apenas alguns meses depois a Oracle exibiu sua integra&ccedil;&atilde;o com Hadoop com a solu&ccedil;&atilde;o Big Data Appliance. E mais ainda, a Oracle lan&ccedil;ou seu pr&oacute;prio banco de dados NoSQL, um BerkeleyDB revisado. Desde ent&atilde;o, tem havido uma corrida de todos os fornecedores para uma integra&ccedil;&atilde;o com o Hadoop. Microsoft, Sybase, IBM, Greenplum, Pervasive e muitos outros j&aacute; possuem forte integra&ccedil;&atilde;o. &Eacute; um padr&atilde;o que pode ser visto em toda parte: se n&atilde;o pode lutar contra &eacute; melhor se unir a eles.</p>
<p>Mas um dos sinais mais fortes por&eacute;m silenciosos de uma ado&ccedil;&atilde;o ampla do NoSQL &eacute; que bancos de dados NoSQL est&atilde;o se tornando um padr&atilde;o <a href="http://pt.wikipedia.org/wiki/Plataforma_como_servi%C3%A7o">PaaS</a> (plataforma como servi&ccedil;o). Gra&ccedil;as &agrave; facilidade de configura&ccedil;&atilde;o e gerenciamento de muitos bancos de dados NoSQL, bancos como Redis ou MongoDB podem ser vistos em dezenas de servi&ccedil;os PaaS como Cloud-Foundry, OpenShift, dotCloud, Jelastic etc. Como tudo se move mais e mais para a nuvem, torna-se um grande momento para o NoSQL colocar press&atilde;o sobre os grandes bancos de dados relacionais. Ao existir a op&ccedil;&atilde;o de escolha entre o MySQL/PostgreSQL ou MongoDB/Redis, por exemplo, vai for&ccedil;ar os usu&aacute;rios a pensar duas vezes sobre o seu modelo, requisitos e a levantar outras quest&otilde;es importantes.</p>
<p>Um outro indicador interessante sobre tecnologias &eacute; o radar da ThoughtWorks, que pode trazer informa&ccedil;&otilde;es relevantes, mesmo para quem n&atilde;o concorda totalmente com todo seu conte&uacute;do. Abaixo um radar de outubro de 2012 na figura 1:</p>
<p><img vspace="3" hspace="3" src="http://www.infoq.com/resource/articles/State-of-NoSQL/pt/resources/5fig1.jpg" alt="" _href="img://5fig1.jpg" _p="true" /></p>
<p>Figura 1: Radar de plataformas da ThoughtWorks, outubro de 2012</p>
<p>Em seu quadrante de plataformas s&atilde;o listados cinco bancos de dados:</p>
<ol start="1"> 
 <li>Neo4j (adopt − em ado&ccedil;&atilde;o)</li> 
 <li>MongoDB (trial but close to adopt − em experimenta&ccedil;&atilde;o mas pr&oacute;ximo de adotar)</li> 
 <li>Riak (trial − em experimenta&ccedil;&atilde;o)</li> 
 <li>CouchBase (trial − em experimenta&ccedil;&atilde;o)</li> 
 <li>Datomic (assess − em avalia&ccedil;&atilde;o)</li> 
</ol>
<p>Nota-se que pelo menos quatro desses bancos receberam muito capital de investimento. Somando todo capital de investimento em todo o espa&ccedil;o NoSQL certamente se chegar&aacute; em algo entre 100 mil d&oacute;lares e 1 bilh&atilde;o de d&oacute;lares! Neo4j &eacute; um de um desses exemplos, recebendo 11 milh&otilde;es de d&oacute;lares em financiamentos <a href="http://www.investopedia.com/terms/s/series-b-financing.asp">s&eacute;rie B</a> (termo financeiro para designar uma segunda rodada de investimento). Outras empresas que receberam entre 10 e 30 milh&otilde;es de d&oacute;lares em financiamento foram: Aerospike, Cloudera, DataStax, MongoDB, CouchBase etc. Olhando novamente a lista com aten&ccedil;&atilde;o: Neo4j, MongoDB, Riak e CouchBase t&ecirc;m estado neste espa&ccedil;o nos &uacute;ltimos quatro anos e t&ecirc;m provado constantemente estar entre os l&iacute;deres de mercado para necessidades espec&iacute;ficas. Ent&atilde;o, o quinto banco de dados da lista, o Datomic, &eacute; mais do que surpreendente, um completo e novo banco de dados, com um novo paradigma completo escrito por uma pequena equipe. Ele deve se destacar e ser&aacute; abordado mais adiante ao discutir todos os bancos brevemente.</p>
<h2>Padr&otilde;es</h2>
<p>Muitas pessoas t&ecirc;m pedido por padr&otilde;es NoSQL, mas esquecem de ver que o NoSQL abrange uma gama muito ampla de modelos e necessidades. Desta forma as linguagens unificadas para todas as principais &aacute;reas como Wide Column, Key/Value, bancos de dados orientados a documentos e a grafos certamente n&atilde;o estar&atilde;o dispon&iacute;veis por muito tempo porque &eacute; imposs&iacute;vel cobrir todas as &aacute;reas. V&aacute;rias abordagens, como <a href="http://www.infoq.com/br/articles/spring-data-intro">Spring Data</a>, tentam adicionar uma camada unificada, mas cabe ao leitor testar se essa camada &eacute; um avan&ccedil;o na constru&ccedil;&atilde;o de um ambiente de persist&ecirc;ncia poliglota ou n&atilde;o.</p>
<p>A maior parte dos bancos de dados orientados a documentos e a grafos t&ecirc;m surgido com padr&otilde;es em seus pr&oacute;prios dom&iacute;nios. O universo dos bancos de grafos &eacute; mais bem sucedido com projetos como <a href="https://github.com/tinkerpop/blueprints/wiki">Tinkerpop Blueprints</a>, Gremlin, Sparql e Cypher. No dom&iacute;nio de bancos de dados de documentos existem o UnQL e o jaql preenchendo alguns nichos, embora o primeiro care&ccedil;a de suporte por um banco de dados NoSQL do mundo real. Por&eacute;m, com a for&ccedil;a do Hadoop, muitos projetos est&atilde;o trabalhando na transi&ccedil;&atilde;o de famosas linguagens de ETL, como Pig ou Hive, para outros bancos de dados NoSQL. Assim, o mundo de padr&otilde;es est&aacute; altamente fragmentado, mas apenas devido ao fato de que NoSQL felizmente corresponde a uma &aacute;rea muito ampla.</p>
<h2>O cen&aacute;rio</h2>
<p>Uma das melhores s&iacute;nteses do cen&aacute;rio de bancos de dados foi dada por Matt Aslett em um gr&aacute;fico criado para um <a href="http://blogs.the451group.com/information_management/2012/11/02/updated-database-landscape-graphic/">relat&oacute;rio do 451 Group</a>. Ele recentemente atualizou o gr&aacute;fico, separando-o em categorias de bancos de dados e que nos trazem ainda mais percep&ccedil;&otilde;es. Como pode ser visto na imagem a seguir, o cen&aacute;rio &eacute; altamente fragmentado e as categorias se sobrep&otilde;em:</p>
<p><img vspace="3" hspace="3" src="http://www.infoq.com/resource/articles/State-of-NoSQL/pt/resources/fig2.jpg" alt="" _href="img://fig2.jpg" _p="true" /></p>
<p>Figura 2: O cen&aacute;rio de bancos de dados por Matt Aslett (451 group)</p>
<p>Como se pode ver, existem v&aacute;rias dimens&otilde;es em uma s&oacute; imagem: relacional versus n&atilde;o-relacional, anal&iacute;tico versus operacional, NoSQL versus NewSQL. As duas &uacute;ltimas categorias t&ecirc;m as conhecidas sub-categorias de bancos baseados em chave-valor, orientados a documentos, a gr&aacute;fos e Big Table para NoSQL e Storage-Engines, Clustering-Sharding, novos bancos de dados e solu&ccedil;&otilde;es de servi&ccedil;os em nuvem. A parte interessante da imagem &eacute; que est&aacute; cada vez mais dif&iacute;cil colocar um banco de dados em uma localiza&ccedil;&atilde;o exata na figura. Todo mundo est&aacute; tentando agora intensamente integrar recursos de bancos de dados encontrados em outros espa&ccedil;os. Sistemas NewSQL implementam caracter&iacute;sticas principais NoSQL. Sistemas NoSQL tentam mais e mais implementar recursos &quot;cl&aacute;ssicos&quot; como suporte SQL ou &quot;ACID&quot;, ou, pelo menos, uma persist&ecirc;ncia configur&aacute;vel.</p>
<p>Tudo come&ccedil;ou com a integra&ccedil;&atilde;o com o Hadoop que diversos bancos de dados relacionais oferecem agora. Mas h&aacute; muitos outros exemplos: por exemplo, o banco de dados MarkLogic est&aacute; come&ccedil;ando agora a aproveitar a onda do JSON tornando-o dif&iacute;cil de posicionar. Al&eacute;m disso, mais bancos de dados multi-modelo aparecem, tais como: ArangoDB, OrientDB ou AlechemyDB (que agora &eacute; uma parte do promissor Aerospike DB). Eles permitem come&ccedil;ar com um modelo de banco de dados (por exemplo, documento / modelo JSON) e adicionar outros modelos (grafos ou key-value), conforme novas exig&ecirc;ncias aparecem.</p>
<h2>Livros</h2>
<p>Outro grande sinal maravilhoso de um come&ccedil;o de maturidade &eacute; o mercado de livros. Depois de dois livros alem&atilde;es publicados em 2010 e 2011, outro que se viu foi o <a href="http://shanky.org/2011/09/19/my-new-book-professional-nosql-wiley-2011/">livro</a> Wiley por Shashank Tiwari. Estruturado como um furac&atilde;o e repleto de grandes percep&ccedil;&otilde;es profundas. A corrida continuou com dois livros bons em 2012. O livro &quot;Sete bancos de dados em sete semanas&quot; &eacute; certamente uma obra-prima. Rec&eacute;m-escrito e repleto de vis&otilde;es 'hands-on' pr&aacute;ticas: ele aborda seis bancos de dados NoSQL famosos e acrescenta PostGreSQL &agrave; mistura, tornando-se uma forte recomenda&ccedil;&atilde;o. Por outro lado, P.J. Sandalage e Martin Fowler t&ecirc;m uma abordagem mais hol&iacute;stica para cobrir todas as caracter&iacute;sticas e ajudar a avaliar o seu caminho e suas decis&otilde;es com NoSQL.</p>
<p>Mas h&aacute; mais por vir. &Eacute; apenas uma quest&atilde;o de tempo at&eacute; que um livro de Manning apare&ccedil;a em cena: Dan McCreary e Ann Kelly est&atilde;o escrevendo um livro chamado: &quot;<a href="http://www.manning.com/mccreary/">Making Sense of NoSQL</a>&quot; (NoSQL fazendo sentido) e os primeiros cap&iacute;tulos MEAP (Manning Early Access Program) j&aacute; est&atilde;o dispon&iacute;veis.</p>
<p>Depois de come&ccedil;ar com conceitos e padr&otilde;es, seu cap&iacute;tulo 3 certamente parecer&aacute; atraente:</p>
<ul> 
 <li>Construindo solu&ccedil;&otilde;es NoSQL Big Data;</li> 
 <li>Construindo solu&ccedil;&otilde;es NoSQL de busca;</li> 
 <li>Construindo solu&ccedil;&otilde;es NoSQL de alta disponibilidade;</li> 
 <li>Usando NoSQL para aumentar agilidade.</li> 
</ul>
<p>Esta &eacute; uma nova abordagem e certamente a leitura valer&aacute; a pena.</p>
<h2>O estado dos l&iacute;deres</h2>
<p>Vamos fazer uma considera&ccedil;&atilde;o r&aacute;pida sobre cada l&iacute;der em NoSQL. Como um dos l&iacute;deres de mercado mais evidentes, o Hadoop &eacute; um &quot;ser estranho&quot;. Por um lado, tem um enorme impulso. Como mencionado anteriormente, cada fornecedor de banco de dados cl&aacute;ssico est&aacute; com pressa em anunciar suporte ao Hadoop. Empresas como a Cloudera e MapR continuam a crescer e novas extens&otilde;es do Hadoop e sucessores s&atilde;o anunciados a cada semana.</p>
<p>Mesmo Hive e Pig continuam ainda a obter melhor aceita&ccedil;&atilde;o. No entanto, h&aacute; uma pedra no sapato: as empresas ainda se queixam sobre uma bagun&ccedil;a n&atilde;o estruturada (arquivos de leitura e parsing poderiam ser ainda mais r&aacute;pidos), MapReduce &eacute; &quot;batch demais&quot; (at&eacute; mesmo o Google continua longe dele),</p>
<p>O segundo l&iacute;der, MongoDB, tamb&eacute;m sofre de discuss&otilde;es sem sentido, e pode ser a natureza das coisas que levam DBs receberem maiores cr&iacute;ticas. No entanto, o MongoDB segue em ritmo acelerado e as cr&iacute;ticas na maior parte s&atilde;o:</p>
<p>a) No que diz respeito &agrave;s vers&otilde;es antigas ou</p>
<p>b) Devido &agrave; falta de conhecimento em como lidar com a solu&ccedil;&atilde;o de maneira correta. Isso recentemente culminou em reclama&ccedil;&otilde;es absurdas de que a vers&atilde;o de 32 bits pode manipular apenas 2GB, embora o MongoDB afirma isso claramente na se&ccedil;&atilde;o de download e recomenda a vers&atilde;o de 64 bits.</p>
<p>De qualquer maneira, parceiros do MongoDBs e inje&ccedil;&otilde;es de capitais ajudaram a criar roadmaps ambiciosos com novidades que chamam a aten&ccedil;&atilde;o:</p>
<ul> 
 <li>A ind&uacute;stria solicitou alguns recursos de seguran&ccedil;a/LDAP que j&aacute; est&atilde;o sendo desenvolvidos;</li> 
 <li>A pesquisa completa de texto (Full text search) chegar&aacute; em breve;</li> 
 <li>V8 para MapReduce est&aacute; a caminho;</li> 
 <li>Mesmo em um n&iacute;vel mais fino, &quot;Collection level locking&quot; vir&aacute;;</li> 
 <li>E, por fim, uma <em>Shard Hash Key</em> est&aacute; a caminho.</li> 
</ul>
<p>Especialmente este &uacute;ltimo ponto desperta o interesse de muitos arquitetos. MongoDB foi muitas vezes acusado (tamb&eacute;m pelos concorrentes) por n&atilde;o implementar um hashing consistente e conciso, o que n&atilde;o &eacute; inteiramente correto dizer, pois tal chave pode ser facilmente definida. Mas, no futuro, haver&aacute; uma configura&ccedil;&atilde;o para uma <em>hash shard key</em>. Isso significa que o usu&aacute;rio &eacute; quem decide se uma <em>hash key</em> para <em>sharding</em> &eacute; &uacute;til ou se precisa (mesmo raramente) de algumas vantagens de escolher sua pr&oacute;pria chave sharding. Certamente isso aumenta a press&atilde;o sobre outros fornecedores e conduzir&aacute; &agrave; discuss&atilde;o proveitosa de quando usar uma <em>sharding key</em>.</p>
<p>O Cassandra &eacute; o pr&oacute;ximo na fila e ele tem ido muito bem, adicionando mais e melhores ​​caracter&iacute;sticas como melhores consultas. No entanto, os rumores n&atilde;o parar&atilde;o t&atilde;o cedo a respeito da execu&ccedil;&atilde;o de um cluster Cassandra, que n&atilde;o &eacute; muito f&aacute;cil e requer algum trabalho duro. Mas a quest&atilde;o mais interessante aqui certamente diz respeito ao DataStax. A nova companhia no topo do Cassandra − 25 milh&otilde;es de financiamento round C − est&aacute; abordando principalmente an&aacute;lises e alguns problemas operacionais. As an&aacute;lises surpreenderam muitos, porque no princ&iacute;pio o Cassandra n&atilde;o era conhecido como um mecanismo de consulta poderoso. Mas, como isso mudou na &uacute;ltima vers&atilde;o, os recursos de consulta podem ser suficientes para algumas an&aacute;lises modernas.</p>
<p>A velocidade de desenvolvimento do Redis tamb&eacute;m &eacute; not&aacute;vel. Apesar das afirma&ccedil;&otilde;es de que Salvatore n&atilde;o teria alcan&ccedil;ado nada sem a comunidade e a ajuda de Pieter Noordhuis, ele ainda se parece com um deslumbrante homem show. O sentinela de failover e scripts do lado do servidor com a linguagem de programa&ccedil;&atilde;o Lua s&atilde;o as mais recentes conquistas. A decis&atilde;o por Lua foi um pouco chocante para a comunidade porque todo mundo integra JavaScript como uma linguagem server-side. No entanto, Lua &eacute; uma linguagem limpa e vai ajudar o Redis abrir uma nova pandora de possibilidades.</p>
<p>O CouchBase tamb&eacute;m se parece com uma solu&ccedil;&atilde;o brilhante em termos de escalabilidade e lat&ecirc;ncia, apesar dos fortes ventos que Facebook e, portanto, Zynga est&atilde;o enfrentando agora. N&atilde;o &eacute; certamente uma m&aacute;quina de consulta &quot;quente&quot;, mas se puderem melhorar a consulta no futuro, o portf&oacute;lio estar&aacute; bastante completo. A fus&atilde;o com os fundadores do CouchDB foi definitivamente um passo firme e vale a pena ver as grandes influ&ecirc;ncias do CouchDB no Couchbase. Em cada confer&ecirc;ncia de banco de dados tamb&eacute;m &eacute; &quot;engra&ccedil;ado&quot; ouvir as discuss&otilde;es, se CouchDB est&aacute; melhor ou pior depois de Damien, Chris e Jan terem sa&iacute;do. Algumas pessoas at&eacute; podem dar ouvidos &agrave;s opini&otilde;es por a&iacute;, mas quem se importa, desde que o DB esteja indo bem. E parece que ele est&aacute;.</p>
<p>O &uacute;ltimo DB NoSQL a ser mencionado aqui &eacute; naturalmente o Riak, que tamb&eacute;m melhorou drasticamente em termos de funcionalidade e monitoriza&ccedil;&atilde;o. O Riak continua tendo uma boa reputa&ccedil;&atilde;o principalmente em termos de estabilidade: &quot;rocha s&oacute;lida, invis&iacute;vel e boa para o sono&quot;. O <em>fork</em> Riak CS tamb&eacute;m parece interessante em termos da modularidade dessa tecnologia.</p>
<h2>Interessantes rec&eacute;m-chegados</h2>
<p>Al&eacute;m dos l&iacute;deres de mercado, avaliar os rec&eacute;m-chegados tamb&eacute;m &eacute; sempre interessante. Vamos ver mais a fundo alguns deles.</p>
<p>O Elastic Search &eacute; certamente um dos mais novos produtos NoSQL e acabou de obter $10 milh&otilde;es em financiamento de s&eacute;rie A, e isso ocorreu por uma boa raz&atilde;o. Por ser um mecanismo de busca escal&aacute;vel em cima do Lucene, ele traz diversas vantagens como: a) uma empresa de primeiro n&iacute;vel na presta&ccedil;&atilde;o de servi&ccedil;os e b) aproveita todas as conquistas que o Lucene tem concebido nos &uacute;ltimos anos. O Elastic Search certamente ir&aacute; se infiltrar na ind&uacute;stria agora cada vez mais, atacando todos os grandes &quot;jogadores&quot; na &aacute;rea de informa&ccedil;&atilde;o semi-estruturada.</p>
<p>O Google tamb&eacute;m traz o seu pequeno, mas r&aacute;pido, LevelDB para o campo de batalha. E ele serve como base para muitas aplica&ccedil;&otilde;es que necessitam de requisitos espec&iacute;ficos, tais como integra&ccedil;&atilde;o de compress&atilde;o. Mesmo o Riak integrou o LevelDB. Ele continua a ser visto mesmo quando todas as novas bases de dados internas do Google, como Dremel ou Spanner, encontrar&atilde;o seu caminho para fora da empresa na forma de projetos open-source (como o Apache Drill ou Cloudera Impala).</p>
<p>Outra mudan&ccedil;a tect&ocirc;nica certamente foi o DynamoDB, no in&iacute;cio de 2012, considerado o servi&ccedil;o que mais cresce j&aacute; lan&ccedil;ado pela Amazon. &Eacute; a m&aacute;quina de escalar final. Novos recursos est&atilde;o chegando lentamente, mas o foco em SSDs e lat&ecirc;ncia &eacute; muito surpreendente.</p>
<p>Os banco de dados multimodelo tamb&eacute;m s&atilde;o de um segmento do qual vale a pena dar uma olhada. O <a href="https://github.com/orientechnologies/orientdb/">OrientDB</a>, seu representante famoso, nem de longe &eacute; um rec&eacute;m-chegado, al&eacute;m de estar melhorando suas capacidades muito rapidamente. Talvez em ritmo r&aacute;pido demais, porque alguns clientes devem estar felizes pois o OrientDB chegou &agrave; vers&atilde;o 1.0 (1.3 quando da tradu&ccedil;&atilde;o do artigo) e, portanto, espera-se que tenha aumentado muito mais a estabilidade. Suporte a grafos, documentos, chave-valor, combinados com transa&ccedil;&otilde;es e SQL s&atilde;o motivos suficientes para dar-lhe uma segunda chance. Especialmente o bom suporte SQL o torna interessante para as solu&ccedil;&otilde;es anal&iacute;ticas, tais como Penthao. Outro rec&eacute;m-chegado neste espa&ccedil;o &eacute; ArangoDB que est&aacute; se movendo r&aacute;pido e n&atilde;o recua ao se comparar em benchmarks contra os players estabelecidos.</p>
<p>No entanto, novamente o JSON nativo e o suporte a grafos poupam muito esfor&ccedil;o se novos requisitos t&ecirc;m de ser implementados e os novos dados t&ecirc;m um modelo diferente que deve ser persistido.</p>
<p>De longe, a maior surpresa deste ano foi o Datomic. Escrito por alguns &quot;rock stars&quot; da linguagem de programa&ccedil;&atilde;o Clojure e em um curto espa&ccedil;o de tempo incr&iacute;vel. O Datomic revela uma por&ccedil;&atilde;o de novos paradigmas, al&eacute;m disso, construiu o seu caminho at&eacute; chegar no radar ThoughtWorks com a recomenda&ccedil;&atilde;o &quot;fique de olho nele&quot;. E apesar de ser &quot;apenas&quot; uma camada em cima de bancos de dados estabelecidos ele traz uma enorme quantidade de vantagens, tais como:</p>
<ul> 
 <li>transa&ccedil;&otilde;es;</li> 
 <li>uma m&aacute;quina de tempo;</li> 
 <li>uma abordagem de consulta nova e poderosa;</li> 
 <li>uma nova abordagem de esquema;</li> 
 <li>caracteristicas de cache e expans&atilde;o.</li> 
</ul>
<p>Atualmente o DynamoDB, Riak, Couchbase, Infinispan suportam o SQL como o mecanismo de armazenamento subjacente. Permitindo tamb&eacute;m que se misture e consulte diferentes bancos de dados ao mesmo tempo. Muitos veteranos ficaram surpresos que tal mudan&ccedil;a de paradigma radical seja poss&iacute;vel. Felizmente &eacute;.</p>
<h2>Resumo</h2>
<p>Para concluir, vamos abordar tr&ecirc;s pontos:</p>
<ol start="1"> 
 <li>Alguns artigos novos do Eric Brewer sobre o teorema CAP deveriam ter vindo h&aacute; v&aacute;rios anos. <a href="http://www.infoq.com/articles/cap-twelve-years-later-how-the-rules-have-changed">Neste artigo</a>, Brewer afirma que &quot;2 de 3&quot; s&atilde;o ilus&oacute;rios, explicando os motivos, porque o mundo &eacute; mais complicado do que um simples CP/AP, isto &eacute;, uma escolha ACID/BASE. No entanto, milhares de palestras e artigos continuavam elogiando o teorema CAP, sem qualquer resenha cr&iacute;tica por anos. Michael Stonebraker foi o mais firme a censurar o movimento NoSQL (e o espa&ccedil;o NoSQL lhe deve muito), apontando para esses problemas h&aacute; alguns anos! Infelizmente, muitos n&atilde;o est&atilde;o ouvindo. Mas agora que Eric Brewer atualizou seu teorema, o tempo de simples instru&ccedil;&otilde;es CAP definitivamente acabou. Por favor, esteja bem na frente em apontar as verdadeiras e diversas implica&ccedil;&otilde;es do CAP.</li> 
 <li>Como se sabe, as fraquezas dos bancos de dados relacionais cl&aacute;ssicos t&ecirc;m levado empresas a experimentarem o NoSQL. Mas era apenas uma quest&atilde;o de tempo para o imp&eacute;rio contra-atacar. Sob o termo &quot;NewSQL&quot; podemos ver um s&eacute;rie de novos motores (como database.com, VoltDB, GenieDB, etc - ver figura 2), melhorar as solu&ccedil;&otilde;es cl&aacute;ssicas, sharding e solu&ccedil;&otilde;es de cloud computing. Gra&ccedil;as ao movimento NoSQL.</li> 
 <li>Mas, como muitos DBs tentam implementar cada caracter&iacute;stica, as fronteiras claras desaparecem.</li> 
 <li>A decis&atilde;o por um banco de dados est&aacute; ficando mais complicado do que nunca.</li> 
 <li>&Eacute; necess&aacute;rio conhecer cerca de 50 casos de uso e 50 DBs, al&eacute;m de responder a pelo menos 50 perguntas. Os &uacute;ltimos foram reunidos pelo autor em mais de dois anos de consultoria em NoSQL e podem ser encontrados aqui: <a href="http://nosql-database.org/select-the-right-database.html">Selecione o banco de dados certo</a>, <a href="http://www.infoq.com/presentations/Choosing-NoSQL-NewSQL">Escolhendo entre NoSQL e NewSQL</a> (ambos em ingl&ecirc;s).</li> 
 <li>&Eacute; senso comum que cada mudan&ccedil;a de tecnologia − desde cliente-servidor e antes − est&aacute; cerca de dez vezes mais caro para mudar. Por exemplo, a mudan&ccedil;a de Mainframe para cliente-servidor, de cliente-servidor para SOA, de SOA para Web, de SGBDR para persist&ecirc;ncia h&iacute;brida, etc. E, como consequ&ecirc;ncia, muitas empresas hesitam e relutam em adicionar NoSQL ao seu portf&oacute;lio. Mas sabe-se tamb&eacute;m que os primeiros a adotar e que est&atilde;o tentando tirar o melhor proveito de ambos os mundos e assim integram NoSQL ficar&atilde;o rapidamente melhor posicionados para o futuro. Neste sentido, as solu&ccedil;&otilde;es NoSQL chegaram para ficar e sempre ser&atilde;o &aacute;reas de avalia&ccedil;&otilde;es vantajosas.</li> 
</ol>
<h2>Sobre o autor</h2>
<p><img vspace="3" hspace="3" align="left" src="http://www.infoq.com/resource/articles/State-of-NoSQL/pt/resources/stefanEdlich.jpg" alt="" _href="img://stefanEdlich.jpg" _p="true" /><strong>Prof. Dr. Stefan Edlich</strong> &eacute; professor acad&ecirc;mico da universidade Beuth Hochschule de Tecnologia de Berlim. Escreveu mais de dez livros de TI para editoras como Apress, OReilly, Spektrum/Elsevier e outras. Atualmente dirige o <a href="http://nosql-database.org/">NoSQL Archive</a>, fez consultoria NoSQL, organiza confer&ecirc;ncias NoSQL, escreveu os dois primeiros livros NoSQL do mundo e &eacute; viciado em linguagem de programa&ccedil;&atilde;o Clojure.</p><br><br><br><br><br><br></body></html>