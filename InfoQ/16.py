<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /></head><body><h3>Entity Framework 6 Alpha 3は、コードファーストストアドプロシージャと接続回復性を持つ</h3><p><a target="_blank" href="http://www.infoq.com/news/2013/03/ef-6-alpha-3;jsessionid=455CB225154CC86C417FB2862BEA15B6"><em>原文(投稿日：2013/03/01)へのリンク</em></a></p> 
<div class="clearer-space">
 &nbsp;
</div> 
<div id="newsContent"> 
 <p>Microsoftは、fluent APIの補助によるinsert、update、deleteストアドプロシージャー、接続回復性、iceclowからのプルリクエスト、UnaiZorrillaとあなた自身がトランザクションを管理できる新しいDbContext APIシナリオをサポートする<a target="_blank" href="http://blogs.msdn.com/b/adonet/archive/2013/02/27/ef6-alpha-3-available-on-nuget.aspx">Entity Framework 6 Alpha 3</a>を発表した。<br /> <br /> Microsoftによると、3つのストアドプロシージャは、 &lt;type_name&gt;_Insert、&lt;type_name&gt;_Update、&lt;type_name&gt;_Deleteのようなフォーマットで作成されるべきである。さらにパラメータ名に対応したと、insertとupdateストアドプロシージャーは、識別子や計算とマークされたものを除き、すべてのプロパティをパラメータとして持つべきであり、deleteストアドプロシージャーは、エンティティのキー値のパラメータを持つべきである。</p> 
 <p>以下のコードスニペットを見てみよう。<br /> <br /> <code>public class Blog <br /> { <br /> &nbsp; public int BlogId { get; set; } <br /> &nbsp; public string Name { get; set; } <br /> &nbsp; public string Url { get; set; } <br /> } </code></p> 
 <p>上記のコードに対応したinsertストアドプロシージャが以下のように表示される。<br /> <br /> <code>CREATE PROCEDURE [dbo].[Blog_Insert] <br /> &nbsp; @Name varchar(max), <br /> &nbsp; @Url varchar(max) <br /> AS <br /> &nbsp; INSERT INTO [dbo].[Blogs] ([Name], [Url])<br /> &nbsp; VALUES (@Name, @Url)<br /> <br /> &nbsp; SELECT SCOPE_IDENTITY() AS BlogId </code></p> 
 <p>updateとdeleteのプロシージャーは以下のように表示される。<br /> <br /> <code>CREATE PROCEDURE [dbo].[Blog_Update] <br /> &nbsp; @BlogId int, <br /> &nbsp; @Name varchar(max), <br /> &nbsp; @Url varchar(max) <br /> AS <br /> &nbsp; UPDATE [dbo].[Blogs]&nbsp;&nbsp; SET [Name] = @Name, [Url] = @Url&nbsp;&nbsp;&nbsp; <br /> &nbsp; WHERE BlogId = @BlogId; </code><br /> <br /> <br /> <code>CREATE PROCEDURE [dbo].[Blog_Delete] <br /> &nbsp; @BlogId int <br /> AS <br /> &nbsp; DELETE FROM [dbo].[Blogs]<br /> &nbsp; WHERE BlogId = @BlogId </code></p> 
 <p>公式<a target="_blank" href="http://entityframework.codeplex.com/wikipage?title=Code%20First%20Insert%2fUpdate%2fDelete%20Stored%20Procedure%20Mapping">ドキュメント</a>ではすべての可能なシナリオを詳細に検討している。<br /> <br /> Entity Framework 6 Alpha 3には、一時的な接続障害からの自動復旧を可能にするa href=&quot;http://entityframework.codeplex.com/wikipage?title=Connection%20Resiliency%20Spec&quot;&gt;接続回復性が含まれている。これは、IRetriableExceptionDetectorとIRetryDelayStrategyインターフェイスを使ったIExecutionStrategyインターフェイスが実装されている。</p> 
 <p>公式な情報によると、Entity FrameworkはNonRetryingExecutionStrategy、DefaultSqlExecutionStrategy、ExecutionStrategy、SqlAzureExecutionStrategyといった4つのストラテジ実行とともにリリースされる。<br /> <br /> Entity Framework 6 Alpha 3は、カスタム移行操作とカスタム移行SQLジェネレータでそれらの操作をすることができる<a target="_blank" href="http://www.codeplex.com/site/users/view/iceclow">iceclow</a>からのプルリクエストを提供する。 MicrosoftでADO.NET Entity FrameworkのProgram Managerである<a target="_blank" href="http://romiller.com/2013/02/27/ef6-writing-your-own-code-first-migration-operations/">Rowan Miller氏</a>は、関連するコードとiceclowの実装を検討してきた。<br /> <br /> Alpha 3はまた、DbContext.Database.UseTransactionとDbContext.Database.BeginTransaction APIsの補助による自身のトランザクションの管理を含むプラグ可能な複数形と単数形サービスを提供する<a target="_blank" href="http://www.codeplex.com/site/users/view/UnaiZorrilla">UnaiZorrilla</a>からのプルリクエストも可能にする。</p> 
 <p id="lastElm">&nbsp;</p> 
</div> 
<p id="lastElm"></p><br><br><br><br><br><br></body></html>