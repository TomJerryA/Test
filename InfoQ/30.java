<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /></head><body><h3>The Performance of Dart 1.3 Is on Par with Node.js</h3><p>The Google Dart team has <a href="http://news.dartlang.org/2014/04/dart-13-dramatically-improves-server.html">announced Dart SDK 1.3</a>&nbsp;which improves the performance of asynchronous server-side code to the point that Dart VM is on par with Node.js,&nbsp;the later&nbsp;using another Google technology, the V8 engine.</p>
<p>Dart has a <a href="https://www.dartlang.org/performance/io/">new performance page</a>&nbsp;plotting the performance of the VM and the dart:io library by measuring the Requests/sec, Avg. Latency and Max Latency of an HTTP server in three cases:</p>
<ul> 
 <li> <p><a href="https://github.com/dart-lang/ton80/tree/master/lib/src/Serve/dart/server.dart">Hello</a> - a simple HTTP server responding with the string “world” to all requests.</p> </li> 
 <li> <p><a href="https://github.com/dart-lang/ton80/tree/master/lib/src/Serve/dart/server.dart">File</a>&nbsp;- an HTTP server returning the content of a 100KB file.</p> </li> 
 <li> <p><a href="https://github.com/dart-lang/ton80/tree/master/lib/src/Serve/dart/server.dart">JSON</a>&nbsp;- an HTTP server returning a dynamically generated JSON string.</p> </li> 
</ul>
<p>According to the charts, the Dart server now handles more than double the traffic for Hello and JSON scenarios and has a 30% improvement for File requests when compared to Dart 1.2. The Avg. Latency has consequently dropped to less than half for Hello and JSON and by ~30% for File. While in the past the Max Latency fluctuated massively around 125ms and 300ms for Hello and respectively JSON, now this value is quite stable at around 5 and 7 ms.</p>
<p>According to Anders Johnsen, a Google engineer, <a href="https://plus.google.com/u/0/wm/1/+AndersJohnsen/posts/Ez1Nj6D8EDr">Dart’s server-side performance was improved by</a>&nbsp;using the generational garbage collector, reducing the number of system calls handling asynchronous I/O on Mac OS and Linux, optimizing the VM compiler and code sections in dart:core and dart:async.</p>
<p>Using a different configuration, <a href="http://www.techempower.com/benchmarks/#section=data-r8&amp;hw=i7&amp;test=json">TechEmpower benchmarked Dart/nginx</a>&nbsp;in December 2013 doing ~35,000 JSON requests/sec while Node.js did ~70,000 Req/sec. Now that Dart handles more than double JSON requests, we can assume that the Dart VM is on par with Node.js. A future TechEmpower benchmark will&nbsp;probably confirm this. A simple HTTP server built with Google Go beats all frameworks/platform with ~215,000 JSON Req/sec. according to the same benchmark.</p><br><br><br><br><br><br></body></html>