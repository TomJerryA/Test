<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /></head><body><h3>Google Wants to Speed Up the Internet with QUIC</h3><p>QUIC (Quick UDP Internet Connections, pronounced 'quick') is a multiplexing transport protocol running over UDP with the main goal to have&nbsp;0-RTT connectivity overhead. Robbie Shade, a Google developer, has introduced QUIC in a recent <a href="http://www.youtube.com/watch?v=hQZ-0mXFmk8">video</a>, having the following main features:</p>
<p style="margin-left: 40px;">It has all the benefits of SPDY (multiplexing, priorities, etc.)</p>
<p style="margin-left: 40px;">0-RTT connections</p>
<p style="margin-left: 40px;">Packet pacing that reduces packet loss</p>
<p style="margin-left: 40px;">Forward error correction that reduces retransmission latency</p>
<p style="margin-left: 40px;">Adaptive congestion control (friendly to TCP), reducing reconnections for mobile clients</p>
<p style="margin-left: 40px;">Encryption equivalent to TLS</p>
<p style="margin-left: 40px;">Chrome can talk QUIC to Google today</p>
<p>QUIC deals with transmission reliability, missing or out of order packets, something which UDP does not do by default. Multiplexing in QUIC means that the protocol uses multiple channels to deliver data, so if a packet is lost in one stream of data, the others are not blocked waiting on&nbsp;the missing one as it happens with SPDY, which does multiplexing but over a single channel. This approach in QUIC solves the head-of-line blocking issue that may happen during TCP transmissions, said Shade.</p>
<p>A major benefit of using QUIC is the fact that it does not require a handshake step when making the first contact between a client and a server, somewhat similar to <a href="http://en.wikipedia.org/wiki/TCP_Fast_Open">TCP Fast Open</a>, which has been discussed since 2011 but has not seen broad adoption yet. According to Shade, the TCP handshake can take up to 300ms over a transatlantic connection if TLS is involved, while QUIC can cut that latency down to 100ms.</p>
<p>Another advantage of QUIC is that communication channels are not defined by IP+Port but by an ID, which makes it possible to continue a connection while switching networks, such as leaving a WiFi zone and entering&nbsp;a mobile one.</p>
<p>All QUIC connections are encrypted using a specific mechanism detailed in the <a href="https://docs.google.com/document/d/1g5nIXAIkN_Y-7XJW5K45IblHd_L2f5LTaDUDwvZ5L6g">QUIC Crypto document</a>.</p>
<p>When asked why not use an improved version of TCP +TLS, Shade said that while TCP and TLS are being improved, the protocol iteration and its deployment&nbsp;are very slow, and QUIC is deployed at the client level not the kernel one, being subject to much faster iterations, “weeks rather than years.”</p>
<p>According to Shade, SPDY could run on top of QUIC in the future, making it even better than what it is today. Some of the lessons learned and tested by Google in practice with QUIC could be incorporated into TCP in the future.</p>
<p>Currently there is a client and a server available in Chromium, and QUIC&nbsp;is used by google.com, GMail, YouTube, and other Google services.</p>
<p>Resources: <a href="http://www.youtube.com/watch?v=hQZ-0mXFmk8">QUIC video</a>, <a href="https://docs.google.com/presentation/d/13LSNCCvBijabnn1S4-Bb6wRlm79gN6hnPFHByEXXptk">QUIC video slides</a>, <a href="https://docs.google.com/document/d/1RNHkx_VvKWyWg6Lr8SZ-saqsQx7rFV-ev2jRFUoVD34/preview?sle=true">QUIC</a>&nbsp;– document detailing the protocol, <a href="https://docs.google.com/document/d/1WJvyZflAO2pq77yOLbp9NsGjC1CHetAXV8I0fQe-B_U">QUIC Wire Layout Specification</a>&nbsp;– specs of the wire frames, <a href="https://docs.google.com/document/d/1g5nIXAIkN_Y-7XJW5K45IblHd_L2f5LTaDUDwvZ5L6g">QUIC Crypto</a>, <a href="https://chrome.google.com/webstore/detail/spdy-indicator/mpbpobfflnpcgagjijhmgnchggcjblin/related?hl=en">SPDY Indicator extension</a>.</p><br><br><br><br><br><br></body></html>